id,description,vendor,cwe_category,cwe_explanation,cause,impact,published,cvss_score,severity,source,description_without_punct,description_normalized,explanation
CVE-2017-7651,"In Eclipse Mosquitto 1.4.14, a user can shutdown the Mosquitto server simply by filling the RAM memory with a lot of connections with large payload. This can be done without authentications if occur in connection phase of MQTT protocol.",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto 1.4.14, a user can shutdown the Mosquitto server simply by filling the RAM memory with a lot of connections with large payload. This can be done without authentications if occur in connection phase of MQTT protocol.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto 1.4.14, a user can shutdown the Mosquitto server simply by filling the RAM memory with a lot of connections with large payload. This can be done without authentications if occur in connection phase of MQTT protocol.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2018-04-24T14:29:00.437,,,nvd,in eclipse mosquitto 1414 a user can shutdown the mosquitto server simply by filling the ram memory with a lot of connections with large payload this can be done without authentications if occur in connection phase of mqtt protocol,"In Eclipse Mosquitto 1.4.14, a user can shutdown the Mosquitto server simply by filling the RAM memory with a lot of connections with large payload. This can be done without authentications if occur in connection phase of MQTT protocol.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2017-7652,"In Eclipse Mosquitto 1.4.14, if a Mosquitto instance is set running with a configuration file, then sending a HUP signal to server triggers the configuration to be reloaded from disk. If there are lots of clients connected so that there are no more file descriptors/sockets available (default limit t",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Input validation error leading to resource exhaustion Vendor: Eclipse Cause: Sending a HUP signal to a Mosquitto instance with a configuration file while having a large number of connected clients leads to resource exhaustion Impact: Denial of Service,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto 1.4.14, if a Mosquitto instance is set running with a configuration file, then sending a HUP signal to server triggers the configuration to be reloaded from disk. If there are lots of clients connected so that there are no more file descriptors/sockets available (default limit t  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Input validation error leading to resource exhaustion Vendor: Eclipse Cause: Sending a HUP signal to a Mosquitto instance with a configuration file while having a large number of connected clients leads to resource exhaustion Impact: Denial of Service","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto 1.4.14, if a Mosquitto instance is set running with a configuration file, then sending a HUP signal to server triggers the configuration to be reloaded from disk. If there are lots of clients connected so that there are no more file descriptors/sockets available (default limit t  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Input validation error leading to resource exhaustion Vendor: Eclipse Cause: Sending a HUP signal to a Mosquitto instance with a configuration file while having a large number of connected clients leads to resource exhaustion Impact: Denial of Service",2018-04-25T13:29:00.490,,,nvd,in eclipse mosquitto 1414 if a mosquitto instance is set running with a configuration file then sending a hup signal to server triggers the configuration to be reloaded from disk if there are lots of clients connected so that there are no more file descriptorssockets available default limit t,"In Eclipse Mosquitto 1.4.14, if a Mosquitto instance is set running with a configuration file, then sending a HUP signal to server triggers the configuration to be reloaded from disk. If there are lots of clients connected so that there are no more file descriptors/sockets available (default limit t",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Input validation error leading to resource exhaustion Vendor: Eclipse Cause: Sending a HUP signal to a Mosquitto instance with a configuration file while having a large number of connected clients leads to resource exhaustion Impact: Denial of Service
CVE-2017-7653,"The Eclipse Mosquitto broker up to version 1.4.15 does not reject strings that are not valid UTF-8. A malicious client could cause other clients that do reject invalid UTF-8 strings to disconnect themselves from the broker by sending a topic string which is not valid UTF-8, and so cause a denial of ",Eclipse Mosquitto,CWE-116,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 116 Explanation: CWE-116 is a vulnerability where an application fails to validate the length of input data before processing it, potentially leading to a buffer overflow or other memory-related issues. Vendor: Eclipse Cause: The Eclipse Mosquitto broker did not validate the length of the topic string sent by a client, allowing a malicious client to send a topic string that is not valid UTF-8. Impact: A malicious client could cause other clients that reject invalid UTF-8 strings to disconnect from the broker, potentially leading to a denial of service.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Eclipse Mosquitto broker up to version 1.4.15 does not reject strings that are not valid UTF-8. A malicious client could cause other clients that do reject invalid UTF-8 strings to disconnect themselves from the broker by sending a topic string which is not valid UTF-8, and so cause a denial of  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 116 Explanation: CWE-116 is a vulnerability where an application fails to validate the length of input data before processing it, potentially leading to a buffer overflow or other memory-related issues. Vendor: Eclipse Cause: The Eclipse Mosquitto broker did not validate the length of the topic string sent by a client, allowing a malicious client to send a topic string that is not valid UTF-8. Impact: A malicious client could cause other clients that reject invalid UTF-8 strings to disconnect from the broker, potentially leading to a denial of service.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Eclipse Mosquitto broker up to version 1.4.15 does not reject strings that are not valid UTF-8. A malicious client could cause other clients that do reject invalid UTF-8 strings to disconnect themselves from the broker by sending a topic string which is not valid UTF-8, and so cause a denial of  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 116 Explanation: CWE-116 is a vulnerability where an application fails to validate the length of input data before processing it, potentially leading to a buffer overflow or other memory-related issues. Vendor: Eclipse Cause: The Eclipse Mosquitto broker did not validate the length of the topic string sent by a client, allowing a malicious client to send a topic string that is not valid UTF-8. Impact: A malicious client could cause other clients that reject invalid UTF-8 strings to disconnect from the broker, potentially leading to a denial of service.",2018-06-05T20:29:00.293,,,nvd,the eclipse mosquitto broker up to version 1415 does not reject strings that are not valid utf8 a malicious client could cause other clients that do reject invalid utf8 strings to disconnect themselves from the broker by sending a topic string which is not valid utf8 and so cause a denial of,"The Eclipse Mosquitto broker up to version 1.4.15 does not reject strings that are not valid UTF-8. A malicious client could cause other clients that do reject invalid UTF-8 strings to disconnect themselves from the broker by sending a topic string which is not valid UTF-8, and so cause a denial of ","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 116 Explanation: CWE-116 is a vulnerability where an application fails to validate the length of input data before processing it, potentially leading to a buffer overflow or other memory-related issues. Vendor: Eclipse Cause: The Eclipse Mosquitto broker did not validate the length of the topic string sent by a client, allowing a malicious client to send a topic string that is not valid UTF-8. Impact: A malicious client could cause other clients that reject invalid UTF-8 strings to disconnect from the broker, potentially leading to a denial of service."
CVE-2017-7654,"In Eclipse Mosquitto 1.4.15 and earlier, a Memory Leak vulnerability was found within the Mosquitto Broker. Unauthenticated clients can send crafted CONNECT packets which could cause a denial of service in the Mosquitto Broker.",Eclipse Mosquitto,CWE-400,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto 1.4.15 and earlier, a Memory Leak vulnerability was found within the Mosquitto Broker. Unauthenticated clients can send crafted CONNECT packets which could cause a denial of service in the Mosquitto Broker.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto 1.4.15 and earlier, a Memory Leak vulnerability was found within the Mosquitto Broker. Unauthenticated clients can send crafted CONNECT packets which could cause a denial of service in the Mosquitto Broker.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2018-06-05T20:29:00.340,,,nvd,in eclipse mosquitto 1415 and earlier a memory leak vulnerability was found within the mosquitto broker unauthenticated clients can send crafted connect packets which could cause a denial of service in the mosquitto broker,"In Eclipse Mosquitto 1.4.15 and earlier, a Memory Leak vulnerability was found within the Mosquitto Broker. Unauthenticated clients can send crafted CONNECT packets which could cause a denial of service in the Mosquitto Broker.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2018-12543,"In Eclipse Mosquitto versions 1.5 to 1.5.2 inclusive, if a message is published to Mosquitto that has a topic starting with $, but that is not $SYS, e.g. $test/test, then an assert is triggered that should otherwise not be reachable and Mosquitto will exit.",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto versions 1.5 to 1.5.2 inclusive, if a message is published to Mosquitto that has a topic starting with $, but that is not $SYS, e.g. $test/test, then an assert is triggered that should otherwise not be reachable and Mosquitto will exit.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto versions 1.5 to 1.5.2 inclusive, if a message is published to Mosquitto that has a topic starting with $, but that is not $SYS, e.g. $test/test, then an assert is triggered that should otherwise not be reachable and Mosquitto will exit.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2018-11-15T15:29:01.350,,,nvd,in eclipse mosquitto versions 15 to 152 inclusive if a message is published to mosquitto that has a topic starting with  but that is not sys eg testtest then an assert is triggered that should otherwise not be reachable and mosquitto will exit,"In Eclipse Mosquitto versions 1.5 to 1.5.2 inclusive, if a message is published to Mosquitto that has a topic starting with $, but that is not $SYS, e.g. $test/test, then an assert is triggered that should otherwise not be reachable and Mosquitto will exit.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2018-20145,"Eclipse Mosquitto 1.5.x before 1.5.5 allows ACL bypass: if the option per_listener_settings was set to true, and the default listener was in use, and the default listener specified an acl_file, then the acl file was being ignored.",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Eclipse Mosquitto 1.5.x before 1.5.5 allows ACL bypass: if the option per_listener_settings was set to true, and the default listener was in use, and the default listener specified an acl_file, then the acl file was being ignored.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Eclipse Mosquitto 1.5.x before 1.5.5 allows ACL bypass: if the option per_listener_settings was set to true, and the default listener was in use, and the default listener specified an acl_file, then the acl file was being ignored.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264",2018-12-13T20:29:00.240,,,nvd,eclipse mosquitto 15x before 155 allows acl bypass if the option per_listener_settings was set to true and the default listener was in use and the default listener specified an acl_file then the acl file was being ignored,"Eclipse Mosquitto 1.5.x before 1.5.5 allows ACL bypass: if the option per_listener_settings was set to true, and the default listener was in use, and the default listener specified an acl_file, then the acl file was being ignored.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264
CVE-2018-12546,"In Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) when a client publishes a retained message to a topic, then has its access to that topic revoked, the retained message will still be published to clients that subscribe to that topic in the future. In some applications this may result in clients ",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) when a client publishes a retained message to a topic, then has its access to that topic revoked, the retained message will still be published to clients that subscribe to that topic in the future. In some applications this may result in clients  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) when a client publishes a retained message to a topic, then has its access to that topic revoked, the retained message will still be published to clients that subscribe to that topic in the future. In some applications this may result in clients  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862",2019-03-27T18:29:00.240,6.5,MEDIUM,nvd,in eclipse mosquitto version 10 to 155 inclusive when a client publishes a retained message to a topic then has its access to that topic revoked the retained message will still be published to clients that subscribe to that topic in the future in some applications this may result in clients,"In Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) when a client publishes a retained message to a topic, then has its access to that topic revoked, the retained message will still be published to clients that subscribe to that topic in the future. In some applications this may result in clients ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862
CVE-2018-12550,"When Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) is configured to use an ACL file, and that ACL file is empty, or contains only comments or blank lines, then Mosquitto will treat this as though no ACL file has been defined and use a default allow policy. The new behaviour is to have an empty ",Eclipse Mosquitto,CWE-248,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-248,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  When Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) is configured to use an ACL file, and that ACL file is empty, or contains only comments or blank lines, then Mosquitto will treat this as though no ACL file has been defined and use a default allow policy. The new behaviour is to have an empty  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-248","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  When Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) is configured to use an ACL file, and that ACL file is empty, or contains only comments or blank lines, then Mosquitto will treat this as though no ACL file has been defined and use a default allow policy. The new behaviour is to have an empty  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-248",2019-03-27T18:29:00.303,,,nvd,when eclipse mosquitto version 10 to 155 inclusive is configured to use an acl file and that acl file is empty or contains only comments or blank lines then mosquitto will treat this as though no acl file has been defined and use a default allow policy the new behaviour is to have an empty,"When Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) is configured to use an ACL file, and that ACL file is empty, or contains only comments or blank lines, then Mosquitto will treat this as though no ACL file has been defined and use a default allow policy. The new behaviour is to have an empty ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-248
CVE-2018-12551,"When Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) is configured to use a password file for authentication, any malformed data in the password file will be treated as valid. This typically means that the malformed data becomes a username and no password. If this occurs, clients can circumvent a",Eclipse Mosquitto,CWE-295,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-295 Explanation: The vulnerability allows clients to bypass authentication by submitting malformed data in the password file, effectively creating a valid username without a password. Vendor: Eclipse Cause: The software incorrectly processes malformed data in the password file, treating it as valid credentials. Impact: Clients can authenticate without providing valid credentials, potentially granting unauthorized access to the system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  When Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) is configured to use a password file for authentication, any malformed data in the password file will be treated as valid. This typically means that the malformed data becomes a username and no password. If this occurs, clients can circumvent a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-295 Explanation: The vulnerability allows clients to bypass authentication by submitting malformed data in the password file, effectively creating a valid username without a password. Vendor: Eclipse Cause: The software incorrectly processes malformed data in the password file, treating it as valid credentials. Impact: Clients can authenticate without providing valid credentials, potentially granting unauthorized access to the system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  When Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) is configured to use a password file for authentication, any malformed data in the password file will be treated as valid. This typically means that the malformed data becomes a username and no password. If this occurs, clients can circumvent a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-295 Explanation: The vulnerability allows clients to bypass authentication by submitting malformed data in the password file, effectively creating a valid username without a password. Vendor: Eclipse Cause: The software incorrectly processes malformed data in the password file, treating it as valid credentials. Impact: Clients can authenticate without providing valid credentials, potentially granting unauthorized access to the system.",2019-03-27T18:29:00.367,,,nvd,when eclipse mosquitto version 10 to 155 inclusive is configured to use a password file for authentication any malformed data in the password file will be treated as valid this typically means that the malformed data becomes a username and no password if this occurs clients can circumvent a,"When Eclipse Mosquitto version 1.0 to 1.5.5 (inclusive) is configured to use a password file for authentication, any malformed data in the password file will be treated as valid. This typically means that the malformed data becomes a username and no password. If this occurs, clients can circumvent a","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-295 Explanation: The vulnerability allows clients to bypass authentication by submitting malformed data in the password file, effectively creating a valid username without a password. Vendor: Eclipse Cause: The software incorrectly processes malformed data in the password file, treating it as valid credentials. Impact: Clients can authenticate without providing valid credentials, potentially granting unauthorized access to the system."
CVE-2017-7655,"In Eclipse Mosquitto version from 1.0 to 1.4.15, a Null Dereference vulnerability was found in the Mosquitto library which could lead to crashes for those applications using the library.",Eclipse Mosquitto,CWE-476,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: CWE-476 is a type of vulnerability where a program uses a value that may be a null pointer or zero-length array without checking whether the value is within the expected range of valid values. This can lead to a null or invalid pointer dereference, resulting in a crash or arbitrary code execution. Vendor: Eclipse Foundation Cause: The vulnerability was caused by improper handling of null pointers in the Mosquitto library. Impact: The vulnerability could lead to crashes for applications using the vulnerable Mosquitto library versions.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto version from 1.0 to 1.4.15, a Null Dereference vulnerability was found in the Mosquitto library which could lead to crashes for those applications using the library.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: CWE-476 is a type of vulnerability where a program uses a value that may be a null pointer or zero-length array without checking whether the value is within the expected range of valid values. This can lead to a null or invalid pointer dereference, resulting in a crash or arbitrary code execution. Vendor: Eclipse Foundation Cause: The vulnerability was caused by improper handling of null pointers in the Mosquitto library. Impact: The vulnerability could lead to crashes for applications using the vulnerable Mosquitto library versions.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto version from 1.0 to 1.4.15, a Null Dereference vulnerability was found in the Mosquitto library which could lead to crashes for those applications using the library.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: CWE-476 is a type of vulnerability where a program uses a value that may be a null pointer or zero-length array without checking whether the value is within the expected range of valid values. This can lead to a null or invalid pointer dereference, resulting in a crash or arbitrary code execution. Vendor: Eclipse Foundation Cause: The vulnerability was caused by improper handling of null pointers in the Mosquitto library. Impact: The vulnerability could lead to crashes for applications using the vulnerable Mosquitto library versions.",2019-03-27T20:29:02.987,7.5,HIGH,nvd,in eclipse mosquitto version from 10 to 1415 a null dereference vulnerability was found in the mosquitto library which could lead to crashes for those applications using the library,"In Eclipse Mosquitto version from 1.0 to 1.4.15, a Null Dereference vulnerability was found in the Mosquitto library which could lead to crashes for those applications using the library.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: CWE-476 is a type of vulnerability where a program uses a value that may be a null pointer or zero-length array without checking whether the value is within the expected range of valid values. This can lead to a null or invalid pointer dereference, resulting in a crash or arbitrary code execution. Vendor: Eclipse Foundation Cause: The vulnerability was caused by improper handling of null pointers in the Mosquitto library. Impact: The vulnerability could lead to crashes for applications using the vulnerable Mosquitto library versions."
CVE-2019-11778,"If an MQTT v5 client connects to Eclipse Mosquitto versions 1.6.0 to 1.6.4 inclusive, sets a last will and testament, sets a will delay interval, sets a session expiry interval, and the will delay interval is set longer than the session expiry interval, then a use after free error occurs, which has ",Eclipse Mosquitto,CWE-416,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  If an MQTT v5 client connects to Eclipse Mosquitto versions 1.6.0 to 1.6.4 inclusive, sets a last will and testament, sets a will delay interval, sets a session expiry interval, and the will delay interval is set longer than the session expiry interval, then a use after free error occurs, which has  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  If an MQTT v5 client connects to Eclipse Mosquitto versions 1.6.0 to 1.6.4 inclusive, sets a last will and testament, sets a will delay interval, sets a session expiry interval, and the will delay interval is set longer than the session expiry interval, then a use after free error occurs, which has  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416",2019-09-18T23:15:10.987,5.4,MEDIUM,nvd,if an mqtt v5 client connects to eclipse mosquitto versions 160 to 164 inclusive sets a last will and testament sets a will delay interval sets a session expiry interval and the will delay interval is set longer than the session expiry interval then a use after free error occurs which has,"If an MQTT v5 client connects to Eclipse Mosquitto versions 1.6.0 to 1.6.4 inclusive, sets a last will and testament, sets a will delay interval, sets a session expiry interval, and the will delay interval is set longer than the session expiry interval, then a use after free error occurs, which has ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416
CVE-2019-11779,"In Eclipse Mosquitto 1.5.0 to 1.6.5 inclusive, if a malicious MQTT client sends a SUBSCRIBE packet containing a topic that consists of approximately 65400 or more '/' characters, i.e. the topic hierarchy separator, then a stack overflow will occur.",Eclipse Mosquitto,CWE-120,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto 1.5.0 to 1.6.5 inclusive, if a malicious MQTT client sends a SUBSCRIBE packet containing a topic that consists of approximately 65400 or more '/' characters, i.e. the topic hierarchy separator, then a stack overflow will occur.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto 1.5.0 to 1.6.5 inclusive, if a malicious MQTT client sends a SUBSCRIBE packet containing a topic that consists of approximately 65400 or more '/' characters, i.e. the topic hierarchy separator, then a stack overflow will occur.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2019-09-19T14:15:10.573,6.5,MEDIUM,nvd,in eclipse mosquitto 150 to 165 inclusive if a malicious mqtt client sends a subscribe packet containing a topic that consists of approximately 65400 or more  characters ie the topic hierarchy separator then a stack overflow will occur,"In Eclipse Mosquitto 1.5.0 to 1.6.5 inclusive, if a malicious MQTT client sends a SUBSCRIBE packet containing a topic that consists of approximately 65400 or more '/' characters, i.e. the topic hierarchy separator, then a stack overflow will occur.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2021-28166,"In Eclipse Mosquitto version 2.0.0 to 2.0.9, if an authenticated client that had connected with MQTT v5 sent a crafted CONNACK message to the broker, a NULL pointer dereference would occur.",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto version 2.0.0 to 2.0.9, if an authenticated client that had connected with MQTT v5 sent a crafted CONNACK message to the broker, a NULL pointer dereference would occur.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto version 2.0.0 to 2.0.9, if an authenticated client that had connected with MQTT v5 sent a crafted CONNACK message to the broker, a NULL pointer dereference would occur.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2021-04-07T19:15:12.347,6.5,MEDIUM,nvd,in eclipse mosquitto version 200 to 209 if an authenticated client that had connected with mqtt v5 sent a crafted connack message to the broker a null pointer dereference would occur,"In Eclipse Mosquitto version 2.0.0 to 2.0.9, if an authenticated client that had connected with MQTT v5 sent a crafted CONNACK message to the broker, a NULL pointer dereference would occur.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2021-28825,The Windows Installation component of TIBCO Software Inc.'s TIBCO Messaging - Eclipse Mosquitto Distribution - Core - Community Edition and TIBCO Messaging - Eclipse Mosquitto Distribution - Core - Enterprise Edition contains a vulnerability that theoretically allows a low privileged attacker with l,Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Windows Installation component of TIBCO Software Inc.'s TIBCO Messaging - Eclipse Mosquitto Distribution - Core - Community Edition and TIBCO Messaging - Eclipse Mosquitto Distribution - Core - Enterprise Edition contains a vulnerability that theoretically allows a low privileged attacker with l  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Windows Installation component of TIBCO Software Inc.'s TIBCO Messaging - Eclipse Mosquitto Distribution - Core - Community Edition and TIBCO Messaging - Eclipse Mosquitto Distribution - Core - Enterprise Edition contains a vulnerability that theoretically allows a low privileged attacker with l  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254",2021-04-14T17:15:14.147,8.8,HIGH,nvd,the windows installation component of tibco software incs tibco messaging  eclipse mosquitto distribution  core  community edition and tibco messaging  eclipse mosquitto distribution  core  enterprise edition contains a vulnerability that theoretically allows a low privileged attacker with l,The Windows Installation component of TIBCO Software Inc.'s TIBCO Messaging - Eclipse Mosquitto Distribution - Core - Community Edition and TIBCO Messaging - Eclipse Mosquitto Distribution - Core - Enterprise Edition contains a vulnerability that theoretically allows a low privileged attacker with l,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254
CVE-2021-28826,The Windows Installation component of TIBCO Software Inc.'s TIBCO Messaging - Eclipse Mosquitto Distribution - Bridge - Community Edition and TIBCO Messaging - Eclipse Mosquitto Distribution - Bridge - Enterprise Edition contains a vulnerability that theoretically allows a low privileged attacker wi,Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269 Explanation: Improper Privilege Management Vendor: TIBCO Software Inc. Cause: The vulnerability allows an attacker with low privileges to potentially perform unauthorized actions. Impact: Theoretical possibility of unauthorized actions being performed.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Windows Installation component of TIBCO Software Inc.'s TIBCO Messaging - Eclipse Mosquitto Distribution - Bridge - Community Edition and TIBCO Messaging - Eclipse Mosquitto Distribution - Bridge - Enterprise Edition contains a vulnerability that theoretically allows a low privileged attacker wi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269 Explanation: Improper Privilege Management Vendor: TIBCO Software Inc. Cause: The vulnerability allows an attacker with low privileges to potentially perform unauthorized actions. Impact: Theoretical possibility of unauthorized actions being performed.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Windows Installation component of TIBCO Software Inc.'s TIBCO Messaging - Eclipse Mosquitto Distribution - Bridge - Community Edition and TIBCO Messaging - Eclipse Mosquitto Distribution - Bridge - Enterprise Edition contains a vulnerability that theoretically allows a low privileged attacker wi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269 Explanation: Improper Privilege Management Vendor: TIBCO Software Inc. Cause: The vulnerability allows an attacker with low privileges to potentially perform unauthorized actions. Impact: Theoretical possibility of unauthorized actions being performed.",2021-04-14T17:15:14.300,8.8,HIGH,nvd,the windows installation component of tibco software incs tibco messaging  eclipse mosquitto distribution  bridge  community edition and tibco messaging  eclipse mosquitto distribution  bridge  enterprise edition contains a vulnerability that theoretically allows a low privileged attacker wi,The Windows Installation component of TIBCO Software Inc.'s TIBCO Messaging - Eclipse Mosquitto Distribution - Bridge - Community Edition and TIBCO Messaging - Eclipse Mosquitto Distribution - Bridge - Enterprise Edition contains a vulnerability that theoretically allows a low privileged attacker wi,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269 Explanation: Improper Privilege Management Vendor: TIBCO Software Inc. Cause: The vulnerability allows an attacker with low privileges to potentially perform unauthorized actions. Impact: Theoretical possibility of unauthorized actions being performed.
CVE-2021-34431,"In Eclipse Mosquitto version 1.6 to 2.0.10, if an authenticated client that had connected with MQTT v5 sent a crafted CONNECT message to the broker a memory leak would occur, which could be used to provide a DoS attack against the broker.",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto version 1.6 to 2.0.10, if an authenticated client that had connected with MQTT v5 sent a crafted CONNECT message to the broker a memory leak would occur, which could be used to provide a DoS attack against the broker.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto version 1.6 to 2.0.10, if an authenticated client that had connected with MQTT v5 sent a crafted CONNECT message to the broker a memory leak would occur, which could be used to provide a DoS attack against the broker.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2021-07-22T14:15:08.050,6.5,MEDIUM,nvd,in eclipse mosquitto version 16 to 2010 if an authenticated client that had connected with mqtt v5 sent a crafted connect message to the broker a memory leak would occur which could be used to provide a dos attack against the broker,"In Eclipse Mosquitto version 1.6 to 2.0.10, if an authenticated client that had connected with MQTT v5 sent a crafted CONNECT message to the broker a memory leak would occur, which could be used to provide a DoS attack against the broker.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2021-34432,"In Eclipse Mosquitto versions 2.07 and earlier, the server will crash if the client tries to send a PUBLISH packet with topic length = 0.",Eclipse Mosquitto,CWE-400,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption (Resource Exhaustion) Vendor: Eclipse Foundation Cause: The server crashes when receiving a PUBLISH packet with a topic length of 0, leading to resource exhaustion. Impact: The server crashes, leading to denial of service.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto versions 2.07 and earlier, the server will crash if the client tries to send a PUBLISH packet with topic length = 0.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption (Resource Exhaustion) Vendor: Eclipse Foundation Cause: The server crashes when receiving a PUBLISH packet with a topic length of 0, leading to resource exhaustion. Impact: The server crashes, leading to denial of service.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto versions 2.07 and earlier, the server will crash if the client tries to send a PUBLISH packet with topic length = 0.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption (Resource Exhaustion) Vendor: Eclipse Foundation Cause: The server crashes when receiving a PUBLISH packet with a topic length of 0, leading to resource exhaustion. Impact: The server crashes, leading to denial of service.",2021-07-27T16:15:07.893,7.5,HIGH,nvd,in eclipse mosquitto versions 207 and earlier the server will crash if the client tries to send a publish packet with topic length  0,"In Eclipse Mosquitto versions 2.07 and earlier, the server will crash if the client tries to send a PUBLISH packet with topic length = 0.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption (Resource Exhaustion) Vendor: Eclipse Foundation Cause: The server crashes when receiving a PUBLISH packet with a topic length of 0, leading to resource exhaustion. Impact: The server crashes, leading to denial of service."
CVE-2021-34434,"In Eclipse Mosquitto versions 2.0 to 2.0.11, when using the dynamic security plugin, if the ability for a client to make subscriptions on a topic is revoked when a durable client is offline, then existing subscriptions for that client are not revoked.",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto versions 2.0 to 2.0.11, when using the dynamic security plugin, if the ability for a client to make subscriptions on a topic is revoked when a durable client is offline, then existing subscriptions for that client are not revoked.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto versions 2.0 to 2.0.11, when using the dynamic security plugin, if the ability for a client to make subscriptions on a topic is revoked when a durable client is offline, then existing subscriptions for that client are not revoked.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862",2021-08-30T20:15:07.363,5.3,MEDIUM,nvd,in eclipse mosquitto versions 20 to 2011 when using the dynamic security plugin if the ability for a client to make subscriptions on a topic is revoked when a durable client is offline then existing subscriptions for that client are not revoked,"In Eclipse Mosquitto versions 2.0 to 2.0.11, when using the dynamic security plugin, if the ability for a client to make subscriptions on a topic is revoked when a durable client is offline, then existing subscriptions for that client are not revoked.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862
CVE-2021-41039,"In versions 1.6 to 2.0.11 of Eclipse Mosquitto, an MQTT v5 client connecting with a large number of user-property properties could cause excessive CPU usage, leading to a loss of performance and possible denial of service.",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause excessive CPU usage and denial of service through a crafted MQTT v5 client connection with a large number of user-property properties. Vendor: Eclipse Cause: The software did not properly handle large numbers of user-property properties in MQTT v5 client connections. Impact: Excessive CPU usage and potential denial of service.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In versions 1.6 to 2.0.11 of Eclipse Mosquitto, an MQTT v5 client connecting with a large number of user-property properties could cause excessive CPU usage, leading to a loss of performance and possible denial of service.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause excessive CPU usage and denial of service through a crafted MQTT v5 client connection with a large number of user-property properties. Vendor: Eclipse Cause: The software did not properly handle large numbers of user-property properties in MQTT v5 client connections. Impact: Excessive CPU usage and potential denial of service.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In versions 1.6 to 2.0.11 of Eclipse Mosquitto, an MQTT v5 client connecting with a large number of user-property properties could cause excessive CPU usage, leading to a loss of performance and possible denial of service.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause excessive CPU usage and denial of service through a crafted MQTT v5 client connection with a large number of user-property properties. Vendor: Eclipse Cause: The software did not properly handle large numbers of user-property properties in MQTT v5 client connections. Impact: Excessive CPU usage and potential denial of service.",2021-12-01T20:15:07.933,7.5,HIGH,nvd,in versions 16 to 2011 of eclipse mosquitto an mqtt v5 client connecting with a large number of userproperty properties could cause excessive cpu usage leading to a loss of performance and possible denial of service,"In versions 1.6 to 2.0.11 of Eclipse Mosquitto, an MQTT v5 client connecting with a large number of user-property properties could cause excessive CPU usage, leading to a loss of performance and possible denial of service.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause excessive CPU usage and denial of service through a crafted MQTT v5 client connection with a large number of user-property properties. Vendor: Eclipse Cause: The software did not properly handle large numbers of user-property properties in MQTT v5 client connections. Impact: Excessive CPU usage and potential denial of service.
CVE-2023-28366,"The broker in Eclipse Mosquitto 1.3.2 through 2.x before 2.0.16 has a memory leak that can be abused remotely when a client sends many QoS 2 messages with duplicate message IDs, and fails to respond to PUBREC commands. This occurs because of mishandling of EAGAIN from the libc send function.",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The broker in Eclipse Mosquitto 1.3.2 through 2.x before 2.0.16 has a memory leak that can be abused remotely when a client sends many QoS 2 messages with duplicate message IDs, and fails to respond to PUBREC commands. This occurs because of mishandling of EAGAIN from the libc send function.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The broker in Eclipse Mosquitto 1.3.2 through 2.x before 2.0.16 has a memory leak that can be abused remotely when a client sends many QoS 2 messages with duplicate message IDs, and fails to respond to PUBREC commands. This occurs because of mishandling of EAGAIN from the libc send function.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2023-09-01T16:15:07.790,7.5,HIGH,nvd,the broker in eclipse mosquitto 132 through 2x before 2016 has a memory leak that can be abused remotely when a client sends many qos 2 messages with duplicate message ids and fails to respond to pubrec commands this occurs because of mishandling of eagain from the libc send function,"The broker in Eclipse Mosquitto 1.3.2 through 2.x before 2.0.16 has a memory leak that can be abused remotely when a client sends many QoS 2 messages with duplicate message IDs, and fails to respond to PUBREC commands. This occurs because of mishandling of EAGAIN from the libc send function.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2023-5632,"In Eclipse Mosquito before and including 2.0.5, establishing a connection to the mosquitto server without sending data causes the EPOLLOUT event to be added, which results excessive CPU consumption. This could be used by a malicious actor to perform denial of service type attack. This issue is fixed",Eclipse Mosquitto,CWE-400,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquito before and including 2.0.5, establishing a connection to the mosquitto server without sending data causes the EPOLLOUT event to be added, which results excessive CPU consumption. This could be used by a malicious actor to perform denial of service type attack. This issue is fixed  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquito before and including 2.0.5, establishing a connection to the mosquitto server without sending data causes the EPOLLOUT event to be added, which results excessive CPU consumption. This could be used by a malicious actor to perform denial of service type attack. This issue is fixed  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400",2023-10-18T09:15:10.080,7.5,HIGH,nvd,in eclipse mosquito before and including 205 establishing a connection to the mosquitto server without sending data causes the epollout event to be added which results excessive cpu consumption this could be used by a malicious actor to perform denial of service type attack this issue is fixed,"In Eclipse Mosquito before and including 2.0.5, establishing a connection to the mosquitto server without sending data causes the EPOLLOUT event to be added, which results excessive CPU consumption. This could be used by a malicious actor to perform denial of service type attack. This issue is fixed",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400
CVE-2024-8376,"In Eclipse Mosquitto up to version 2.0.18a, an attacker can achieve memory leaking, segmentation fault or heap-use-after-free by sending specific sequences of ""CONNECT"", ""DISCONNECT"", ""SUBSCRIBE"", ""UNSUBSCRIBE"" and ""PUBLISH"" packets.",Eclipse Mosquitto,CWE-416,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto up to version 2.0.18a, an attacker can achieve memory leaking, segmentation fault or heap-use-after-free by sending specific sequences of ""CONNECT"", ""DISCONNECT"", ""SUBSCRIBE"", ""UNSUBSCRIBE"" and ""PUBLISH"" packets.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto up to version 2.0.18a, an attacker can achieve memory leaking, segmentation fault or heap-use-after-free by sending specific sequences of ""CONNECT"", ""DISCONNECT"", ""SUBSCRIBE"", ""UNSUBSCRIBE"" and ""PUBLISH"" packets.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416",2024-10-11T16:15:14.860,7.5,HIGH,nvd,in eclipse mosquitto up to version 2018a an attacker can achieve memory leaking segmentation fault or heapuseafterfree by sending specific sequences of connect disconnect subscribe unsubscribe and publish packets,"In Eclipse Mosquitto up to version 2.0.18a, an attacker can achieve memory leaking, segmentation fault or heap-use-after-free by sending specific sequences of ""CONNECT"", ""DISCONNECT"", ""SUBSCRIBE"", ""UNSUBSCRIBE"" and ""PUBLISH"" packets.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416
CVE-2024-10525,"In Eclipse Mosquitto, from version 1.3.2 through 2.0.18, if a malicious broker sends a crafted SUBACK packet with no reason codes, a client using libmosquitto may make out of bounds memory access when acting in its on_subscribe callback. This affects the mosquitto_sub and mosquitto_rr clients.",Eclipse Mosquitto,CWE-125,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto, from version 1.3.2 through 2.0.18, if a malicious broker sends a crafted SUBACK packet with no reason codes, a client using libmosquitto may make out of bounds memory access when acting in its on_subscribe callback. This affects the mosquitto_sub and mosquitto_rr clients.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquitto, from version 1.3.2 through 2.0.18, if a malicious broker sends a crafted SUBACK packet with no reason codes, a client using libmosquitto may make out of bounds memory access when acting in its on_subscribe callback. This affects the mosquitto_sub and mosquitto_rr clients.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2024-10-30T12:15:02.787,9.8,CRITICAL,nvd,in eclipse mosquitto from version 132 through 2018 if a malicious broker sends a crafted suback packet with no reason codes a client using libmosquitto may make out of bounds memory access when acting in its on_subscribe callback this affects the mosquitto_sub and mosquitto_rr clients,"In Eclipse Mosquitto, from version 1.3.2 through 2.0.18, if a malicious broker sends a crafted SUBACK packet with no reason codes, a client using libmosquitto may make out of bounds memory access when acting in its on_subscribe callback. This affects the mosquitto_sub and mosquitto_rr clients.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2024-3935,"In Eclipse Mosquito, versions from 2.0.0 through 2.0.18, if a Mosquitto broker is configured to create an outgoing bridge connection, and that bridge connection has an incoming topic configured that makes use of topic remapping, then if the remote connection sends a crafted PUBLISH packet to the bro",Eclipse Mosquitto,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquito, versions from 2.0.0 through 2.0.18, if a Mosquitto broker is configured to create an outgoing bridge connection, and that bridge connection has an incoming topic configured that makes use of topic remapping, then if the remote connection sends a crafted PUBLISH packet to the bro  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Mosquito, versions from 2.0.0 through 2.0.18, if a Mosquitto broker is configured to create an outgoing bridge connection, and that bridge connection has an incoming topic configured that makes use of topic remapping, then if the remote connection sends a crafted PUBLISH packet to the bro  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2024-10-30T12:15:03.090,6.5,MEDIUM,nvd,in eclipse mosquito versions from 200 through 2018 if a mosquitto broker is configured to create an outgoing bridge connection and that bridge connection has an incoming topic configured that makes use of topic remapping then if the remote connection sends a crafted publish packet to the bro,"In Eclipse Mosquito, versions from 2.0.0 through 2.0.18, if a Mosquitto broker is configured to create an outgoing bridge connection, and that bridge connection has an incoming topic configured that makes use of topic remapping, then if the remote connection sends a crafted PUBLISH packet to the bro",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2023-37781,An issue in the emqx_sn plugin of EMQX v4.3.8 allows attackers to execute a directory traversal via uploading a crafted .txt file.,EMQX,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue in the emqx_sn plugin of EMQX v4.3.8 allows attackers to execute a directory traversal via uploading a crafted .txt file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue in the emqx_sn plugin of EMQX v4.3.8 allows attackers to execute a directory traversal via uploading a crafted .txt file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22",2023-07-17T20:15:13.623,6.5,MEDIUM,nvd,an issue in the emqx_sn plugin of emqx v438 allows attackers to execute a directory traversal via uploading a crafted txt file,An issue in the emqx_sn plugin of EMQX v4.3.8 allows attackers to execute a directory traversal via uploading a crafted .txt file.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22
CVE-2024-10964,A vulnerability classified as critical has been found in emqx neuron up to 2.10.0. Affected is the function handle_add_plugin in the library cmd.library of the file plugins/restful/plugin_handle.c. The manipulation leads to buffer overflow. It is possible to launch the attack remotely. It is recomme,EMQX,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability classified as critical has been found in emqx neuron up to 2.10.0. Affected is the function handle_add_plugin in the library cmd.library of the file plugins/restful/plugin_handle.c. The manipulation leads to buffer overflow. It is possible to launch the attack remotely. It is recomme  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability classified as critical has been found in emqx neuron up to 2.10.0. Affected is the function handle_add_plugin in the library cmd.library of the file plugins/restful/plugin_handle.c. The manipulation leads to buffer overflow. It is possible to launch the attack remotely. It is recomme  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2024-11-07T17:15:06.500,6.3,MEDIUM,nvd,a vulnerability classified as critical has been found in emqx neuron up to 2100 affected is the function handle_add_plugin in the library cmdlibrary of the file pluginsrestfulplugin_handlec the manipulation leads to buffer overflow it is possible to launch the attack remotely it is recomme,A vulnerability classified as critical has been found in emqx neuron up to 2.10.0. Affected is the function handle_add_plugin in the library cmd.library of the file plugins/restful/plugin_handle.c. The manipulation leads to buffer overflow. It is possible to launch the attack remotely. It is recomme,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2024-10965,A vulnerability classified as problematic was found in emqx neuron up to 2.10.0. Affected by this vulnerability is an unknown functionality of the file /api/v2/schema of the component JSON File Handler. The manipulation leads to information disclosure. The attack can be launched remotely. The patch,EMQX,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability classified as problematic was found in emqx neuron up to 2.10.0. Affected by this vulnerability is an unknown functionality of the file /api/v2/schema of the component JSON File Handler. The manipulation leads to information disclosure. The attack can be launched remotely. The patch  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability classified as problematic was found in emqx neuron up to 2.10.0. Affected by this vulnerability is an unknown functionality of the file /api/v2/schema of the component JSON File Handler. The manipulation leads to information disclosure. The attack can be launched remotely. The patch  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2024-11-07T17:15:06.890,4.3,MEDIUM,nvd,a vulnerability classified as problematic was found in emqx neuron up to 2100 affected by this vulnerability is an unknown functionality of the file apiv2schema of the component json file handler the manipulation leads to information disclosure the attack can be launched remotely the patch,A vulnerability classified as problematic was found in emqx neuron up to 2.10.0. Affected by this vulnerability is an unknown functionality of the file /api/v2/schema of the component JSON File Handler. The manipulation leads to information disclosure. The attack can be launched remotely. The patch,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2021-33176,"VerneMQ MQTT Broker versions prior to 1.12.0 are vulnerable to a denial of service attack as a result of excessive memory consumption due to the handling of untrusted inputs. These inputs cause the message broker to consume large amounts of memory, resulting in the application being terminated by th",VerneMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  VerneMQ MQTT Broker versions prior to 1.12.0 are vulnerable to a denial of service attack as a result of excessive memory consumption due to the handling of untrusted inputs. These inputs cause the message broker to consume large amounts of memory, resulting in the application being terminated by th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  VerneMQ MQTT Broker versions prior to 1.12.0 are vulnerable to a denial of service attack as a result of excessive memory consumption due to the handling of untrusted inputs. These inputs cause the message broker to consume large amounts of memory, resulting in the application being terminated by th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2021-06-08T15:15:07.977,7.5,HIGH,nvd,vernemq mqtt broker versions prior to 1120 are vulnerable to a denial of service attack as a result of excessive memory consumption due to the handling of untrusted inputs these inputs cause the message broker to consume large amounts of memory resulting in the application being terminated by th,"VerneMQ MQTT Broker versions prior to 1.12.0 are vulnerable to a denial of service attack as a result of excessive memory consumption due to the handling of untrusted inputs. These inputs cause the message broker to consume large amounts of memory, resulting in the application being terminated by th",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2024-44459,A memory allocation issue in vernemq v2.0.1 allows attackers to cause a Denial of Service (DoS) via excessive memory consumption.,VerneMQ,CWE-400,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion') Vendor: Erlang Solutions Cause: Memory allocation issue in vernemq v2.0.1 Impact: Denial of Service (DoS) via excessive memory consumption,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A memory allocation issue in vernemq v2.0.1 allows attackers to cause a Denial of Service (DoS) via excessive memory consumption.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion') Vendor: Erlang Solutions Cause: Memory allocation issue in vernemq v2.0.1 Impact: Denial of Service (DoS) via excessive memory consumption","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A memory allocation issue in vernemq v2.0.1 allows attackers to cause a Denial of Service (DoS) via excessive memory consumption.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion') Vendor: Erlang Solutions Cause: Memory allocation issue in vernemq v2.0.1 Impact: Denial of Service (DoS) via excessive memory consumption",2024-09-12T20:15:04.887,7.5,HIGH,nvd,a memory allocation issue in vernemq v201 allows attackers to cause a denial of service dos via excessive memory consumption,A memory allocation issue in vernemq v2.0.1 allows attackers to cause a Denial of Service (DoS) via excessive memory consumption.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion') Vendor: Erlang Solutions Cause: Memory allocation issue in vernemq v2.0.1 Impact: Denial of Service (DoS) via excessive memory consumption
CVE-2013-1069,"Ubuntu Metal as a Service (MaaS) 1.2 and 1.4 uses world-readable permissions for txlongpoll.yaml, which allows local users to obtain RabbitMQ authentication credentials by reading the file.",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 770,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Ubuntu Metal as a Service (MaaS) 1.2 and 1.4 uses world-readable permissions for txlongpoll.yaml, which allows local users to obtain RabbitMQ authentication credentials by reading the file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 770","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Ubuntu Metal as a Service (MaaS) 1.2 and 1.4 uses world-readable permissions for txlongpoll.yaml, which allows local users to obtain RabbitMQ authentication credentials by reading the file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 770",2014-02-17T16:55:08.053,,,nvd,ubuntu metal as a service maas 12 and 14 uses worldreadable permissions for txlongpollyaml which allows local users to obtain rabbitmq authentication credentials by reading the file,"Ubuntu Metal as a Service (MaaS) 1.2 and 1.4 uses world-readable permissions for txlongpoll.yaml, which allows local users to obtain RabbitMQ authentication credentials by reading the file.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 770
CVE-2015-0862,"Multiple cross-site scripting (XSS) vulnerabilities in the management web UI in the RabbitMQ management plugin before 3.4.3 allow remote authenticated users to inject arbitrary web script or HTML via (1) message details when a message is unqueued, such as headers or arguments; (2) policy names, whic",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple cross-site scripting (XSS) vulnerabilities in the management web UI in the RabbitMQ management plugin before 3.4.3 allow remote authenticated users to inject arbitrary web script or HTML via (1) message details when a message is unqueued, such as headers or arguments; (2) policy names, whic  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple cross-site scripting (XSS) vulnerabilities in the management web UI in the RabbitMQ management plugin before 3.4.3 allow remote authenticated users to inject arbitrary web script or HTML via (1) message details when a message is unqueued, such as headers or arguments; (2) policy names, whic  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2015-01-18T18:59:01.583,,,nvd,multiple crosssite scripting xss vulnerabilities in the management web ui in the rabbitmq management plugin before 343 allow remote authenticated users to inject arbitrary web script or html via 1 message details when a message is unqueued such as headers or arguments 2 policy names whic,"Multiple cross-site scripting (XSS) vulnerabilities in the management web UI in the RabbitMQ management plugin before 3.4.3 allow remote authenticated users to inject arbitrary web script or HTML via (1) message details when a message is unqueued, such as headers or arguments; (2) policy names, whic",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2014-9494,RabbitMQ before 3.4.0 allows remote attackers to bypass the loopback_users restriction via a crafted X-Forwareded-For header.,RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 306 Explanation: The vulnerability allows remote attackers to bypass authentication by manipulating the X-Forwarded-For header. Vendor: RabbitMQ Cause: The vulnerability exists in RabbitMQ before version 3.4.0 due to improper handling of the X-Forwarded-For header. Impact: Remote attackers can bypass the loopback_users restriction, potentially gaining unauthorized access to the system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ before 3.4.0 allows remote attackers to bypass the loopback_users restriction via a crafted X-Forwareded-For header.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 306 Explanation: The vulnerability allows remote attackers to bypass authentication by manipulating the X-Forwarded-For header. Vendor: RabbitMQ Cause: The vulnerability exists in RabbitMQ before version 3.4.0 due to improper handling of the X-Forwarded-For header. Impact: Remote attackers can bypass the loopback_users restriction, potentially gaining unauthorized access to the system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ before 3.4.0 allows remote attackers to bypass the loopback_users restriction via a crafted X-Forwareded-For header.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 306 Explanation: The vulnerability allows remote attackers to bypass authentication by manipulating the X-Forwarded-For header. Vendor: RabbitMQ Cause: The vulnerability exists in RabbitMQ before version 3.4.0 due to improper handling of the X-Forwarded-For header. Impact: Remote attackers can bypass the loopback_users restriction, potentially gaining unauthorized access to the system.",2015-01-20T15:59:08.233,,,nvd,rabbitmq before 340 allows remote attackers to bypass the loopback_users restriction via a crafted xforwarededfor header,RabbitMQ before 3.4.0 allows remote attackers to bypass the loopback_users restriction via a crafted X-Forwareded-For header.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 306 Explanation: The vulnerability allows remote attackers to bypass authentication by manipulating the X-Forwarded-For header. Vendor: RabbitMQ Cause: The vulnerability exists in RabbitMQ before version 3.4.0 due to improper handling of the X-Forwarded-For header. Impact: Remote attackers can bypass the loopback_users restriction, potentially gaining unauthorized access to the system."
CVE-2014-9649,"Cross-site scripting (XSS) vulnerability in the management plugin in RabbitMQ 2.1.0 through 3.4.x before 3.4.1 allows remote attackers to inject arbitrary web script or HTML via the path info to api/, which is not properly handled in an error message.",RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows remote attackers to inject malicious scripts into web pages viewed by other users. This is caused by improper neutralization of special elements in output used by the web application, leading to XSS attacks. Vendor: RabbitMQ Cause: Failure to properly handle the path info to the /api/ endpoint in the management plugin, allowing arbitrary web script or HTML to be injected. Impact: Remote attackers can inject arbitrary web script or HTML via the path info to the /api/ endpoint, potentially leading to unauthorized actions, data theft, or other malicious activities.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site scripting (XSS) vulnerability in the management plugin in RabbitMQ 2.1.0 through 3.4.x before 3.4.1 allows remote attackers to inject arbitrary web script or HTML via the path info to api/, which is not properly handled in an error message.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows remote attackers to inject malicious scripts into web pages viewed by other users. This is caused by improper neutralization of special elements in output used by the web application, leading to XSS attacks. Vendor: RabbitMQ Cause: Failure to properly handle the path info to the /api/ endpoint in the management plugin, allowing arbitrary web script or HTML to be injected. Impact: Remote attackers can inject arbitrary web script or HTML via the path info to the /api/ endpoint, potentially leading to unauthorized actions, data theft, or other malicious activities.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site scripting (XSS) vulnerability in the management plugin in RabbitMQ 2.1.0 through 3.4.x before 3.4.1 allows remote attackers to inject arbitrary web script or HTML via the path info to api/, which is not properly handled in an error message.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows remote attackers to inject malicious scripts into web pages viewed by other users. This is caused by improper neutralization of special elements in output used by the web application, leading to XSS attacks. Vendor: RabbitMQ Cause: Failure to properly handle the path info to the /api/ endpoint in the management plugin, allowing arbitrary web script or HTML to be injected. Impact: Remote attackers can inject arbitrary web script or HTML via the path info to the /api/ endpoint, potentially leading to unauthorized actions, data theft, or other malicious activities.",2015-01-27T20:02:39.637,,,nvd,crosssite scripting xss vulnerability in the management plugin in rabbitmq 210 through 34x before 341 allows remote attackers to inject arbitrary web script or html via the path info to api which is not properly handled in an error message,"Cross-site scripting (XSS) vulnerability in the management plugin in RabbitMQ 2.1.0 through 3.4.x before 3.4.1 allows remote attackers to inject arbitrary web script or HTML via the path info to api/, which is not properly handled in an error message.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows remote attackers to inject malicious scripts into web pages viewed by other users. This is caused by improper neutralization of special elements in output used by the web application, leading to XSS attacks. Vendor: RabbitMQ Cause: Failure to properly handle the path info to the /api/ endpoint in the management plugin, allowing arbitrary web script or HTML to be injected. Impact: Remote attackers can inject arbitrary web script or HTML via the path info to the /api/ endpoint, potentially leading to unauthorized actions, data theft, or other malicious activities."
CVE-2014-9650,CRLF injection vulnerability in the management plugin in RabbitMQ 2.1.0 through 3.4.x before 3.4.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via the download parameter to api/definitions.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  CRLF injection vulnerability in the management plugin in RabbitMQ 2.1.0 through 3.4.x before 3.4.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via the download parameter to api/definitions.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  CRLF injection vulnerability in the management plugin in RabbitMQ 2.1.0 through 3.4.x before 3.4.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via the download parameter to api/definitions.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89",2015-01-27T20:03:15.080,,,nvd,crlf injection vulnerability in the management plugin in rabbitmq 210 through 34x before 341 allows remote attackers to inject arbitrary http headers and conduct http response splitting attacks via the download parameter to apidefinitions,CRLF injection vulnerability in the management plugin in RabbitMQ 2.1.0 through 3.4.x before 3.4.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via the download parameter to api/definitions.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89
CVE-2014-9568,"puppetlabs-rabbitmq 3.0 through 4.1 stores the RabbitMQ Erlang cookie value in the facts of a node, which allows local users to obtain sensitive information as demonstrated by using Facter.",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows local users to obtain sensitive information by accessing the RabbitMQ Erlang cookie value stored in the node facts. Vendor: Puppet Cause: Storing the sensitive RabbitMQ Erlang cookie value in the node facts. Impact: Exposure of sensitive information to local users.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  puppetlabs-rabbitmq 3.0 through 4.1 stores the RabbitMQ Erlang cookie value in the facts of a node, which allows local users to obtain sensitive information as demonstrated by using Facter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows local users to obtain sensitive information by accessing the RabbitMQ Erlang cookie value stored in the node facts. Vendor: Puppet Cause: Storing the sensitive RabbitMQ Erlang cookie value in the node facts. Impact: Exposure of sensitive information to local users.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  puppetlabs-rabbitmq 3.0 through 4.1 stores the RabbitMQ Erlang cookie value in the facts of a node, which allows local users to obtain sensitive information as demonstrated by using Facter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows local users to obtain sensitive information by accessing the RabbitMQ Erlang cookie value stored in the node facts. Vendor: Puppet Cause: Storing the sensitive RabbitMQ Erlang cookie value in the node facts. Impact: Exposure of sensitive information to local users.",2015-02-03T16:59:07.470,,,nvd,puppetlabsrabbitmq 30 through 41 stores the rabbitmq erlang cookie value in the facts of a node which allows local users to obtain sensitive information as demonstrated by using facter,"puppetlabs-rabbitmq 3.0 through 4.1 stores the RabbitMQ Erlang cookie value in the facts of a node, which allows local users to obtain sensitive information as demonstrated by using Facter.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows local users to obtain sensitive information by accessing the RabbitMQ Erlang cookie value stored in the node facts. Vendor: Puppet Cause: Storing the sensitive RabbitMQ Erlang cookie value in the node facts. Impact: Exposure of sensitive information to local users.
CVE-2015-6858,HP Insight Control server provisioning before 7.5.0 RabbitMQ allows remote attackers to obtain sensitive information via unspecified vectors.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HP Insight Control server provisioning before 7.5.0 RabbitMQ allows remote attackers to obtain sensitive information via unspecified vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HP Insight Control server provisioning before 7.5.0 RabbitMQ allows remote attackers to obtain sensitive information via unspecified vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2016-01-05T11:59:04.427,,,nvd,hp insight control server provisioning before 750 rabbitmq allows remote attackers to obtain sensitive information via unspecified vectors,HP Insight Control server provisioning before 7.5.0 RabbitMQ allows remote attackers to obtain sensitive information via unspecified vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2015-5329,"The TripleO Heat templates (tripleo-heat-templates), as used in Red Hat Enterprise Linux OpenStack Platform 7.0, do not properly use the configured RabbitMQ credentials, which makes it easier for remote attackers to obtain access to services in deployed overclouds by leveraging knowledge of the defa",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The TripleO Heat templates (tripleo-heat-templates), as used in Red Hat Enterprise Linux OpenStack Platform 7.0, do not properly use the configured RabbitMQ credentials, which makes it easier for remote attackers to obtain access to services in deployed overclouds by leveraging knowledge of the defa  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The TripleO Heat templates (tripleo-heat-templates), as used in Red Hat Enterprise Linux OpenStack Platform 7.0, do not properly use the configured RabbitMQ credentials, which makes it easier for remote attackers to obtain access to services in deployed overclouds by leveraging knowledge of the defa  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522",2016-04-11T21:59:05.100,,,nvd,the tripleo heat templates tripleoheattemplates as used in red hat enterprise linux openstack platform 70 do not properly use the configured rabbitmq credentials which makes it easier for remote attackers to obtain access to services in deployed overclouds by leveraging knowledge of the defa,"The TripleO Heat templates (tripleo-heat-templates), as used in Red Hat Enterprise Linux OpenStack Platform 7.0, do not properly use the configured RabbitMQ credentials, which makes it easier for remote attackers to obtain access to services in deployed overclouds by leveraging knowledge of the defa",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522
CVE-2016-0929,"The metrics-collection component in RabbitMQ for Pivotal Cloud Foundry (PCF) 1.6.x before 1.6.4 logs command lines of failed commands, which might allow context-dependent attackers to obtain sensitive information by reading the log data, as demonstrated by a syslog message that contains credentials ",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Information exposure through logging sensitive information Vendor: Pivotal Cause: The metrics-collection component in RabbitMQ for Pivotal Cloud Foundry (PCF) logs command lines of failed commands Impact: Sensitive information such as credentials might be exposed through the log data,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The metrics-collection component in RabbitMQ for Pivotal Cloud Foundry (PCF) 1.6.x before 1.6.4 logs command lines of failed commands, which might allow context-dependent attackers to obtain sensitive information by reading the log data, as demonstrated by a syslog message that contains credentials  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Information exposure through logging sensitive information Vendor: Pivotal Cause: The metrics-collection component in RabbitMQ for Pivotal Cloud Foundry (PCF) logs command lines of failed commands Impact: Sensitive information such as credentials might be exposed through the log data","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The metrics-collection component in RabbitMQ for Pivotal Cloud Foundry (PCF) 1.6.x before 1.6.4 logs command lines of failed commands, which might allow context-dependent attackers to obtain sensitive information by reading the log data, as demonstrated by a syslog message that contains credentials  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Information exposure through logging sensitive information Vendor: Pivotal Cause: The metrics-collection component in RabbitMQ for Pivotal Cloud Foundry (PCF) logs command lines of failed commands Impact: Sensitive information such as credentials might be exposed through the log data",2016-09-18T02:59:09.980,,,nvd,the metricscollection component in rabbitmq for pivotal cloud foundry pcf 16x before 164 logs command lines of failed commands which might allow contextdependent attackers to obtain sensitive information by reading the log data as demonstrated by a syslog message that contains credentials,"The metrics-collection component in RabbitMQ for Pivotal Cloud Foundry (PCF) 1.6.x before 1.6.4 logs command lines of failed commands, which might allow context-dependent attackers to obtain sensitive information by reading the log data, as demonstrated by a syslog message that contains credentials ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Information exposure through logging sensitive information Vendor: Pivotal Cause: The metrics-collection component in RabbitMQ for Pivotal Cloud Foundry (PCF) logs command lines of failed commands Impact: Sensitive information such as credentials might be exposed through the log data
CVE-2015-8786,The Management plugin in RabbitMQ before 3.6.1 allows remote authenticated users with certain privileges to cause a denial of service (resource consumption) via the (1) lengths_age or (2) lengths_incr parameter.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Management plugin in RabbitMQ before 3.6.1 allows remote authenticated users with certain privileges to cause a denial of service (resource consumption) via the (1) lengths_age or (2) lengths_incr parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Management plugin in RabbitMQ before 3.6.1 allows remote authenticated users with certain privileges to cause a denial of service (resource consumption) via the (1) lengths_age or (2) lengths_incr parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2016-12-09T20:59:00.157,,,nvd,the management plugin in rabbitmq before 361 allows remote authenticated users with certain privileges to cause a denial of service resource consumption via the 1 lengths_age or 2 lengths_incr parameter,The Management plugin in RabbitMQ before 3.6.1 allows remote authenticated users with certain privileges to cause a denial of service (resource consumption) via the (1) lengths_age or (2) lengths_incr parameter.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2016-9877,"An issue was discovered in Pivotal RabbitMQ 3.x before 3.5.8 and 3.6.x before 3.6.6 and RabbitMQ for PCF 1.5.x before 1.5.20, 1.6.x before 1.6.12, and 1.7.x before 1.7.7. MQTT (MQ Telemetry Transport) connection authentication with a username/password pair succeeds if an existing username is provide",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in Pivotal RabbitMQ 3.x before 3.5.8 and 3.6.x before 3.6.6 and RabbitMQ for PCF 1.5.x before 1.5.20, 1.6.x before 1.6.12, and 1.7.x before 1.7.7. MQTT (MQ Telemetry Transport) connection authentication with a username/password pair succeeds if an existing username is provide  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in Pivotal RabbitMQ 3.x before 3.5.8 and 3.6.x before 3.6.6 and RabbitMQ for PCF 1.5.x before 1.5.20, 1.6.x before 1.6.12, and 1.7.x before 1.7.7. MQTT (MQ Telemetry Transport) connection authentication with a username/password pair succeeds if an existing username is provide  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287",2016-12-29T09:59:00.790,,,nvd,an issue was discovered in pivotal rabbitmq 3x before 358 and 36x before 366 and rabbitmq for pcf 15x before 1520 16x before 1612 and 17x before 177 mqtt mq telemetry transport connection authentication with a usernamepassword pair succeeds if an existing username is provide,"An issue was discovered in Pivotal RabbitMQ 3.x before 3.5.8 and 3.6.x before 3.6.6 and RabbitMQ for PCF 1.5.x before 1.5.20, 1.6.x before 1.6.12, and 1.7.x before 1.7.7. MQTT (MQ Telemetry Transport) connection authentication with a username/password pair succeeds if an existing username is provide",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287
CVE-2017-4965,"An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. Several forms in the RabbitMQ management",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. Several forms in the RabbitMQ management  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. Several forms in the RabbitMQ management  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89",2017-06-13T06:29:00.457,6.1,MEDIUM,nvd,an issue was discovered in these pivotal rabbitmq versions all 34x versions all 35x versions and 36x versions prior to 369 and these rabbitmq for pcf versions all 15x versions 16x versions prior to 1618 and 17x versions prior to 1715 several forms in the rabbitmq management,"An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. Several forms in the RabbitMQ management",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89
CVE-2017-4966,"An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. RabbitMQ management UI stores signed-in ",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 255,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. RabbitMQ management UI stores signed-in  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 255","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. RabbitMQ management UI stores signed-in  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 255",2017-06-13T06:29:00.503,7.8,HIGH,nvd,an issue was discovered in these pivotal rabbitmq versions all 34x versions all 35x versions and 36x versions prior to 369 and these rabbitmq for pcf versions all 15x versions 16x versions prior to 1618 and 17x versions prior to 1715 rabbitmq management ui stores signedin,"An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. RabbitMQ management UI stores signed-in ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 255
CVE-2017-4967,"An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. Several forms in the RabbitMQ management",RabbitMQ,CWE-89,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-89 Explanation: Improper neutralization of special elements used in an SQL command ('SQL Injection') Vendor: Pivotal Cause: The vulnerability allows attackers to manipulate the SQL queries sent to the database through the RabbitMQ management interface, which could lead to unauthorized access or data manipulation. Impact: Unauthorized access to sensitive data or data manipulation could lead to data breaches, unauthorized actions, or disruption of service.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. Several forms in the RabbitMQ management  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-89 Explanation: Improper neutralization of special elements used in an SQL command ('SQL Injection') Vendor: Pivotal Cause: The vulnerability allows attackers to manipulate the SQL queries sent to the database through the RabbitMQ management interface, which could lead to unauthorized access or data manipulation. Impact: Unauthorized access to sensitive data or data manipulation could lead to data breaches, unauthorized actions, or disruption of service.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. Several forms in the RabbitMQ management  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-89 Explanation: Improper neutralization of special elements used in an SQL command ('SQL Injection') Vendor: Pivotal Cause: The vulnerability allows attackers to manipulate the SQL queries sent to the database through the RabbitMQ management interface, which could lead to unauthorized access or data manipulation. Impact: Unauthorized access to sensitive data or data manipulation could lead to data breaches, unauthorized actions, or disruption of service.",2017-06-13T06:29:00.520,6.1,MEDIUM,nvd,an issue was discovered in these pivotal rabbitmq versions all 34x versions all 35x versions and 36x versions prior to 369 and these rabbitmq for pcf versions all 15x versions 16x versions prior to 1618 and 17x versions prior to 1715 several forms in the rabbitmq management,"An issue was discovered in these Pivotal RabbitMQ versions: all 3.4.x versions, all 3.5.x versions, and 3.6.x versions prior to 3.6.9; and these RabbitMQ for PCF versions: all 1.5.x versions, 1.6.x versions prior to 1.6.18, and 1.7.x versions prior to 1.7.15. Several forms in the RabbitMQ management","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-89 Explanation: Improper neutralization of special elements used in an SQL command ('SQL Injection') Vendor: Pivotal Cause: The vulnerability allows attackers to manipulate the SQL queries sent to the database through the RabbitMQ management interface, which could lead to unauthorized access or data manipulation. Impact: Unauthorized access to sensitive data or data manipulation could lead to data breaches, unauthorized actions, or disruption of service."
CVE-2018-14620,The OpenStack RabbitMQ container image insecurely retrieves the rabbitmq_clusterer component over HTTP during the build stage. This could potentially allow an attacker to serve malicious code to the image builder and install in the resultant container image. Version of openstack-rabbitmq-container a,RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502 Explanation: The vulnerability allows an attacker to serve malicious code to the image builder and install it in the resultant container image by exploiting insecure code retrieval during the build stage. Vendor: OpenStack Cause: The OpenStack RabbitMQ container image insecurely retrieves the rabbitmq_clusterer component over HTTP during the build stage. Impact: An attacker could potentially serve malicious code to the image builder and install it in the resultant container image, leading to unauthorized actions or data compromise.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The OpenStack RabbitMQ container image insecurely retrieves the rabbitmq_clusterer component over HTTP during the build stage. This could potentially allow an attacker to serve malicious code to the image builder and install in the resultant container image. Version of openstack-rabbitmq-container a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502 Explanation: The vulnerability allows an attacker to serve malicious code to the image builder and install it in the resultant container image by exploiting insecure code retrieval during the build stage. Vendor: OpenStack Cause: The OpenStack RabbitMQ container image insecurely retrieves the rabbitmq_clusterer component over HTTP during the build stage. Impact: An attacker could potentially serve malicious code to the image builder and install it in the resultant container image, leading to unauthorized actions or data compromise.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The OpenStack RabbitMQ container image insecurely retrieves the rabbitmq_clusterer component over HTTP during the build stage. This could potentially allow an attacker to serve malicious code to the image builder and install in the resultant container image. Version of openstack-rabbitmq-container a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502 Explanation: The vulnerability allows an attacker to serve malicious code to the image builder and install it in the resultant container image by exploiting insecure code retrieval during the build stage. Vendor: OpenStack Cause: The OpenStack RabbitMQ container image insecurely retrieves the rabbitmq_clusterer component over HTTP during the build stage. Impact: An attacker could potentially serve malicious code to the image builder and install it in the resultant container image, leading to unauthorized actions or data compromise.",2018-09-10T19:29:00.190,,,nvd,the openstack rabbitmq container image insecurely retrieves the rabbitmq_clusterer component over http during the build stage this could potentially allow an attacker to serve malicious code to the image builder and install in the resultant container image version of openstackrabbitmqcontainer a,The OpenStack RabbitMQ container image insecurely retrieves the rabbitmq_clusterer component over HTTP during the build stage. This could potentially allow an attacker to serve malicious code to the image builder and install in the resultant container image. Version of openstack-rabbitmq-container a,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502 Explanation: The vulnerability allows an attacker to serve malicious code to the image builder and install it in the resultant container image by exploiting insecure code retrieval during the build stage. Vendor: OpenStack Cause: The OpenStack RabbitMQ container image insecurely retrieves the rabbitmq_clusterer component over HTTP during the build stage. Impact: An attacker could potentially serve malicious code to the image builder and install it in the resultant container image, leading to unauthorized actions or data compromise."
CVE-2018-1279,"Pivotal RabbitMQ for PCF, all versions, uses a deterministically generated cookie that is shared between all machines when configured in a multi-tenant cluster. A remote attacker who can gain information about the network topology can guess this cookie and, if they have access to the right ports on ",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal RabbitMQ for PCF, all versions, uses a deterministically generated cookie that is shared between all machines when configured in a multi-tenant cluster. A remote attacker who can gain information about the network topology can guess this cookie and, if they have access to the right ports on  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal RabbitMQ for PCF, all versions, uses a deterministically generated cookie that is shared between all machines when configured in a multi-tenant cluster. A remote attacker who can gain information about the network topology can guess this cookie and, if they have access to the right ports on  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330",2018-12-10T19:29:25.127,,,nvd,pivotal rabbitmq for pcf all versions uses a deterministically generated cookie that is shared between all machines when configured in a multitenant cluster a remote attacker who can gain information about the network topology can guess this cookie and if they have access to the right ports on,"Pivotal RabbitMQ for PCF, all versions, uses a deterministically generated cookie that is shared between all machines when configured in a multi-tenant cluster. A remote attacker who can gain information about the network topology can guess this cookie and, if they have access to the right ports on ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330
CVE-2018-16879,Ansible Tower before version 3.3.3 does not set a secure channel as it is using the default insecure configuration channel settings for messaging celery workers from RabbitMQ. This could lead in data leak of sensitive information such as passwords as well as denial of service attacks by deleting pro,RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311 Explanation: This vulnerability allows sensitive information leakage and denial of service attacks due to insecure messaging configuration in Ansible Tower. Vendor: Red Hat Cause: Ansible Tower uses insecure default messaging channel settings for RabbitMQ, leading to potential data exposure and denial of service. Impact: Exfiltration of sensitive data like passwords and disruption of service operations.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Ansible Tower before version 3.3.3 does not set a secure channel as it is using the default insecure configuration channel settings for messaging celery workers from RabbitMQ. This could lead in data leak of sensitive information such as passwords as well as denial of service attacks by deleting pro  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311 Explanation: This vulnerability allows sensitive information leakage and denial of service attacks due to insecure messaging configuration in Ansible Tower. Vendor: Red Hat Cause: Ansible Tower uses insecure default messaging channel settings for RabbitMQ, leading to potential data exposure and denial of service. Impact: Exfiltration of sensitive data like passwords and disruption of service operations.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Ansible Tower before version 3.3.3 does not set a secure channel as it is using the default insecure configuration channel settings for messaging celery workers from RabbitMQ. This could lead in data leak of sensitive information such as passwords as well as denial of service attacks by deleting pro  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311 Explanation: This vulnerability allows sensitive information leakage and denial of service attacks due to insecure messaging configuration in Ansible Tower. Vendor: Red Hat Cause: Ansible Tower uses insecure default messaging channel settings for RabbitMQ, leading to potential data exposure and denial of service. Impact: Exfiltration of sensitive data like passwords and disruption of service operations.",2019-01-03T14:29:00.197,9.8,CRITICAL,nvd,ansible tower before version 333 does not set a secure channel as it is using the default insecure configuration channel settings for messaging celery workers from rabbitmq this could lead in data leak of sensitive information such as passwords as well as denial of service attacks by deleting pro,Ansible Tower before version 3.3.3 does not set a secure channel as it is using the default insecure configuration channel settings for messaging celery workers from RabbitMQ. This could lead in data leak of sensitive information such as passwords as well as denial of service attacks by deleting pro,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311 Explanation: This vulnerability allows sensitive information leakage and denial of service attacks due to insecure messaging configuration in Ansible Tower. Vendor: Red Hat Cause: Ansible Tower uses insecure default messaging channel settings for RabbitMQ, leading to potential data exposure and denial of service. Impact: Exfiltration of sensitive data like passwords and disruption of service operations."
CVE-2019-9546,SolarWinds Orion Platform before 2018.4 Hotfix 2 allows privilege escalation through the RabbitMQ service.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SolarWinds Orion Platform before 2018.4 Hotfix 2 allows privilege escalation through the RabbitMQ service.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SolarWinds Orion Platform before 2018.4 Hotfix 2 allows privilege escalation through the RabbitMQ service.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269",2019-03-01T22:29:00.230,,,nvd,solarwinds orion platform before 20184 hotfix 2 allows privilege escalation through the rabbitmq service,SolarWinds Orion Platform before 2018.4 Hotfix 2 allows privilege escalation through the RabbitMQ service.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269
CVE-2019-11281,"Pivotal RabbitMQ, versions prior to v3.7.18, and RabbitMQ for PCF, versions 1.15.x prior to 1.15.13, versions 1.16.x prior to 1.16.6, and versions 1.17.x prior to 1.17.3, contain two components, the virtual host limits page, and the federation management UI, which do not properly sanitize user input",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal RabbitMQ, versions prior to v3.7.18, and RabbitMQ for PCF, versions 1.15.x prior to 1.15.13, versions 1.16.x prior to 1.16.6, and versions 1.17.x prior to 1.17.3, contain two components, the virtual host limits page, and the federation management UI, which do not properly sanitize user input  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal RabbitMQ, versions prior to v3.7.18, and RabbitMQ for PCF, versions 1.15.x prior to 1.15.13, versions 1.16.x prior to 1.16.6, and versions 1.17.x prior to 1.17.3, contain two components, the virtual host limits page, and the federation management UI, which do not properly sanitize user input  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2019-10-16T16:15:10.340,4.8,MEDIUM,nvd,pivotal rabbitmq versions prior to v3718 and rabbitmq for pcf versions 115x prior to 11513 versions 116x prior to 1166 and versions 117x prior to 1173 contain two components the virtual host limits page and the federation management ui which do not properly sanitize user input,"Pivotal RabbitMQ, versions prior to v3.7.18, and RabbitMQ for PCF, versions 1.15.x prior to 1.15.13, versions 1.16.x prior to 1.16.6, and versions 1.17.x prior to 1.17.3, contain two components, the virtual host limits page, and the federation management UI, which do not properly sanitize user input",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2019-11291,"Pivotal RabbitMQ, 3.7 versions prior to v3.7.20 and 3.8 version prior to v3.8.1, and RabbitMQ for PCF, 1.16.x versions prior to 1.16.7 and 1.17.x versions prior to 1.17.4, contain two endpoints, federation and shovel, which do not properly sanitize user input. A remote authenticated malicious user w",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal RabbitMQ, 3.7 versions prior to v3.7.20 and 3.8 version prior to v3.8.1, and RabbitMQ for PCF, 1.16.x versions prior to 1.16.7 and 1.17.x versions prior to 1.17.4, contain two endpoints, federation and shovel, which do not properly sanitize user input. A remote authenticated malicious user w  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal RabbitMQ, 3.7 versions prior to v3.7.20 and 3.8 version prior to v3.8.1, and RabbitMQ for PCF, 1.16.x versions prior to 1.16.7 and 1.17.x versions prior to 1.17.4, contain two endpoints, federation and shovel, which do not properly sanitize user input. A remote authenticated malicious user w  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2019-11-22T23:15:11.270,4.8,MEDIUM,nvd,pivotal rabbitmq 37 versions prior to v3720 and 38 version prior to v381 and rabbitmq for pcf 116x versions prior to 1167 and 117x versions prior to 1174 contain two endpoints federation and shovel which do not properly sanitize user input a remote authenticated malicious user w,"Pivotal RabbitMQ, 3.7 versions prior to v3.7.20 and 3.8 version prior to v3.8.1, and RabbitMQ for PCF, 1.16.x versions prior to 1.16.7 and 1.17.x versions prior to 1.17.4, contain two endpoints, federation and shovel, which do not properly sanitize user input. A remote authenticated malicious user w",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2019-11287,"Pivotal RabbitMQ, versions 3.7.x prior to 3.7.21 and 3.8.x prior to 3.8.1, and RabbitMQ for Pivotal Platform, 1.16.x versions prior to 1.16.7 and 1.17.x versions prior to 1.17.4, contain a web management plugin that is vulnerable to a denial of service attack. The ""X-Reason"" HTTP Header can be lever",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal RabbitMQ, versions 3.7.x prior to 3.7.21 and 3.8.x prior to 3.8.1, and RabbitMQ for Pivotal Platform, 1.16.x versions prior to 1.16.7 and 1.17.x versions prior to 1.17.4, contain a web management plugin that is vulnerable to a denial of service attack. The ""X-Reason"" HTTP Header can be lever  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal RabbitMQ, versions 3.7.x prior to 3.7.21 and 3.8.x prior to 3.8.1, and RabbitMQ for Pivotal Platform, 1.16.x versions prior to 1.16.7 and 1.17.x versions prior to 1.17.4, contain a web management plugin that is vulnerable to a denial of service attack. The ""X-Reason"" HTTP Header can be lever  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2019-11-23T00:15:10.683,7.5,HIGH,nvd,pivotal rabbitmq versions 37x prior to 3721 and 38x prior to 381 and rabbitmq for pivotal platform 116x versions prior to 1167 and 117x versions prior to 1174 contain a web management plugin that is vulnerable to a denial of service attack the xreason http header can be lever,"Pivotal RabbitMQ, versions 3.7.x prior to 3.7.21 and 3.8.x prior to 3.8.1, and RabbitMQ for Pivotal Platform, 1.16.x versions prior to 1.16.7 and 1.17.x versions prior to 1.17.4, contain a web management plugin that is vulnerable to a denial of service attack. The ""X-Reason"" HTTP Header can be lever",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2019-18609,An issue was discovered in amqp_handle_input in amqp_connection.c in rabbitmq-c 0.9.0. There is an integer overflow that leads to heap memory corruption in the handling of CONNECTION_STATE_HEADER. A rogue server could return a malicious frame header that leads to a smaller target_size value than nee,RabbitMQ,CWE-120,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in amqp_handle_input in amqp_connection.c in rabbitmq-c 0.9.0. There is an integer overflow that leads to heap memory corruption in the handling of CONNECTION_STATE_HEADER. A rogue server could return a malicious frame header that leads to a smaller target_size value than nee  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in amqp_handle_input in amqp_connection.c in rabbitmq-c 0.9.0. There is an integer overflow that leads to heap memory corruption in the handling of CONNECTION_STATE_HEADER. A rogue server could return a malicious frame header that leads to a smaller target_size value than nee  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2019-12-01T22:15:10.897,9.8,CRITICAL,nvd,an issue was discovered in amqp_handle_input in amqp_connectionc in rabbitmqc 090 there is an integer overflow that leads to heap memory corruption in the handling of connection_state_header a rogue server could return a malicious frame header that leads to a smaller target_size value than nee,An issue was discovered in amqp_handle_input in amqp_connection.c in rabbitmq-c 0.9.0. There is an integer overflow that leads to heap memory corruption in the handling of CONNECTION_STATE_HEADER. A rogue server could return a malicious frame header that leads to a smaller target_size value than nee,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2019-19340,"A flaw was found in Ansible Tower, versions 3.6.x before 3.6.2 and 3.5.x before 3.5.3, where enabling RabbitMQ manager by setting it with '-e rabbitmq_enable_manager=true' exposes the RabbitMQ management interface publicly, as expected. If the default admin user is still active, an attacker could gu",RabbitMQ,CWE-284,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284 Explanation: Improper Access Control Vendor: Red Hat Cause: Enabling the RabbitMQ management interface publicly without proper authentication Impact: An attacker could gain unauthorized access to the RabbitMQ management interface,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A flaw was found in Ansible Tower, versions 3.6.x before 3.6.2 and 3.5.x before 3.5.3, where enabling RabbitMQ manager by setting it with '-e rabbitmq_enable_manager=true' exposes the RabbitMQ management interface publicly, as expected. If the default admin user is still active, an attacker could gu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284 Explanation: Improper Access Control Vendor: Red Hat Cause: Enabling the RabbitMQ management interface publicly without proper authentication Impact: An attacker could gain unauthorized access to the RabbitMQ management interface","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A flaw was found in Ansible Tower, versions 3.6.x before 3.6.2 and 3.5.x before 3.5.3, where enabling RabbitMQ manager by setting it with '-e rabbitmq_enable_manager=true' exposes the RabbitMQ management interface publicly, as expected. If the default admin user is still active, an attacker could gu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284 Explanation: Improper Access Control Vendor: Red Hat Cause: Enabling the RabbitMQ management interface publicly without proper authentication Impact: An attacker could gain unauthorized access to the RabbitMQ management interface",2019-12-19T21:15:13.887,8.2,HIGH,nvd,a flaw was found in ansible tower versions 36x before 362 and 35x before 353 where enabling rabbitmq manager by setting it with e rabbitmq_enable_managertrue exposes the rabbitmq management interface publicly as expected if the default admin user is still active an attacker could gu,"A flaw was found in Ansible Tower, versions 3.6.x before 3.6.2 and 3.5.x before 3.5.3, where enabling RabbitMQ manager by setting it with '-e rabbitmq_enable_manager=true' exposes the RabbitMQ management interface publicly, as expected. If the default admin user is still active, an attacker could gu",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284 Explanation: Improper Access Control Vendor: Red Hat Cause: Enabling the RabbitMQ management interface publicly without proper authentication Impact: An attacker could gain unauthorized access to the RabbitMQ management interface
CVE-2019-19342,"A flaw was found in Ansible Tower, versions 3.6.x before 3.6.2 and 3.5.x before 3.5.4, when /websocket is requested and the password contains the '#' character. This request would cause a socket error in RabbitMQ when parsing the password and an HTTP error code 500 and partial password disclose will",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A flaw was found in Ansible Tower, versions 3.6.x before 3.6.2 and 3.5.x before 3.5.4, when /websocket is requested and the password contains the '#' character. This request would cause a socket error in RabbitMQ when parsing the password and an HTTP error code 500 and partial password disclose will  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A flaw was found in Ansible Tower, versions 3.6.x before 3.6.2 and 3.5.x before 3.5.4, when /websocket is requested and the password contains the '#' character. This request would cause a socket error in RabbitMQ when parsing the password and an HTTP error code 500 and partial password disclose will  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522",2019-12-19T21:15:14.167,5.3,MEDIUM,nvd,a flaw was found in ansible tower versions 36x before 362 and 35x before 354 when websocket is requested and the password contains the  character this request would cause a socket error in rabbitmq when parsing the password and an http error code 500 and partial password disclose will,"A flaw was found in Ansible Tower, versions 3.6.x before 3.6.2 and 3.5.x before 3.5.4, when /websocket is requested and the password contains the '#' character. This request would cause a socket error in RabbitMQ when parsing the password and an HTTP error code 500 and partial password disclose will",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522
CVE-2016-2032,"A vulnerability exists in the Aruba AirWave Management Platform 8.x prior to 8.2 in the management interface of an underlying system component called RabbitMQ, which could let a malicious user obtain sensitive information. This interface listens on TCP port 15672 and 55672",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability exists in the Aruba AirWave Management Platform 8.x prior to 8.2 in the management interface of an underlying system component called RabbitMQ, which could let a malicious user obtain sensitive information. This interface listens on TCP port 15672 and 55672  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability exists in the Aruba AirWave Management Platform 8.x prior to 8.2 in the management interface of an underlying system component called RabbitMQ, which could let a malicious user obtain sensitive information. This interface listens on TCP port 15672 and 55672  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2020-01-31T20:15:10.663,7.5,HIGH,nvd,a vulnerability exists in the aruba airwave management platform 8x prior to 82 in the management interface of an underlying system component called rabbitmq which could let a malicious user obtain sensitive information this interface listens on tcp port 15672 and 55672,"A vulnerability exists in the Aruba AirWave Management Platform 8.x prior to 8.2 in the management interface of an underlying system component called RabbitMQ, which could let a malicious user obtain sensitive information. This interface listens on TCP port 15672 and 55672",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2020-11972,"Apache Camel RabbitMQ enables Java deserialization by default. Apache Camel 2.22.x, 2.23.x, 2.24.x, 2.25.0, 3.0.0 up to 3.1.0 are affected. 2.x users should upgrade to 2.25.1, 3.x users should upgrade to 3.2.0.",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apache Camel RabbitMQ enables Java deserialization by default. Apache Camel 2.22.x, 2.23.x, 2.24.x, 2.25.0, 3.0.0 up to 3.1.0 are affected. 2.x users should upgrade to 2.25.1, 3.x users should upgrade to 3.2.0.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apache Camel RabbitMQ enables Java deserialization by default. Apache Camel 2.22.x, 2.23.x, 2.24.x, 2.25.0, 3.0.0 up to 3.1.0 are affected. 2.x users should upgrade to 2.25.1, 3.x users should upgrade to 3.2.0.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502",2020-05-14T17:15:12.117,9.8,CRITICAL,nvd,apache camel rabbitmq enables java deserialization by default apache camel 222x 223x 224x 2250 300 up to 310 are affected 2x users should upgrade to 2251 3x users should upgrade to 320,"Apache Camel RabbitMQ enables Java deserialization by default. Apache Camel 2.22.x, 2.23.x, 2.24.x, 2.25.0, 3.0.0 up to 3.1.0 are affected. 2.x users should upgrade to 2.25.1, 3.x users should upgrade to 3.2.0.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502
CVE-2020-11981,"An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attacker can connect to the broker (Redis, RabbitMQ) directly, it is possible to inject commands, resulting in the celery worker running arbitrary commands.",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attacker can connect to the broker (Redis, RabbitMQ) directly, it is possible to inject commands, resulting in the celery worker running arbitrary commands.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attacker can connect to the broker (Redis, RabbitMQ) directly, it is possible to inject commands, resulting in the celery worker running arbitrary commands.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78",2020-07-17T00:15:10.400,9.8,CRITICAL,nvd,an issue was found in apache airflow versions 11010 and below when using celeryexecutor if an attacker can connect to the broker redis rabbitmq directly it is possible to inject commands resulting in the celery worker running arbitrary commands,"An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attacker can connect to the broker (Redis, RabbitMQ) directly, it is possible to inject commands, resulting in the celery worker running arbitrary commands.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78
CVE-2020-11982,"An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attack can connect to the broker (Redis, RabbitMQ) directly, it was possible to insert a malicious payload directly to the broker which could lead to a deserialization attack (and thus remote code execu",RabbitMQ,CWE-502,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-502,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attack can connect to the broker (Redis, RabbitMQ) directly, it was possible to insert a malicious payload directly to the broker which could lead to a deserialization attack (and thus remote code execu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-502","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attack can connect to the broker (Redis, RabbitMQ) directly, it was possible to insert a malicious payload directly to the broker which could lead to a deserialization attack (and thus remote code execu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-502",2020-07-17T00:15:10.477,9.8,CRITICAL,nvd,an issue was found in apache airflow versions 11010 and below when using celeryexecutor if an attack can connect to the broker redis rabbitmq directly it was possible to insert a malicious payload directly to the broker which could lead to a deserialization attack and thus remote code execu,"An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attack can connect to the broker (Redis, RabbitMQ) directly, it was possible to insert a malicious payload directly to the broker which could lead to a deserialization attack (and thus remote code execu",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-502
CVE-2020-5419,RabbitMQ versions 3.8.x prior to 3.8.7 are prone to a Windows-specific binary planting security vulnerability that allows for arbitrary code execution. An attacker with write privileges to the RabbitMQ installation directory and local access on Windows could carry out a local binary hijacking (plant,RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 426 Explanation: The vulnerability allows an attacker to perform local binary planting on Windows systems by exploiting the way RabbitMQ handles certain file operations. This enables arbitrary code execution. Vendor: RabbitMQ Cause: Inadequate validation and handling of file operations in RabbitMQ's Windows-specific code, allowing attackers to place malicious files in the RabbitMQ installation directory. Impact: Successful exploitation could allow attackers with write access to the RabbitMQ installation directory to execute arbitrary code on the affected Windows systems.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ versions 3.8.x prior to 3.8.7 are prone to a Windows-specific binary planting security vulnerability that allows for arbitrary code execution. An attacker with write privileges to the RabbitMQ installation directory and local access on Windows could carry out a local binary hijacking (plant  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 426 Explanation: The vulnerability allows an attacker to perform local binary planting on Windows systems by exploiting the way RabbitMQ handles certain file operations. This enables arbitrary code execution. Vendor: RabbitMQ Cause: Inadequate validation and handling of file operations in RabbitMQ's Windows-specific code, allowing attackers to place malicious files in the RabbitMQ installation directory. Impact: Successful exploitation could allow attackers with write access to the RabbitMQ installation directory to execute arbitrary code on the affected Windows systems.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ versions 3.8.x prior to 3.8.7 are prone to a Windows-specific binary planting security vulnerability that allows for arbitrary code execution. An attacker with write privileges to the RabbitMQ installation directory and local access on Windows could carry out a local binary hijacking (plant  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 426 Explanation: The vulnerability allows an attacker to perform local binary planting on Windows systems by exploiting the way RabbitMQ handles certain file operations. This enables arbitrary code execution. Vendor: RabbitMQ Cause: Inadequate validation and handling of file operations in RabbitMQ's Windows-specific code, allowing attackers to place malicious files in the RabbitMQ installation directory. Impact: Successful exploitation could allow attackers with write access to the RabbitMQ installation directory to execute arbitrary code on the affected Windows systems.",2020-08-31T15:15:11.010,6.7,MEDIUM,nvd,rabbitmq versions 38x prior to 387 are prone to a windowsspecific binary planting security vulnerability that allows for arbitrary code execution an attacker with write privileges to the rabbitmq installation directory and local access on windows could carry out a local binary hijacking plant,RabbitMQ versions 3.8.x prior to 3.8.7 are prone to a Windows-specific binary planting security vulnerability that allows for arbitrary code execution. An attacker with write privileges to the RabbitMQ installation directory and local access on Windows could carry out a local binary hijacking (plant,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 426 Explanation: The vulnerability allows an attacker to perform local binary planting on Windows systems by exploiting the way RabbitMQ handles certain file operations. This enables arbitrary code execution. Vendor: RabbitMQ Cause: Inadequate validation and handling of file operations in RabbitMQ's Windows-specific code, allowing attackers to place malicious files in the RabbitMQ installation directory. Impact: Successful exploitation could allow attackers with write access to the RabbitMQ installation directory to execute arbitrary code on the affected Windows systems."
CVE-2020-35196,The official rabbitmq docker images before 3.7.13-beta.1-management-alpine (Alpine specific) contain a blank password for a root user. System using the rabbitmq docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password,RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows remote attackers to gain unauthorized access by using a blank password for the root user, which is present by default in the affected Docker image. Vendor: RabbitMQ Cause: The Docker image contained a blank password for the root user. Impact: An attacker could gain root access to the system running the affected Docker container.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The official rabbitmq docker images before 3.7.13-beta.1-management-alpine (Alpine specific) contain a blank password for a root user. System using the rabbitmq docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows remote attackers to gain unauthorized access by using a blank password for the root user, which is present by default in the affected Docker image. Vendor: RabbitMQ Cause: The Docker image contained a blank password for the root user. Impact: An attacker could gain root access to the system running the affected Docker container.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The official rabbitmq docker images before 3.7.13-beta.1-management-alpine (Alpine specific) contain a blank password for a root user. System using the rabbitmq docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows remote attackers to gain unauthorized access by using a blank password for the root user, which is present by default in the affected Docker image. Vendor: RabbitMQ Cause: The Docker image contained a blank password for the root user. Impact: An attacker could gain root access to the system running the affected Docker container.",2020-12-17T02:15:13.363,9.8,CRITICAL,nvd,the official rabbitmq docker images before 3713beta1managementalpine alpine specific contain a blank password for a root user system using the rabbitmq docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password,The official rabbitmq docker images before 3.7.13-beta.1-management-alpine (Alpine specific) contain a blank password for a root user. System using the rabbitmq docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows remote attackers to gain unauthorized access by using a blank password for the root user, which is present by default in the affected Docker image. Vendor: RabbitMQ Cause: The Docker image contained a blank password for the root user. Impact: An attacker could gain root access to the system running the affected Docker container."
CVE-2020-36282,JMS Client for RabbitMQ 1.x before 1.15.2 and 2.x before 2.2.0 is vulnerable to unsafe deserialization that can result in code execution via crafted StreamMessage data.,RabbitMQ,CWE-502,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  JMS Client for RabbitMQ 1.x before 1.15.2 and 2.x before 2.2.0 is vulnerable to unsafe deserialization that can result in code execution via crafted StreamMessage data.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  JMS Client for RabbitMQ 1.x before 1.15.2 and 2.x before 2.2.0 is vulnerable to unsafe deserialization that can result in code execution via crafted StreamMessage data.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502",2021-03-12T01:15:12.373,9.8,CRITICAL,nvd,jms client for rabbitmq 1x before 1152 and 2x before 220 is vulnerable to unsafe deserialization that can result in code execution via crafted streammessage data,JMS Client for RabbitMQ 1.x before 1.15.2 and 2.x before 2.2.0 is vulnerable to unsafe deserialization that can result in code execution via crafted StreamMessage data.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502
CVE-2021-22117,"RabbitMQ installers on Windows prior to version 3.8.16 do not harden plugin directory permissions, potentially allowing attackers with sufficient local filesystem permissions to add arbitrary plugins.",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 732 Explanation: Improper permissions on plugin directory leading to unauthorized plugin installation. Vendor: RabbitMQ Cause: RabbitMQ installers on Windows do not properly harden plugin directory permissions. Impact: Local privilege escalation and arbitrary code execution via plugin installation.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ installers on Windows prior to version 3.8.16 do not harden plugin directory permissions, potentially allowing attackers with sufficient local filesystem permissions to add arbitrary plugins.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 732 Explanation: Improper permissions on plugin directory leading to unauthorized plugin installation. Vendor: RabbitMQ Cause: RabbitMQ installers on Windows do not properly harden plugin directory permissions. Impact: Local privilege escalation and arbitrary code execution via plugin installation.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ installers on Windows prior to version 3.8.16 do not harden plugin directory permissions, potentially allowing attackers with sufficient local filesystem permissions to add arbitrary plugins.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 732 Explanation: Improper permissions on plugin directory leading to unauthorized plugin installation. Vendor: RabbitMQ Cause: RabbitMQ installers on Windows do not properly harden plugin directory permissions. Impact: Local privilege escalation and arbitrary code execution via plugin installation.",2021-05-18T13:15:07.597,7.8,HIGH,nvd,rabbitmq installers on windows prior to version 3816 do not harden plugin directory permissions potentially allowing attackers with sufficient local filesystem permissions to add arbitrary plugins,"RabbitMQ installers on Windows prior to version 3.8.16 do not harden plugin directory permissions, potentially allowing attackers with sufficient local filesystem permissions to add arbitrary plugins.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 732 Explanation: Improper permissions on plugin directory leading to unauthorized plugin installation. Vendor: RabbitMQ Cause: RabbitMQ installers on Windows do not properly harden plugin directory permissions. Impact: Local privilege escalation and arbitrary code execution via plugin installation.
CVE-2021-22116,RabbitMQ all versions prior to 3.8.16 are prone to a denial of service vulnerability due to improper input validation in AMQP 1.0 client connection endpoint. A malicious user can exploit the vulnerability by sending malicious AMQP messages to the target RabbitMQ instance having the AMQP 1.0 plugin e,RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows a remote attacker to send specially crafted AMQP messages, leading to a denial of service condition in RabbitMQ versions prior to 3.8.16 with the AMQP 1.0 plugin enabled. Vendor: RabbitMQ Cause: Improper input validation in the AMQP 1.0 client connection endpoint handling of incoming messages Impact: Denial of Service (DoS) due to resource consumption and server unavailability","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ all versions prior to 3.8.16 are prone to a denial of service vulnerability due to improper input validation in AMQP 1.0 client connection endpoint. A malicious user can exploit the vulnerability by sending malicious AMQP messages to the target RabbitMQ instance having the AMQP 1.0 plugin e  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows a remote attacker to send specially crafted AMQP messages, leading to a denial of service condition in RabbitMQ versions prior to 3.8.16 with the AMQP 1.0 plugin enabled. Vendor: RabbitMQ Cause: Improper input validation in the AMQP 1.0 client connection endpoint handling of incoming messages Impact: Denial of Service (DoS) due to resource consumption and server unavailability","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ all versions prior to 3.8.16 are prone to a denial of service vulnerability due to improper input validation in AMQP 1.0 client connection endpoint. A malicious user can exploit the vulnerability by sending malicious AMQP messages to the target RabbitMQ instance having the AMQP 1.0 plugin e  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows a remote attacker to send specially crafted AMQP messages, leading to a denial of service condition in RabbitMQ versions prior to 3.8.16 with the AMQP 1.0 plugin enabled. Vendor: RabbitMQ Cause: Improper input validation in the AMQP 1.0 client connection endpoint handling of incoming messages Impact: Denial of Service (DoS) due to resource consumption and server unavailability",2021-06-08T12:15:10.347,7.5,HIGH,nvd,rabbitmq all versions prior to 3816 are prone to a denial of service vulnerability due to improper input validation in amqp 10 client connection endpoint a malicious user can exploit the vulnerability by sending malicious amqp messages to the target rabbitmq instance having the amqp 10 plugin e,RabbitMQ all versions prior to 3.8.16 are prone to a denial of service vulnerability due to improper input validation in AMQP 1.0 client connection endpoint. A malicious user can exploit the vulnerability by sending malicious AMQP messages to the target RabbitMQ instance having the AMQP 1.0 plugin e,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows a remote attacker to send specially crafted AMQP messages, leading to a denial of service condition in RabbitMQ versions prior to 3.8.16 with the AMQP 1.0 plugin enabled. Vendor: RabbitMQ Cause: Improper input validation in the AMQP 1.0 client connection endpoint handling of incoming messages Impact: Denial of Service (DoS) due to resource consumption and server unavailability"
CVE-2021-32718,"RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.17, a new user being added via management UI could lead to the user's bane being rendered in a confirmation message without proper `<script>` tag sanitization, potentially allowing for JavaScript code execution in",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.17, a new user being added via management UI could lead to the user's bane being rendered in a confirmation message without proper <script> tag sanitization, potentially allowing for JavaScript code execution in  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.17, a new user being added via management UI could lead to the user's bane being rendered in a confirmation message without proper <script> tag sanitization, potentially allowing for JavaScript code execution in  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2021-06-28T15:15:24.233,3.1,LOW,nvd,rabbitmq is a multiprotocol messaging broker in rabbitmqserver prior to version 3817 a new user being added via management ui could lead to the users bane being rendered in a confirmation message without proper script tag sanitization potentially allowing for javascript code execution in,"RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.17, a new user being added via management UI could lead to the user's bane being rendered in a confirmation message without proper `<script>` tag sanitization, potentially allowing for JavaScript code execution in",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2021-32719,"RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.18, when a federation link was displayed in the RabbitMQ management UI via the `rabbitmq_federation_management` plugin, its consumer tag was rendered without proper <script> tag sanitization. This potentially allo",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.18, when a federation link was displayed in the RabbitMQ management UI via the rabbitmq_federation_management plugin, its consumer tag was rendered without proper <script> tag sanitization. This potentially allo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.18, when a federation link was displayed in the RabbitMQ management UI via the rabbitmq_federation_management plugin, its consumer tag was rendered without proper <script> tag sanitization. This potentially allo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2021-06-28T16:15:08.593,3.1,LOW,nvd,rabbitmq is a multiprotocol messaging broker in rabbitmqserver prior to version 3818 when a federation link was displayed in the rabbitmq management ui via the rabbitmq_federation_management plugin its consumer tag was rendered without proper script tag sanitization this potentially allo,"RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.18, when a federation link was displayed in the RabbitMQ management UI via the `rabbitmq_federation_management` plugin, its consumer tag was rendered without proper <script> tag sanitization. This potentially allo",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2021-0279,Juniper Networks Contrail Cloud (CC) releases prior to 13.6.0 have RabbitMQ service enabled by default with hardcoded credentials. The messaging services of RabbitMQ are used when coordinating operations and status information among Contrail services. An attacker with access to an administrative ser,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Juniper Networks Contrail Cloud (CC) releases prior to 13.6.0 have RabbitMQ service enabled by default with hardcoded credentials. The messaging services of RabbitMQ are used when coordinating operations and status information among Contrail services. An attacker with access to an administrative ser  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Juniper Networks Contrail Cloud (CC) releases prior to 13.6.0 have RabbitMQ service enabled by default with hardcoded credentials. The messaging services of RabbitMQ are used when coordinating operations and status information among Contrail services. An attacker with access to an administrative ser  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862",2021-07-15T20:15:09.543,8.6,HIGH,nvd,juniper networks contrail cloud cc releases prior to 1360 have rabbitmq service enabled by default with hardcoded credentials the messaging services of rabbitmq are used when coordinating operations and status information among contrail services an attacker with access to an administrative ser,Juniper Networks Contrail Cloud (CC) releases prior to 13.6.0 have RabbitMQ service enabled by default with hardcoded credentials. The messaging services of RabbitMQ are used when coordinating operations and status information among Contrail services. An attacker with access to an administrative ser,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862
CVE-2021-35227,The HTTP interface was enabled for RabbitMQ Plugin in ARM 2020.2.6 and the ability to configure HTTPS was not available.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311 Explanation: The vulnerability allows an attacker to perform man-in-the-middle attacks due to the lack of HTTPS configuration for the HTTP interface of the RabbitMQ Plugin in ARM 2020.2.6. Vendor: ARM Cause: The HTTP interface was enabled for the RabbitMQ Plugin without the ability to configure HTTPS. Impact: The vulnerability allows attackers to intercept and potentially manipulate data transmitted over the HTTP interface.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The HTTP interface was enabled for RabbitMQ Plugin in ARM 2020.2.6 and the ability to configure HTTPS was not available.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311 Explanation: The vulnerability allows an attacker to perform man-in-the-middle attacks due to the lack of HTTPS configuration for the HTTP interface of the RabbitMQ Plugin in ARM 2020.2.6. Vendor: ARM Cause: The HTTP interface was enabled for the RabbitMQ Plugin without the ability to configure HTTPS. Impact: The vulnerability allows attackers to intercept and potentially manipulate data transmitted over the HTTP interface.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The HTTP interface was enabled for RabbitMQ Plugin in ARM 2020.2.6 and the ability to configure HTTPS was not available.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311 Explanation: The vulnerability allows an attacker to perform man-in-the-middle attacks due to the lack of HTTPS configuration for the HTTP interface of the RabbitMQ Plugin in ARM 2020.2.6. Vendor: ARM Cause: The HTTP interface was enabled for the RabbitMQ Plugin without the ability to configure HTTPS. Impact: The vulnerability allows attackers to intercept and potentially manipulate data transmitted over the HTTP interface.",2021-10-21T18:15:10.113,4.7,MEDIUM,nvd,the http interface was enabled for rabbitmq plugin in arm 202026 and the ability to configure https was not available,The HTTP interface was enabled for RabbitMQ Plugin in ARM 2020.2.6 and the ability to configure HTTPS was not available.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311 Explanation: The vulnerability allows an attacker to perform man-in-the-middle attacks due to the lack of HTTPS configuration for the HTTP interface of the RabbitMQ Plugin in ARM 2020.2.6. Vendor: ARM Cause: The HTTP interface was enabled for the RabbitMQ Plugin without the ability to configure HTTPS. Impact: The vulnerability allows attackers to intercept and potentially manipulate data transmitted over the HTTP interface.
CVE-2021-23207,An attacker with physical access to the host can extract the secrets from the registry and create valid JWT tokens for the Fresenius Kabi Vigilant MasterMed version 2.0.1.3 application and impersonate arbitrary users. An attacker could manipulate RabbitMQ queues and messages by impersonating users.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An attacker with physical access to the host can extract the secrets from the registry and create valid JWT tokens for the Fresenius Kabi Vigilant MasterMed version 2.0.1.3 application and impersonate arbitrary users. An attacker could manipulate RabbitMQ queues and messages by impersonating users.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An attacker with physical access to the host can extract the secrets from the registry and create valid JWT tokens for the Fresenius Kabi Vigilant MasterMed version 2.0.1.3 application and impersonate arbitrary users. An attacker could manipulate RabbitMQ queues and messages by impersonating users.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269",2022-01-21T19:15:08.063,6.5,MEDIUM,nvd,an attacker with physical access to the host can extract the secrets from the registry and create valid jwt tokens for the fresenius kabi vigilant mastermed version 2013 application and impersonate arbitrary users an attacker could manipulate rabbitmq queues and messages by impersonating users,An attacker with physical access to the host can extract the secrets from the registry and create valid JWT tokens for the Fresenius Kabi Vigilant MasterMed version 2.0.1.3 application and impersonate arbitrary users. An attacker could manipulate RabbitMQ queues and messages by impersonating users.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269
CVE-2021-43799,"Zulip is an open-source team collaboration tool. Zulip Server installs RabbitMQ for internal message passing. In versions of Zulip Server prior to 4.9, the initial installation (until first reboot, or restart of RabbitMQ) does not successfully limit the default ports which RabbitMQ opens; this inclu",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 255,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Zulip is an open-source team collaboration tool. Zulip Server installs RabbitMQ for internal message passing. In versions of Zulip Server prior to 4.9, the initial installation (until first reboot, or restart of RabbitMQ) does not successfully limit the default ports which RabbitMQ opens; this inclu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 255","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Zulip is an open-source team collaboration tool. Zulip Server installs RabbitMQ for internal message passing. In versions of Zulip Server prior to 4.9, the initial installation (until first reboot, or restart of RabbitMQ) does not successfully limit the default ports which RabbitMQ opens; this inclu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 255",2022-01-25T21:15:07.853,8.6,HIGH,nvd,zulip is an opensource team collaboration tool zulip server installs rabbitmq for internal message passing in versions of zulip server prior to 49 the initial installation until first reboot or restart of rabbitmq does not successfully limit the default ports which rabbitmq opens this inclu,"Zulip is an open-source team collaboration tool. Zulip Server installs RabbitMQ for internal message passing. In versions of Zulip Server prior to 4.9, the initial installation (until first reboot, or restart of RabbitMQ) does not successfully limit the default ports which RabbitMQ opens; this inclu",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 255
CVE-2022-29082,"Dell EMC NetWorker versions 19.1.x, 19.1.0.x, 19.1.1.x, 19.2.x, 19.2.0.x, 19.2.1.x 19.3.x, 19.3.0.x, 19.4.x, 19.4.0.x, 19.5.x,19.5.0.x, 19.6 and 19.6.0.1 and 19.6.0.2 contain an Improper Validation of Certificate with Host Mismatch vulnerability in Rabbitmq port 5671 which could allow remote attacke",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Dell EMC NetWorker versions 19.1.x, 19.1.0.x, 19.1.1.x, 19.2.x, 19.2.0.x, 19.2.1.x 19.3.x, 19.3.0.x, 19.4.x, 19.4.0.x, 19.5.x,19.5.0.x, 19.6 and 19.6.0.1 and 19.6.0.2 contain an Improper Validation of Certificate with Host Mismatch vulnerability in Rabbitmq port 5671 which could allow remote attacke  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Dell EMC NetWorker versions 19.1.x, 19.1.0.x, 19.1.1.x, 19.2.x, 19.2.0.x, 19.2.1.x 19.3.x, 19.3.0.x, 19.4.x, 19.4.0.x, 19.5.x,19.5.0.x, 19.6 and 19.6.0.1 and 19.6.0.2 contain an Improper Validation of Certificate with Host Mismatch vulnerability in Rabbitmq port 5671 which could allow remote attacke  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295",2022-05-26T16:15:08.313,3.7,LOW,nvd,dell emc networker versions 191x 1910x 1911x 192x 1920x 1921x 193x 1930x 194x 1940x 195x1950x 196 and 19601 and 19602 contain an improper validation of certificate with host mismatch vulnerability in rabbitmq port 5671 which could allow remote attacke,"Dell EMC NetWorker versions 19.1.x, 19.1.0.x, 19.1.1.x, 19.2.x, 19.2.0.x, 19.2.1.x 19.3.x, 19.3.0.x, 19.4.x, 19.4.0.x, 19.5.x,19.5.0.x, 19.6 and 19.6.0.1 and 19.6.0.2 contain an Improper Validation of Certificate with Host Mismatch vulnerability in Rabbitmq port 5671 which could allow remote attacke",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295
CVE-2022-38665,Jenkins CollabNet Plugins Plugin 2.0.8 and earlier stores a RabbitMQ password unencrypted in its global configuration file on the Jenkins controller where it can be viewed by users with access to the Jenkins controller file system.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 798,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Jenkins CollabNet Plugins Plugin 2.0.8 and earlier stores a RabbitMQ password unencrypted in its global configuration file on the Jenkins controller where it can be viewed by users with access to the Jenkins controller file system.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 798","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Jenkins CollabNet Plugins Plugin 2.0.8 and earlier stores a RabbitMQ password unencrypted in its global configuration file on the Jenkins controller where it can be viewed by users with access to the Jenkins controller file system.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 798",2022-08-23T17:15:15.363,6.5,MEDIUM,nvd,jenkins collabnet plugins plugin 208 and earlier stores a rabbitmq password unencrypted in its global configuration file on the jenkins controller where it can be viewed by users with access to the jenkins controller file system,Jenkins CollabNet Plugins Plugin 2.0.8 and earlier stores a RabbitMQ password unencrypted in its global configuration file on the Jenkins controller where it can be viewed by users with access to the Jenkins controller file system.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 798
CVE-2022-31008,RabbitMQ is a multi-protocol messaging and streaming broker. In affected versions the shovel and federation plugins perform URI obfuscation in their worker (link) state. The encryption key used to encrypt the URI was seeded with a predictable secret. This means that in case of certain exceptions rel,RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330 Explanation: The vulnerability arises from using a predictable secret for seeding encryption keys, allowing attackers to decrypt obfuscated URIs in RabbitMQ's shovel and federation plugins. Vendor: RabbitMQ Cause: Predictable secret used to seed encryption keys for URI obfuscation Impact: Attackers can decrypt sensitive URIs, potentially leading to unauthorized access and data exposure","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a multi-protocol messaging and streaming broker. In affected versions the shovel and federation plugins perform URI obfuscation in their worker (link) state. The encryption key used to encrypt the URI was seeded with a predictable secret. This means that in case of certain exceptions rel  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330 Explanation: The vulnerability arises from using a predictable secret for seeding encryption keys, allowing attackers to decrypt obfuscated URIs in RabbitMQ's shovel and federation plugins. Vendor: RabbitMQ Cause: Predictable secret used to seed encryption keys for URI obfuscation Impact: Attackers can decrypt sensitive URIs, potentially leading to unauthorized access and data exposure","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a multi-protocol messaging and streaming broker. In affected versions the shovel and federation plugins perform URI obfuscation in their worker (link) state. The encryption key used to encrypt the URI was seeded with a predictable secret. This means that in case of certain exceptions rel  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330 Explanation: The vulnerability arises from using a predictable secret for seeding encryption keys, allowing attackers to decrypt obfuscated URIs in RabbitMQ's shovel and federation plugins. Vendor: RabbitMQ Cause: Predictable secret used to seed encryption keys for URI obfuscation Impact: Attackers can decrypt sensitive URIs, potentially leading to unauthorized access and data exposure",2022-10-06T18:16:00.783,5.5,MEDIUM,nvd,rabbitmq is a multiprotocol messaging and streaming broker in affected versions the shovel and federation plugins perform uri obfuscation in their worker link state the encryption key used to encrypt the uri was seeded with a predictable secret this means that in case of certain exceptions rel,RabbitMQ is a multi-protocol messaging and streaming broker. In affected versions the shovel and federation plugins perform URI obfuscation in their worker (link) state. The encryption key used to encrypt the URI was seeded with a predictable secret. This means that in case of certain exceptions rel,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330 Explanation: The vulnerability arises from using a predictable secret for seeding encryption keys, allowing attackers to decrypt obfuscated URIs in RabbitMQ's shovel and federation plugins. Vendor: RabbitMQ Cause: Predictable secret used to seed encryption keys for URI obfuscation Impact: Attackers can decrypt sensitive URIs, potentially leading to unauthorized access and data exposure"
CVE-2023-24447,A cross-site request forgery (CSRF) vulnerability in Jenkins RabbitMQ Consumer Plugin 2.8 and earlier allows attackers to connect to an attacker-specified AMQP(S) URL using attacker-specified username and password.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A cross-site request forgery (CSRF) vulnerability in Jenkins RabbitMQ Consumer Plugin 2.8 and earlier allows attackers to connect to an attacker-specified AMQP(S) URL using attacker-specified username and password.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A cross-site request forgery (CSRF) vulnerability in Jenkins RabbitMQ Consumer Plugin 2.8 and earlier allows attackers to connect to an attacker-specified AMQP(S) URL using attacker-specified username and password.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352",2023-01-26T21:18:18.277,8.8,HIGH,nvd,a crosssite request forgery csrf vulnerability in jenkins rabbitmq consumer plugin 28 and earlier allows attackers to connect to an attackerspecified amqps url using attackerspecified username and password,A cross-site request forgery (CSRF) vulnerability in Jenkins RabbitMQ Consumer Plugin 2.8 and earlier allows attackers to connect to an attacker-specified AMQP(S) URL using attacker-specified username and password.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352
CVE-2023-24448,A missing permission check in Jenkins RabbitMQ Consumer Plugin 2.8 and earlier allows attackers with Overall/Read permission to connect to an attacker-specified AMQP(S) URL using attacker-specified username and password.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2846,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A missing permission check in Jenkins RabbitMQ Consumer Plugin 2.8 and earlier allows attackers with Overall/Read permission to connect to an attacker-specified AMQP(S) URL using attacker-specified username and password.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2846","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A missing permission check in Jenkins RabbitMQ Consumer Plugin 2.8 and earlier allows attackers with Overall/Read permission to connect to an attacker-specified AMQP(S) URL using attacker-specified username and password.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2846",2023-01-26T21:18:18.347,6.5,MEDIUM,nvd,a missing permission check in jenkins rabbitmq consumer plugin 28 and earlier allows attackers with overallread permission to connect to an attackerspecified amqps url using attackerspecified username and password,A missing permission check in Jenkins RabbitMQ Consumer Plugin 2.8 and earlier allows attackers with Overall/Read permission to connect to an attacker-specified AMQP(S) URL using attacker-specified username and password.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2846
CVE-2023-24568,"
Dell NetWorker, contains an Improper Validation of Certificate with Host Mismatch vulnerability in Rabbitmq port which could disallow replacing CA signed certificates.

",RabbitMQ,CWE-295,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-295,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description: ","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description: ",2023-05-30T16:15:09.533,5.0,MEDIUM,nvd,"
dell networker contains an improper validation of certificate with host mismatch vulnerability in rabbitmq port which could disallow replacing ca signed certificates

","
Dell NetWorker, contains an Improper Validation of Certificate with Host Mismatch vulnerability in Rabbitmq port which could disallow replacing CA signed certificates.

",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-295
CVE-2023-35789,"An issue was discovered in the C AMQP client library (aka rabbitmq-c) through 0.13.0 for RabbitMQ. Credentials can only be entered on the command line (e.g., for amqp-publish or amqp-consume) and are thus visible to local attackers by listing a process and its arguments.",RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows attackers to obtain sensitive information from process arguments, specifically credentials entered on the command line. Vendor: RabbitMQ Cause: Credentials are entered on the command line, making them visible to local attackers through process listing. Impact: Local attackers can obtain sensitive credentials.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in the C AMQP client library (aka rabbitmq-c) through 0.13.0 for RabbitMQ. Credentials can only be entered on the command line (e.g., for amqp-publish or amqp-consume) and are thus visible to local attackers by listing a process and its arguments.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows attackers to obtain sensitive information from process arguments, specifically credentials entered on the command line. Vendor: RabbitMQ Cause: Credentials are entered on the command line, making them visible to local attackers through process listing. Impact: Local attackers can obtain sensitive credentials.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in the C AMQP client library (aka rabbitmq-c) through 0.13.0 for RabbitMQ. Credentials can only be entered on the command line (e.g., for amqp-publish or amqp-consume) and are thus visible to local attackers by listing a process and its arguments.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows attackers to obtain sensitive information from process arguments, specifically credentials entered on the command line. Vendor: RabbitMQ Cause: Credentials are entered on the command line, making them visible to local attackers through process listing. Impact: Local attackers can obtain sensitive credentials.",2023-06-16T21:15:09.383,5.5,MEDIUM,nvd,an issue was discovered in the c amqp client library aka rabbitmqc through 0130 for rabbitmq credentials can only be entered on the command line eg for amqppublish or amqpconsume and are thus visible to local attackers by listing a process and its arguments,"An issue was discovered in the C AMQP client library (aka rabbitmq-c) through 0.13.0 for RabbitMQ. Credentials can only be entered on the command line (e.g., for amqp-publish or amqp-consume) and are thus visible to local attackers by listing a process and its arguments.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows attackers to obtain sensitive information from process arguments, specifically credentials entered on the command line. Vendor: RabbitMQ Cause: Credentials are entered on the command line, making them visible to local attackers through process listing. Impact: Local attackers can obtain sensitive credentials."
CVE-2023-26512,"CWE-502 Deserialization of Untrusted Data��at the��rabbitmq-connector plugin��module in Apache EventMesh (incubating)��V1.7.0\V1.8.0 on windows\linux\mac os e.g. platforms allows attackers��to send controlled message and 

remote code execute��via rabbitmq messages. Users can use the code under the master",RabbitMQ,CWE-502,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  CWE-502 Deserialization of Untrusted Data at the rabbitmq-connector plugin module in Apache EventMesh (incubating) V1.7.0\V1.8.0 on windows\linux\mac os e.g. platforms allows attackers to send controlled message and remote code execute via rabbitmq messages. Users can use the code under the master  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  CWE-502 Deserialization of Untrusted Data at the rabbitmq-connector plugin module in Apache EventMesh (incubating) V1.7.0\V1.8.0 on windows\linux\mac os e.g. platforms allows attackers to send controlled message and remote code execute via rabbitmq messages. Users can use the code under the master  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502",2023-07-17T08:15:09.243,9.8,CRITICAL,nvd,"cwe502 deserialization of untrusted data��at the��rabbitmqconnector plugin��module in apache eventmesh incubating��v170v180 on windowslinuxmac os eg platforms allows attackers��to send controlled message and 

remote code execute��via rabbitmq messages users can use the code under the master","CWE-502 Deserialization of Untrusted Data��at the��rabbitmq-connector plugin��module in Apache EventMesh (incubating)��V1.7.0\V1.8.0 on windows\linux\mac os e.g. platforms allows attackers��to send controlled message and 

remote code execute��via rabbitmq messages. Users can use the code under the master",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502
CVE-2023-40256,A vulnerability was discovered in Veritas NetBackup Snapshot Manager before 10.2.0.1 that allowed untrusted clients to interact with the RabbitMQ service. This was caused by improper validation of the client certificate due to misconfiguration of the RabbitMQ service. Exploiting this impacts the con,RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 306 Explanation: Improper handling of cryptographic storage by not validating the client certificate, leading to unauthorized access. Vendor: Veritas Cause: Misconfiguration of the RabbitMQ service led to improper validation of client certificates. Impact: Unauthorized interaction with the RabbitMQ service.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability was discovered in Veritas NetBackup Snapshot Manager before 10.2.0.1 that allowed untrusted clients to interact with the RabbitMQ service. This was caused by improper validation of the client certificate due to misconfiguration of the RabbitMQ service. Exploiting this impacts the con  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 306 Explanation: Improper handling of cryptographic storage by not validating the client certificate, leading to unauthorized access. Vendor: Veritas Cause: Misconfiguration of the RabbitMQ service led to improper validation of client certificates. Impact: Unauthorized interaction with the RabbitMQ service.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability was discovered in Veritas NetBackup Snapshot Manager before 10.2.0.1 that allowed untrusted clients to interact with the RabbitMQ service. This was caused by improper validation of the client certificate due to misconfiguration of the RabbitMQ service. Exploiting this impacts the con  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 306 Explanation: Improper handling of cryptographic storage by not validating the client certificate, leading to unauthorized access. Vendor: Veritas Cause: Misconfiguration of the RabbitMQ service led to improper validation of client certificates. Impact: Unauthorized interaction with the RabbitMQ service.",2023-08-11T05:15:42.450,9.8,CRITICAL,nvd,a vulnerability was discovered in veritas netbackup snapshot manager before 10201 that allowed untrusted clients to interact with the rabbitmq service this was caused by improper validation of the client certificate due to misconfiguration of the rabbitmq service exploiting this impacts the con,A vulnerability was discovered in Veritas NetBackup Snapshot Manager before 10.2.0.1 that allowed untrusted clients to interact with the RabbitMQ service. This was caused by improper validation of the client certificate due to misconfiguration of the RabbitMQ service. Exploiting this impacts the con,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 306 Explanation: Improper handling of cryptographic storage by not validating the client certificate, leading to unauthorized access. Vendor: Veritas Cause: Misconfiguration of the RabbitMQ service led to improper validation of client certificates. Impact: Unauthorized interaction with the RabbitMQ service."
CVE-2023-34050,"









In spring AMQP versions 1.0.0 to
2.4.16 and 3.0.0 to 3.0.9 , allowed list patterns for deserializable class
names were added to Spring AMQP, allowing users to lock down deserialization of
data in messages from untrusted sources; however by default, when no allowed
list was provided, all cl",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description: ","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description: ",2023-10-19T08:15:08.357,5.0,MEDIUM,nvd,"









in spring amqp versions 100 to
2416 and 300 to 309  allowed list patterns for deserializable class
names were added to spring amqp allowing users to lock down deserialization of
data in messages from untrusted sources however by default when no allowed
list was provided all cl","









In spring AMQP versions 1.0.0 to
2.4.16 and 3.0.0 to 3.0.9 , allowed list patterns for deserializable class
names were added to Spring AMQP, allowing users to lock down deserialization of
data in messages from untrusted sources; however by default, when no allowed
list was provided, all cl",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502
CVE-2023-46118,"RabbitMQ is a multi-protocol messaging and streaming broker. HTTP API did not enforce an HTTP request body limit, making it vulnerable for denial of service (DoS) attacks with very large messages. An authenticated user with sufficient credentials can publish a very large messages over the HTTP API a",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: Lack of input validation leading to denial of service Vendor: RabbitMQ Cause: HTTP API did not enforce an HTTP request body limit Impact: Denial of service via large messages,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a multi-protocol messaging and streaming broker. HTTP API did not enforce an HTTP request body limit, making it vulnerable for denial of service (DoS) attacks with very large messages. An authenticated user with sufficient credentials can publish a very large messages over the HTTP API a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: Lack of input validation leading to denial of service Vendor: RabbitMQ Cause: HTTP API did not enforce an HTTP request body limit Impact: Denial of service via large messages","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a multi-protocol messaging and streaming broker. HTTP API did not enforce an HTTP request body limit, making it vulnerable for denial of service (DoS) attacks with very large messages. An authenticated user with sufficient credentials can publish a very large messages over the HTTP API a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: Lack of input validation leading to denial of service Vendor: RabbitMQ Cause: HTTP API did not enforce an HTTP request body limit Impact: Denial of service via large messages",2023-10-25T18:17:36.117,4.9,MEDIUM,nvd,rabbitmq is a multiprotocol messaging and streaming broker http api did not enforce an http request body limit making it vulnerable for denial of service dos attacks with very large messages an authenticated user with sufficient credentials can publish a very large messages over the http api a,"RabbitMQ is a multi-protocol messaging and streaming broker. HTTP API did not enforce an HTTP request body limit, making it vulnerable for denial of service (DoS) attacks with very large messages. An authenticated user with sufficient credentials can publish a very large messages over the HTTP API a",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: Lack of input validation leading to denial of service Vendor: RabbitMQ Cause: HTTP API did not enforce an HTTP request body limit Impact: Denial of service via large messages
CVE-2023-46120,The RabbitMQ Java client library allows Java and JVM-based applications to connect to and interact with RabbitMQ nodes. `maxBodyLebgth` was not used when receiving Message objects.  Attackers could send a very large Message causing a memory overflow and triggering an OOM Error. Users of RabbitMQ may,RabbitMQ,CWE-122,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The RabbitMQ Java client library allows Java and JVM-based applications to connect to and interact with RabbitMQ nodes. maxBodyLebgth was not used when receiving Message objects. Attackers could send a very large Message causing a memory overflow and triggering an OOM Error. Users of RabbitMQ may  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The RabbitMQ Java client library allows Java and JVM-based applications to connect to and interact with RabbitMQ nodes. maxBodyLebgth was not used when receiving Message objects. Attackers could send a very large Message causing a memory overflow and triggering an OOM Error. Users of RabbitMQ may  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122",2023-10-25T18:17:36.257,4.9,MEDIUM,nvd,the rabbitmq java client library allows java and jvmbased applications to connect to and interact with rabbitmq nodes maxbodylebgth was not used when receiving message objects  attackers could send a very large message causing a memory overflow and triggering an oom error users of rabbitmq may,The RabbitMQ Java client library allows Java and JVM-based applications to connect to and interact with RabbitMQ nodes. `maxBodyLebgth` was not used when receiving Message objects.  Attackers could send a very large Message causing a memory overflow and triggering an OOM Error. Users of RabbitMQ may,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122
CVE-2024-1156,Incorrect directory permissions for the shared NI RabbitMQ service may allow a local authenticated user to read RabbitMQ configuration information and potentially enable escalation of privileges.,RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 276 Explanation: Incorrect permissions on shared directories can allow unauthorized access to sensitive information or escalate privileges. Vendor: RabbitMQ Cause: Inadequate directory permissions for the shared NI RabbitMQ service Impact: Local authenticated users can read configuration information and potentially escalate privileges,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect directory permissions for the shared NI RabbitMQ service may allow a local authenticated user to read RabbitMQ configuration information and potentially enable escalation of privileges.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 276 Explanation: Incorrect permissions on shared directories can allow unauthorized access to sensitive information or escalate privileges. Vendor: RabbitMQ Cause: Inadequate directory permissions for the shared NI RabbitMQ service Impact: Local authenticated users can read configuration information and potentially escalate privileges","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect directory permissions for the shared NI RabbitMQ service may allow a local authenticated user to read RabbitMQ configuration information and potentially enable escalation of privileges.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 276 Explanation: Incorrect permissions on shared directories can allow unauthorized access to sensitive information or escalate privileges. Vendor: RabbitMQ Cause: Inadequate directory permissions for the shared NI RabbitMQ service Impact: Local authenticated users can read configuration information and potentially escalate privileges",2024-02-20T15:15:09.910,7.8,HIGH,nvd,incorrect directory permissions for the shared ni rabbitmq service may allow a local authenticated user to read rabbitmq configuration information and potentially enable escalation of privileges,Incorrect directory permissions for the shared NI RabbitMQ service may allow a local authenticated user to read RabbitMQ configuration information and potentially enable escalation of privileges.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 276 Explanation: Incorrect permissions on shared directories can allow unauthorized access to sensitive information or escalate privileges. Vendor: RabbitMQ Cause: Inadequate directory permissions for the shared NI RabbitMQ service Impact: Local authenticated users can read configuration information and potentially escalate privileges
CVE-2024-25650,"Insecure key exchange between Delinea PAM Secret Server 11.4 and the Distributed Engine 8.4.3 allows a PAM administrator to obtain the Symmetric Key (used to encrypt RabbitMQ messages) via crafted payloads to the /pre-authenticate, /authenticate, and /execute-and-respond REST API endpoints. This mak",RabbitMQ,CWE-310,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insecure key exchange between Delinea PAM Secret Server 11.4 and the Distributed Engine 8.4.3 allows a PAM administrator to obtain the Symmetric Key (used to encrypt RabbitMQ messages) via crafted payloads to the /pre-authenticate, /authenticate, and /execute-and-respond REST API endpoints. This mak  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insecure key exchange between Delinea PAM Secret Server 11.4 and the Distributed Engine 8.4.3 allows a PAM administrator to obtain the Symmetric Key (used to encrypt RabbitMQ messages) via crafted payloads to the /pre-authenticate, /authenticate, and /execute-and-respond REST API endpoints. This mak  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310",2024-03-14T02:15:50.690,5.9,MEDIUM,nvd,insecure key exchange between delinea pam secret server 114 and the distributed engine 843 allows a pam administrator to obtain the symmetric key used to encrypt rabbitmq messages via crafted payloads to the preauthenticate authenticate and executeandrespond rest api endpoints this mak,"Insecure key exchange between Delinea PAM Secret Server 11.4 and the Distributed Engine 8.4.3 allows a PAM administrator to obtain the Symmetric Key (used to encrypt RabbitMQ messages) via crafted payloads to the /pre-authenticate, /authenticate, and /execute-and-respond REST API endpoints. This mak",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310
CVE-2024-25649,"In Delinea PAM Secret Server 11.4, it is possible for an attacker (with Administrator access to the Secret Server machine) to read the following data from a memory dump: the decrypted master key, database credentials (when SQL Server Authentication is enabled), the encryption key of RabbitMQ queue m",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 331,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Delinea PAM Secret Server 11.4, it is possible for an attacker (with Administrator access to the Secret Server machine) to read the following data from a memory dump: the decrypted master key, database credentials (when SQL Server Authentication is enabled), the encryption key of RabbitMQ queue m  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 331","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Delinea PAM Secret Server 11.4, it is possible for an attacker (with Administrator access to the Secret Server machine) to read the following data from a memory dump: the decrypted master key, database credentials (when SQL Server Authentication is enabled), the encryption key of RabbitMQ queue m  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 331",2024-03-14T03:15:08.540,6.7,MEDIUM,nvd,in delinea pam secret server 114 it is possible for an attacker with administrator access to the secret server machine to read the following data from a memory dump the decrypted master key database credentials when sql server authentication is enabled the encryption key of rabbitmq queue m,"In Delinea PAM Secret Server 11.4, it is possible for an attacker (with Administrator access to the Secret Server machine) to read the following data from a memory dump: the decrypted master key, database credentials (when SQL Server Authentication is enabled), the encryption key of RabbitMQ queue m",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 331
CVE-2024-23473,"The SolarWinds Access Rights Manager was found to contain a hard-coded credential authentication bypass vulnerability. If exploited, this vulnerability allows access to the RabbitMQ management console. 

We thank Trend Micro Zero Day Initiative (ZDI) for its ongoing partnership in coordinating with ",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SolarWinds Access Rights Manager was found to contain a hard-coded credential authentication bypass vulnerability. If exploited, this vulnerability allows access to the RabbitMQ management console. We thank Trend Micro Zero Day Initiative (ZDI) for its ongoing partnership in coordinating with  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SolarWinds Access Rights Manager was found to contain a hard-coded credential authentication bypass vulnerability. If exploited, this vulnerability allows access to the RabbitMQ management console. We thank Trend Micro Zero Day Initiative (ZDI) for its ongoing partnership in coordinating with  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22",2024-05-14T14:59:29.340,8.6,HIGH,nvd,"the solarwinds access rights manager was found to contain a hardcoded credential authentication bypass vulnerability if exploited this vulnerability allows access to the rabbitmq management console 

we thank trend micro zero day initiative zdi for its ongoing partnership in coordinating with ","The SolarWinds Access Rights Manager was found to contain a hard-coded credential authentication bypass vulnerability. If exploited, this vulnerability allows access to the RabbitMQ management console. 

We thank Trend Micro Zero Day Initiative (ZDI) for its ongoing partnership in coordinating with ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22
CVE-2024-28990,"SolarWinds Access Rights Manager (ARM) was found to contain a hard-coded credential authentication bypass vulnerability. If exploited, this vulnerability would allow access to the RabbitMQ management console.

We thank Trend Micro Zero Day Initiative (ZDI) for its ongoing partnership in coordinating",RabbitMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SolarWinds Access Rights Manager (ARM) was found to contain a hard-coded credential authentication bypass vulnerability. If exploited, this vulnerability would allow access to the RabbitMQ management console. We thank Trend Micro Zero Day Initiative (ZDI) for its ongoing partnership in coordinating  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SolarWinds Access Rights Manager (ARM) was found to contain a hard-coded credential authentication bypass vulnerability. If exploited, this vulnerability would allow access to the RabbitMQ management console. We thank Trend Micro Zero Day Initiative (ZDI) for its ongoing partnership in coordinating  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321",2024-09-12T14:16:06.273,6.3,MEDIUM,nvd,"solarwinds access rights manager arm was found to contain a hardcoded credential authentication bypass vulnerability if exploited this vulnerability would allow access to the rabbitmq management console

we thank trend micro zero day initiative zdi for its ongoing partnership in coordinating","SolarWinds Access Rights Manager (ARM) was found to contain a hard-coded credential authentication bypass vulnerability. If exploited, this vulnerability would allow access to the RabbitMQ management console.

We thank Trend Micro Zero Day Initiative (ZDI) for its ongoing partnership in coordinating",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321
CVE-2024-51988,"RabbitMQ is a feature rich, multi-protocol messaging and streaming broker. In affected versions queue deletion via the HTTP API was not verifying the `configure` permission of the user. Users who had all of the following: 1. Valid credentials, 2. Some permissions for the target virtual host & 3. HTT",RabbitMQ,CWE-264,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a feature rich, multi-protocol messaging and streaming broker. In affected versions queue deletion via the HTTP API was not verifying the configure permission of the user. Users who had all of the following: 1. Valid credentials, 2. Some permissions for the target virtual host & 3. HTT  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RabbitMQ is a feature rich, multi-protocol messaging and streaming broker. In affected versions queue deletion via the HTTP API was not verifying the configure permission of the user. Users who had all of the following: 1. Valid credentials, 2. Some permissions for the target virtual host & 3. HTT  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264",2024-11-06T20:15:06.513,6.5,MEDIUM,nvd,rabbitmq is a feature rich multiprotocol messaging and streaming broker in affected versions queue deletion via the http api was not verifying the configure permission of the user users who had all of the following 1 valid credentials 2 some permissions for the target virtual host  3 htt,"RabbitMQ is a feature rich, multi-protocol messaging and streaming broker. In affected versions queue deletion via the HTTP API was not verifying the `configure` permission of the user. Users who had all of the following: 1. Valid credentials, 2. Some permissions for the target virtual host & 3. HTT",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264
CVE-2025-24400,"Jenkins Eiffel Broadcaster Plugin 2.8.0 through 2.10.2 (both inclusive) uses the credential ID as the cache key during signing operations, allowing attackers able to create a credential with the same ID as a legitimate one in a different credentials store to sign an event published to RabbitMQ with ",RabbitMQ,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295 Explanation: The vulnerability allows attackers to perform unauthorized actions by manipulating the cache key used in signing operations. Vendor: Jenkins Security Cause: Jenkins Eiffel Broadcaster Plugin uses the credential ID as the cache key for signing operations. Impact: Attackers can sign events published to RabbitMQ with a different credential store, potentially leading to unauthorized actions.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Jenkins Eiffel Broadcaster Plugin 2.8.0 through 2.10.2 (both inclusive) uses the credential ID as the cache key during signing operations, allowing attackers able to create a credential with the same ID as a legitimate one in a different credentials store to sign an event published to RabbitMQ with  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295 Explanation: The vulnerability allows attackers to perform unauthorized actions by manipulating the cache key used in signing operations. Vendor: Jenkins Security Cause: Jenkins Eiffel Broadcaster Plugin uses the credential ID as the cache key for signing operations. Impact: Attackers can sign events published to RabbitMQ with a different credential store, potentially leading to unauthorized actions.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Jenkins Eiffel Broadcaster Plugin 2.8.0 through 2.10.2 (both inclusive) uses the credential ID as the cache key during signing operations, allowing attackers able to create a credential with the same ID as a legitimate one in a different credentials store to sign an event published to RabbitMQ with  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295 Explanation: The vulnerability allows attackers to perform unauthorized actions by manipulating the cache key used in signing operations. Vendor: Jenkins Security Cause: Jenkins Eiffel Broadcaster Plugin uses the credential ID as the cache key for signing operations. Impact: Attackers can sign events published to RabbitMQ with a different credential store, potentially leading to unauthorized actions.",2025-01-22T17:15:13.943,,,nvd,jenkins eiffel broadcaster plugin 280 through 2102 both inclusive uses the credential id as the cache key during signing operations allowing attackers able to create a credential with the same id as a legitimate one in a different credentials store to sign an event published to rabbitmq with,"Jenkins Eiffel Broadcaster Plugin 2.8.0 through 2.10.2 (both inclusive) uses the credential ID as the cache key during signing operations, allowing attackers able to create a credential with the same ID as a legitimate one in a different credentials store to sign an event published to RabbitMQ with ","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295 Explanation: The vulnerability allows attackers to perform unauthorized actions by manipulating the cache key used in signing operations. Vendor: Jenkins Security Cause: Jenkins Eiffel Broadcaster Plugin uses the credential ID as the cache key for signing operations. Impact: Attackers can sign events published to RabbitMQ with a different credential store, potentially leading to unauthorized actions."
CVE-2020-13821,"An issue was discovered in HiveMQ Broker Control Center 4.3.2. A crafted clientid parameter in an MQTT packet (sent to the Broker) is reflected in the client section of the management console. The attacker's JavaScript is loaded in a browser, which can lead to theft of the session and cookie of the ",HiveMQ,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in HiveMQ Broker Control Center 4.3.2. A crafted clientid parameter in an MQTT packet (sent to the Broker) is reflected in the client section of the management console. The attacker's JavaScript is loaded in a browser, which can lead to theft of the session and cookie of the  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in HiveMQ Broker Control Center 4.3.2. A crafted clientid parameter in an MQTT packet (sent to the Broker) is reflected in the client section of the management console. The attacker's JavaScript is loaded in a browser, which can lead to theft of the session and cookie of the  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2020-08-26T16:15:12.447,5.4,MEDIUM,nvd,an issue was discovered in hivemq broker control center 432 a crafted clientid parameter in an mqtt packet sent to the broker is reflected in the client section of the management console the attackers javascript is loaded in a browser which can lead to theft of the session and cookie of the,"An issue was discovered in HiveMQ Broker Control Center 4.3.2. A crafted clientid parameter in an MQTT packet (sent to the Broker) is reflected in the client section of the management console. The attacker's JavaScript is loaded in a browser, which can lead to theft of the session and cookie of the ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79