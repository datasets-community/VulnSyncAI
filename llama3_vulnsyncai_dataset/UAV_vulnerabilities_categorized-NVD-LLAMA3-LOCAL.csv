id,description,vendor,cwe_category,cwe_explanation,cause,impact,published,cvss_score,severity,source,description_without_punct,description_normalized,explanation
CVE-2017-13002,The AODV parser in tcpdump before 4.9.2 has a buffer over-read in print-aodv.c:aodv_extension().,AODV,CWE-125,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a buffer over-read vulnerability, where an application reads data past the end of a buffer, buffer overflow, or before the start of a buffer, buffer under-read. Vendor: The Tcpdump Project Cause: The vulnerability is caused by a buffer over-read in the print-aodv.c:aodv_extension() function within the AODV parser in tcpdump before version 4.9.2. Impact: An attacker could potentially trigger a buffer over-read, potentially leading to information disclosure or other unspecified impacts.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The AODV parser in tcpdump before 4.9.2 has a buffer over-read in print-aodv.c:aodv_extension().  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a buffer over-read vulnerability, where an application reads data past the end of a buffer, buffer overflow, or before the start of a buffer, buffer under-read. Vendor: The Tcpdump Project Cause: The vulnerability is caused by a buffer over-read in the print-aodv.c:aodv_extension() function within the AODV parser in tcpdump before version 4.9.2. Impact: An attacker could potentially trigger a buffer over-read, potentially leading to information disclosure or other unspecified impacts.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The AODV parser in tcpdump before 4.9.2 has a buffer over-read in print-aodv.c:aodv_extension().  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a buffer over-read vulnerability, where an application reads data past the end of a buffer, buffer overflow, or before the start of a buffer, buffer under-read. Vendor: The Tcpdump Project Cause: The vulnerability is caused by a buffer over-read in the print-aodv.c:aodv_extension() function within the AODV parser in tcpdump before version 4.9.2. Impact: An attacker could potentially trigger a buffer over-read, potentially leading to information disclosure or other unspecified impacts.",2017-09-14T06:29:01.280,,,nvd,the aodv parser in tcpdump before 492 has a buffer overread in printaodvcaodv_extension,The AODV parser in tcpdump before 4.9.2 has a buffer over-read in print-aodv.c:aodv_extension().,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a buffer over-read vulnerability, where an application reads data past the end of a buffer, buffer overflow, or before the start of a buffer, buffer under-read. Vendor: The Tcpdump Project Cause: The vulnerability is caused by a buffer over-read in the print-aodv.c:aodv_extension() function within the AODV parser in tcpdump before version 4.9.2. Impact: An attacker could potentially trigger a buffer over-read, potentially leading to information disclosure or other unspecified impacts."
CVE-2003-0533,"Stack-based buffer overflow in certain Active Directory service functions in LSASRV.DLL of the Local Security Authority Subsystem Service (LSASS) in Microsoft Windows NT 4.0 SP6a, 2000 SP2 through SP4, XP SP1, Server 2003, NetMeeting, Windows 98, and Windows ME, allows remote attackers to execute ar",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Stack-based buffer overflow in certain Active Directory service functions in LSASRV.DLL of the Local Security Authority Subsystem Service (LSASS) in Microsoft Windows NT 4.0 SP6a, 2000 SP2 through SP4, XP SP1, Server 2003, NetMeeting, Windows 98, and Windows ME, allows remote attackers to execute ar  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Stack-based buffer overflow in certain Active Directory service functions in LSASRV.DLL of the Local Security Authority Subsystem Service (LSASS) in Microsoft Windows NT 4.0 SP6a, 2000 SP2 through SP4, XP SP1, Server 2003, NetMeeting, Windows 98, and Windows ME, allows remote attackers to execute ar  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2004-06-01T04:00:00.000,,,nvd,stackbased buffer overflow in certain active directory service functions in lsasrvdll of the local security authority subsystem service lsass in microsoft windows nt 40 sp6a 2000 sp2 through sp4 xp sp1 server 2003 netmeeting windows 98 and windows me allows remote attackers to execute ar,"Stack-based buffer overflow in certain Active Directory service functions in LSASRV.DLL of the Local Security Authority Subsystem Service (LSASS) in Microsoft Windows NT 4.0 SP6a, 2000 SP2 through SP4, XP SP1, Server 2003, NetMeeting, Windows 98, and Windows ME, allows remote attackers to execute ar",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2011-5145,Multiple SQL injection vulnerabilities in Open Business Management (OBM) 2.4.0-rc13 and probably earlier allow remote authenticated users to execute arbitrary SQL commands via the (1) sel_domain_id or (2) action parameter to obm.php; (3) tf_user parameter in a search action to group/group_index.php;,DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple SQL injection vulnerabilities in Open Business Management (OBM) 2.4.0-rc13 and probably earlier allow remote authenticated users to execute arbitrary SQL commands via the (1) sel_domain_id or (2) action parameter to obm.php; (3) tf_user parameter in a search action to group/group_index.php;  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple SQL injection vulnerabilities in Open Business Management (OBM) 2.4.0-rc13 and probably earlier allow remote authenticated users to execute arbitrary SQL commands via the (1) sel_domain_id or (2) action parameter to obm.php; (3) tf_user parameter in a search action to group/group_index.php;  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89",2012-08-31T21:55:01.480,,,nvd,multiple sql injection vulnerabilities in open business management obm 240rc13 and probably earlier allow remote authenticated users to execute arbitrary sql commands via the 1 sel_domain_id or 2 action parameter to obmphp 3 tf_user parameter in a search action to groupgroup_indexphp,Multiple SQL injection vulnerabilities in Open Business Management (OBM) 2.4.0-rc13 and probably earlier allow remote authenticated users to execute arbitrary SQL commands via the (1) sel_domain_id or (2) action parameter to obm.php; (3) tf_user parameter in a search action to group/group_index.php;,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89
CVE-2013-5946,"The runShellCmd function in systemCheck.htm in D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 allows remote attackers to execute arbitra",DSR,CWE-78,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-78,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The runShellCmd function in systemCheck.htm in D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 allows remote attackers to execute arbitra  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-78","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The runShellCmd function in systemCheck.htm in D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 allows remote attackers to execute arbitra  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-78",2013-12-19T04:24:51.930,,,nvd,the runshellcmd function in systemcheckhtm in dlink dsr150 with firmware before 108b44 dsr150n with firmware before 105b64 dsr250 and dsr250n with firmware before 108b44 and dsr500 dsr500n dsr1000 and dsr1000n with firmware before 108b77 allows remote attackers to execute arbitra,"The runShellCmd function in systemCheck.htm in D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 allows remote attackers to execute arbitra",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-78
CVE-2013-7004,"D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 have a hardcoded account of username gkJ9232xXyruTRmY, which makes it easier for remote a",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 222,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 have a hardcoded account of username gkJ9232xXyruTRmY, which makes it easier for remote a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 222","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 have a hardcoded account of username gkJ9232xXyruTRmY, which makes it easier for remote a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 222",2013-12-19T04:24:57.463,,,nvd,dlink dsr150 with firmware before 108b44 dsr150n with firmware before 105b64 dsr250 and dsr250n with firmware before 108b44 and dsr500 dsr500n dsr1000 and dsr1000n with firmware before 108b77 have a hardcoded account of username gkj9232xxyrutrmy which makes it easier for remote a,"D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 have a hardcoded account of username gkJ9232xXyruTRmY, which makes it easier for remote a",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 222
CVE-2013-7005,"D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 stores account passwords in cleartext, which allows local users to obtain sensitive infor",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 stores account passwords in cleartext, which allows local users to obtain sensitive infor  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 stores account passwords in cleartext, which allows local users to obtain sensitive infor  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321",2013-12-19T04:24:57.493,,,nvd,dlink dsr150 with firmware before 108b44 dsr150n with firmware before 105b64 dsr250 and dsr250n with firmware before 108b44 and dsr500 dsr500n dsr1000 and dsr1000n with firmware before 108b77 stores account passwords in cleartext which allows local users to obtain sensitive infor,"D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 stores account passwords in cleartext, which allows local users to obtain sensitive infor",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321
CVE-2012-6613,D-Link DSR-250N devices with firmware 1.05B73_WW allow Persistent Root Access because of the admin password for the admin account.,DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321 Explanation: Hard-coded credentials leading to unauthorized access. Vendor: D-Link Cause: The admin password for the admin account is hard-coded in the firmware. Impact: Persistent root access to the device.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-250N devices with firmware 1.05B73_WW allow Persistent Root Access because of the admin password for the admin account.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321 Explanation: Hard-coded credentials leading to unauthorized access. Vendor: D-Link Cause: The admin password for the admin account is hard-coded in the firmware. Impact: Persistent root access to the device.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-250N devices with firmware 1.05B73_WW allow Persistent Root Access because of the admin password for the admin account.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321 Explanation: Hard-coded credentials leading to unauthorized access. Vendor: D-Link Cause: The admin password for the admin account is hard-coded in the firmware. Impact: Persistent root access to the device.",2020-01-25T19:15:11.040,7.2,HIGH,nvd,dlink dsr250n devices with firmware 105b73_ww allow persistent root access because of the admin password for the admin account,D-Link DSR-250N devices with firmware 1.05B73_WW allow Persistent Root Access because of the admin password for the admin account.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321 Explanation: Hard-coded credentials leading to unauthorized access. Vendor: D-Link Cause: The admin password for the admin account is hard-coded in the firmware. Impact: Persistent root access to the device.
CVE-2013-5945,"Multiple SQL injection vulnerabilities in D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 allow remote attackers to execute arbitrary SQL",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple SQL injection vulnerabilities in D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 allow remote attackers to execute arbitrary SQL  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple SQL injection vulnerabilities in D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 allow remote attackers to execute arbitrary SQL  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89",2020-02-11T12:15:11.757,9.8,CRITICAL,nvd,multiple sql injection vulnerabilities in dlink dsr150 with firmware before 108b44 dsr150n with firmware before 105b64 dsr250 and dsr250n with firmware before 108b44 and dsr500 dsr500n dsr1000 and dsr1000n with firmware before 108b77 allow remote attackers to execute arbitrary sql,"Multiple SQL injection vulnerabilities in D-Link DSR-150 with firmware before 1.08B44; DSR-150N with firmware before 1.05B64; DSR-250 and DSR-250N with firmware before 1.08B44; and DSR-500, DSR-500N, DSR-1000, and DSR-1000N with firmware before 1.08B77 allow remote attackers to execute arbitrary SQL",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89
CVE-2012-6614,"D-Link DSR-250N devices before 1.08B31 allow remote authenticated users to obtain ""persistent root access"" via the BusyBox CLI, as demonstrated by overwriting the super user password.",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-250N devices before 1.08B31 allow remote authenticated users to obtain ""persistent root access"" via the BusyBox CLI, as demonstrated by overwriting the super user password.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-250N devices before 1.08B31 allow remote authenticated users to obtain ""persistent root access"" via the BusyBox CLI, as demonstrated by overwriting the super user password.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264",2020-02-19T15:15:11.567,7.2,HIGH,nvd,dlink dsr250n devices before 108b31 allow remote authenticated users to obtain persistent root access via the busybox cli as demonstrated by overwriting the super user password,"D-Link DSR-250N devices before 1.08B31 allow remote authenticated users to obtain ""persistent root access"" via the BusyBox CLI, as demonstrated by overwriting the super user password.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264
CVE-2020-26567,"An issue was discovered on D-Link DSR-250N before 3.17B devices. The CGI script upgradeStatusReboot.cgi can be accessed without authentication. Any access reboots the device, rendering it therefore unusable for several minutes.",DSR,CWE-287,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-287,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered on D-Link DSR-250N before 3.17B devices. The CGI script upgradeStatusReboot.cgi can be accessed without authentication. Any access reboots the device, rendering it therefore unusable for several minutes.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-287","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered on D-Link DSR-250N before 3.17B devices. The CGI script upgradeStatusReboot.cgi can be accessed without authentication. Any access reboots the device, rendering it therefore unusable for several minutes.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-287",2020-10-08T13:15:11.233,5.5,MEDIUM,nvd,an issue was discovered on dlink dsr250n before 317b devices the cgi script upgradestatusrebootcgi can be accessed without authentication any access reboots the device rendering it therefore unusable for several minutes,"An issue was discovered on D-Link DSR-250N before 3.17B devices. The CGI script upgradeStatusReboot.cgi can be accessed without authentication. Any access reboots the device, rendering it therefore unusable for several minutes.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-287
CVE-2020-25757,"A lack of input validation and access controls in Lua CGIs on D-Link DSR VPN routers may result in arbitrary input being passed to system command APIs, resulting in arbitrary command execution with root privileges. This affects DSR-150, DSR-250, DSR-500, and DSR-1000AC with firmware 3.14 and 3.17.",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A lack of input validation and access controls in Lua CGIs on D-Link DSR VPN routers may result in arbitrary input being passed to system command APIs, resulting in arbitrary command execution with root privileges. This affects DSR-150, DSR-250, DSR-500, and DSR-1000AC with firmware 3.14 and 3.17.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A lack of input validation and access controls in Lua CGIs on D-Link DSR VPN routers may result in arbitrary input being passed to system command APIs, resulting in arbitrary command execution with root privileges. This affects DSR-150, DSR-250, DSR-500, and DSR-1000AC with firmware 3.14 and 3.17.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78",2020-12-15T20:15:16.183,8.8,HIGH,nvd,a lack of input validation and access controls in lua cgis on dlink dsr vpn routers may result in arbitrary input being passed to system command apis resulting in arbitrary command execution with root privileges this affects dsr150 dsr250 dsr500 and dsr1000ac with firmware 314 and 317,"A lack of input validation and access controls in Lua CGIs on D-Link DSR VPN routers may result in arbitrary input being passed to system command APIs, resulting in arbitrary command execution with root privileges. This affects DSR-150, DSR-250, DSR-500, and DSR-1000AC with firmware 3.14 and 3.17.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78
CVE-2020-25758,"An issue was discovered on D-Link DSR-250 3.17 devices. Insufficient validation of configuration file checksums could allow a remote, authenticated attacker to inject arbitrary crontab entries into saved configurations before uploading. These entries are executed as root.",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered on D-Link DSR-250 3.17 devices. Insufficient validation of configuration file checksums could allow a remote, authenticated attacker to inject arbitrary crontab entries into saved configurations before uploading. These entries are executed as root.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered on D-Link DSR-250 3.17 devices. Insufficient validation of configuration file checksums could allow a remote, authenticated attacker to inject arbitrary crontab entries into saved configurations before uploading. These entries are executed as root.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2020-12-15T20:15:16.243,8.8,HIGH,nvd,an issue was discovered on dlink dsr250 317 devices insufficient validation of configuration file checksums could allow a remote authenticated attacker to inject arbitrary crontab entries into saved configurations before uploading these entries are executed as root,"An issue was discovered on D-Link DSR-250 3.17 devices. Insufficient validation of configuration file checksums could allow a remote, authenticated attacker to inject arbitrary crontab entries into saved configurations before uploading. These entries are executed as root.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2020-25759,"An issue was discovered on D-Link DSR-250 3.17 devices. Certain functionality in the Unified Services Router web interface could allow an authenticated attacker to execute arbitrary commands, due to a lack of validation of inputs provided in multipart HTTP POST requests.",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered on D-Link DSR-250 3.17 devices. Certain functionality in the Unified Services Router web interface could allow an authenticated attacker to execute arbitrary commands, due to a lack of validation of inputs provided in multipart HTTP POST requests.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered on D-Link DSR-250 3.17 devices. Certain functionality in the Unified Services Router web interface could allow an authenticated attacker to execute arbitrary commands, due to a lack of validation of inputs provided in multipart HTTP POST requests.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78",2020-12-15T20:15:16.307,8.8,HIGH,nvd,an issue was discovered on dlink dsr250 317 devices certain functionality in the unified services router web interface could allow an authenticated attacker to execute arbitrary commands due to a lack of validation of inputs provided in multipart http post requests,"An issue was discovered on D-Link DSR-250 3.17 devices. Certain functionality in the Unified Services Router web interface could allow an authenticated attacker to execute arbitrary commands, due to a lack of validation of inputs provided in multipart HTTP POST requests.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78
CVE-2020-18568,"The D-Link DSR-250 (3.14) DSR-1000N (2.11B201) UPnP service contains a command injection vulnerability, which can cause remote command execution.",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The D-Link DSR-250 (3.14) DSR-1000N (2.11B201) UPnP service contains a command injection vulnerability, which can cause remote command execution.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The D-Link DSR-250 (3.14) DSR-1000N (2.11B201) UPnP service contains a command injection vulnerability, which can cause remote command execution.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78",2021-02-02T14:15:11.327,9.8,CRITICAL,nvd,the dlink dsr250 314 dsr1000n 211b201 upnp service contains a command injection vulnerability which can cause remote command execution,"The D-Link DSR-250 (3.14) DSR-1000N (2.11B201) UPnP service contains a command injection vulnerability, which can cause remote command execution.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78
CVE-2021-39615,"D-Link DSR-500N version 1.02 contains hard-coded credentials for undocumented user accounts in the '/etc/passwd' file.If an attacker succeeds in recovering the cleartext password of the identified hash value, he will be able to log in via SSH or Telnet and thus gain access to the underlying embedded",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 320,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-500N version 1.02 contains hard-coded credentials for undocumented user accounts in the '/etc/passwd' file.If an attacker succeeds in recovering the cleartext password of the identified hash value, he will be able to log in via SSH or Telnet and thus gain access to the underlying embedded  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 320","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  D-Link DSR-500N version 1.02 contains hard-coded credentials for undocumented user accounts in the '/etc/passwd' file.If an attacker succeeds in recovering the cleartext password of the identified hash value, he will be able to log in via SSH or Telnet and thus gain access to the underlying embedded  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 320",2021-08-23T22:15:28.937,9.8,CRITICAL,nvd,dlink dsr500n version 102 contains hardcoded credentials for undocumented user accounts in the etcpasswd fileif an attacker succeeds in recovering the cleartext password of the identified hash value he will be able to log in via ssh or telnet and thus gain access to the underlying embedded,"D-Link DSR-500N version 1.02 contains hard-coded credentials for undocumented user accounts in the '/etc/passwd' file.If an attacker succeeds in recovering the cleartext password of the identified hash value, he will be able to log in via SSH or Telnet and thus gain access to the underlying embedded",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 320
CVE-2024-34923,"In Avocent DSR2030 Appliance firmware 03.04.00.07 before 03.07.01.23, and SVIP1020 Appliance firmware 01.06.00.03 before 01.07.00.00, there is reflected cross-site scripting (XSS).",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Avocent DSR2030 Appliance firmware 03.04.00.07 before 03.07.01.23, and SVIP1020 Appliance firmware 01.06.00.03 before 01.07.00.00, there is reflected cross-site scripting (XSS).  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Avocent DSR2030 Appliance firmware 03.04.00.07 before 03.07.01.23, and SVIP1020 Appliance firmware 01.06.00.03 before 01.07.00.00, there is reflected cross-site scripting (XSS).  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2024-05-27T20:15:09.060,6.1,MEDIUM,nvd,in avocent dsr2030 appliance firmware 03040007 before 03070123 and svip1020 appliance firmware 01060003 before 01070000 there is reflected crosssite scripting xss,"In Avocent DSR2030 Appliance firmware 03.04.00.07 before 03.07.01.23, and SVIP1020 Appliance firmware 01.06.00.03 before 01.07.00.00, there is reflected cross-site scripting (XSS).",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2024-57376,"Buffer Overflow vulnerability in D-Link DSR-150, DSR-150N, DSR-250, DSR-250N, DSR-500N, DSR-1000N from 3.13 to 3.17B901C allows unauthenticated users to execute remote code execution.",DSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer Overflow vulnerability in D-Link DSR-150, DSR-150N, DSR-250, DSR-250N, DSR-500N, DSR-1000N from 3.13 to 3.17B901C allows unauthenticated users to execute remote code execution.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer Overflow vulnerability in D-Link DSR-150, DSR-150N, DSR-250, DSR-250N, DSR-500N, DSR-1000N from 3.13 to 3.17B901C allows unauthenticated users to execute remote code execution.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2025-01-28T22:15:15.990,8.8,HIGH,nvd,buffer overflow vulnerability in dlink dsr150 dsr150n dsr250 dsr250n dsr500n dsr1000n from 313 to 317b901c allows unauthenticated users to execute remote code execution,"Buffer Overflow vulnerability in D-Link DSR-150, DSR-150N, DSR-250, DSR-250N, DSR-500N, DSR-1000N from 3.13 to 3.17B901C allows unauthenticated users to execute remote code execution.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2010-4412,"Multiple cross-site scripting (XSS) vulnerabilities in pfSense 2 beta 4 allow remote attackers to inject arbitrary web script or HTML via (1) the id parameter in an olsrd.xml action to pkg_edit.php, (2) the xml parameter to pkg.php, or the if parameter to (3) status_graph.php or (4) interfaces.php, ",OLSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple cross-site scripting (XSS) vulnerabilities in pfSense 2 beta 4 allow remote attackers to inject arbitrary web script or HTML via (1) the id parameter in an olsrd.xml action to pkg_edit.php, (2) the xml parameter to pkg.php, or the if parameter to (3) status_graph.php or (4) interfaces.php,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple cross-site scripting (XSS) vulnerabilities in pfSense 2 beta 4 allow remote attackers to inject arbitrary web script or HTML via (1) the id parameter in an olsrd.xml action to pkg_edit.php, (2) the xml parameter to pkg.php, or the if parameter to (3) status_graph.php or (4) interfaces.php,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2010-12-07T13:53:30.070,,,nvd,multiple crosssite scripting xss vulnerabilities in pfsense 2 beta 4 allow remote attackers to inject arbitrary web script or html via 1 the id parameter in an olsrdxml action to pkg_editphp 2 the xml parameter to pkgphp or the if parameter to 3 status_graphphp or 4 interfacesphp,"Multiple cross-site scripting (XSS) vulnerabilities in pfSense 2 beta 4 allow remote attackers to inject arbitrary web script or HTML via (1) the id parameter in an olsrd.xml action to pkg_edit.php, (2) the xml parameter to pkg.php, or the if parameter to (3) status_graph.php or (4) interfaces.php, ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2014-8767,"Integer underflow in the olsr_print function in tcpdump 3.9.6 through 4.6.2, when in verbose mode, allows remote attackers to cause a denial of service (crash) via a crafted length value in an OLSR frame.",OLSR,CWE-190,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Integer underflow in the olsr_print function in tcpdump 3.9.6 through 4.6.2, when in verbose mode, allows remote attackers to cause a denial of service (crash) via a crafted length value in an OLSR frame.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Integer underflow in the olsr_print function in tcpdump 3.9.6 through 4.6.2, when in verbose mode, allows remote attackers to cause a denial of service (crash) via a crafted length value in an OLSR frame.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190",2014-11-20T17:50:04.723,,,nvd,integer underflow in the olsr_print function in tcpdump 396 through 462 when in verbose mode allows remote attackers to cause a denial of service crash via a crafted length value in an olsr frame,"Integer underflow in the olsr_print function in tcpdump 3.9.6 through 4.6.2, when in verbose mode, allows remote attackers to cause a denial of service (crash) via a crafted length value in an OLSR frame.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190
CVE-2017-13688,The OLSR parser in tcpdump before 4.9.2 has a buffer over-read in print-olsr.c:olsr_print().,OLSR,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The OLSR parser in tcpdump before 4.9.2 has a buffer over-read in print-olsr.c:olsr_print().  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The OLSR parser in tcpdump before 4.9.2 has a buffer over-read in print-olsr.c:olsr_print().  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2017-09-14T06:29:03.340,,,nvd,the olsr parser in tcpdump before 492 has a buffer overread in printolsrcolsr_print,The OLSR parser in tcpdump before 4.9.2 has a buffer over-read in print-olsr.c:olsr_print().,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2002-1594,"Buffer overflow in (1) grpck and (2) pwck, if installed setuid on a system as recommended in some AIX documentation, may allow local users to gain privileges via a long command line argument.",GRP,CWE-120,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in (1) grpck and (2) pwck, if installed setuid on a system as recommended in some AIX documentation, may allow local users to gain privileges via a long command line argument.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in (1) grpck and (2) pwck, if installed setuid on a system as recommended in some AIX documentation, may allow local users to gain privileges via a long command line argument.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2002-01-02T05:00:00.000,,,nvd,buffer overflow in 1 grpck and 2 pwck if installed setuid on a system as recommended in some aix documentation may allow local users to gain privileges via a long command line argument,"Buffer overflow in (1) grpck and (2) pwck, if installed setuid on a system as recommended in some AIX documentation, may allow local users to gain privileges via a long command line argument.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2004-0572,"Buffer overflow in the Windows Program Group Converter (grpconv.exe) may allow remote attackers to execute arbitrary code via a shell: URL with a long filename and a .grp extension, which is not properly handled when the shell capability launches grpconv.exe.",GRP,CWE-120,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in the Windows Program Group Converter (grpconv.exe) may allow remote attackers to execute arbitrary code via a shell: URL with a long filename and a .grp extension, which is not properly handled when the shell capability launches grpconv.exe.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in the Windows Program Group Converter (grpconv.exe) may allow remote attackers to execute arbitrary code via a shell: URL with a long filename and a .grp extension, which is not properly handled when the shell capability launches grpconv.exe.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2004-11-03T05:00:00.000,,,nvd,buffer overflow in the windows program group converter grpconvexe may allow remote attackers to execute arbitrary code via a shell url with a long filename and a grp extension which is not properly handled when the shell capability launches grpconvexe,"Buffer overflow in the Windows Program Group Converter (grpconv.exe) may allow remote attackers to execute arbitrary code via a shell: URL with a long filename and a .grp extension, which is not properly handled when the shell capability launches grpconv.exe.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2005-2620,"grpWise.exe for Novell GroupWise client 5.5 through 6.5.2 stores the password in plaintext in memory, which allows attackers to obtain the password using a debugger or another mechanism to read process memory.",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  grpWise.exe for Novell GroupWise client 5.5 through 6.5.2 stores the password in plaintext in memory, which allows attackers to obtain the password using a debugger or another mechanism to read process memory.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  grpWise.exe for Novell GroupWise client 5.5 through 6.5.2 stores the password in plaintext in memory, which allows attackers to obtain the password using a debugger or another mechanism to read process memory.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321",2005-08-17T04:00:00.000,,,nvd,grpwiseexe for novell groupwise client 55 through 652 stores the password in plaintext in memory which allows attackers to obtain the password using a debugger or another mechanism to read process memory,"grpWise.exe for Novell GroupWise client 5.5 through 6.5.2 stores the password in plaintext in memory, which allows attackers to obtain the password using a debugger or another mechanism to read process memory.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 321
CVE-2005-4035,"Multiple SQL injection vulnerabilities in Web4Future eCommerce Enterprise Edition 2.1 and earlier allow remote attackers to execute arbitrary SQL commands via the (1) prod, and (2) brid parameters to (a) view.php; the (3) the bid parameter to (b) viewbrands.php; and the (4) grp and (5) cat parameter",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple SQL injection vulnerabilities in Web4Future eCommerce Enterprise Edition 2.1 and earlier allow remote attackers to execute arbitrary SQL commands via the (1) prod, and (2) brid parameters to (a) view.php; the (3) the bid parameter to (b) viewbrands.php; and the (4) grp and (5) cat parameter  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple SQL injection vulnerabilities in Web4Future eCommerce Enterprise Edition 2.1 and earlier allow remote attackers to execute arbitrary SQL commands via the (1) prod, and (2) brid parameters to (a) view.php; the (3) the bid parameter to (b) viewbrands.php; and the (4) grp and (5) cat parameter  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89",2005-12-06T11:03:00.000,,,nvd,multiple sql injection vulnerabilities in web4future ecommerce enterprise edition 21 and earlier allow remote attackers to execute arbitrary sql commands via the 1 prod and 2 brid parameters to a viewphp the 3 the bid parameter to b viewbrandsphp and the 4 grp and 5 cat parameter,"Multiple SQL injection vulnerabilities in Web4Future eCommerce Enterprise Edition 2.1 and earlier allow remote attackers to execute arbitrary SQL commands via the (1) prod, and (2) brid parameters to (a) view.php; the (3) the bid parameter to (b) viewbrands.php; and the (4) grp and (5) cat parameter",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89
CVE-2006-3346,SQL injection vulnerability in tree.php in MyNewsGroups 0.6 allows remote attackers to execute arbitrary SQL commands via the grp_id parameter.,GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: SQL injection vulnerability allows execution of arbitrary SQL commands. Vendor: MyNewsGroups Cause: The 'grp_id' parameter in tree.php is not properly sanitized before being used in SQL queries. Impact: Remote attackers can execute arbitrary SQL commands, potentially leading to data manipulation, unauthorized access, and data disclosure.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SQL injection vulnerability in tree.php in MyNewsGroups 0.6 allows remote attackers to execute arbitrary SQL commands via the grp_id parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: SQL injection vulnerability allows execution of arbitrary SQL commands. Vendor: MyNewsGroups Cause: The 'grp_id' parameter in tree.php is not properly sanitized before being used in SQL queries. Impact: Remote attackers can execute arbitrary SQL commands, potentially leading to data manipulation, unauthorized access, and data disclosure.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SQL injection vulnerability in tree.php in MyNewsGroups 0.6 allows remote attackers to execute arbitrary SQL commands via the grp_id parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: SQL injection vulnerability allows execution of arbitrary SQL commands. Vendor: MyNewsGroups Cause: The 'grp_id' parameter in tree.php is not properly sanitized before being used in SQL queries. Impact: Remote attackers can execute arbitrary SQL commands, potentially leading to data manipulation, unauthorized access, and data disclosure.",2006-07-03T19:05:00.000,,,nvd,sql injection vulnerability in treephp in mynewsgroups 06 allows remote attackers to execute arbitrary sql commands via the grp_id parameter,SQL injection vulnerability in tree.php in MyNewsGroups 0.6 allows remote attackers to execute arbitrary SQL commands via the grp_id parameter.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: SQL injection vulnerability allows execution of arbitrary SQL commands. Vendor: MyNewsGroups Cause: The 'grp_id' parameter in tree.php is not properly sanitized before being used in SQL queries. Impact: Remote attackers can execute arbitrary SQL commands, potentially leading to data manipulation, unauthorized access, and data disclosure."
CVE-2009-1732,Cross-site scripting (XSS) vulnerability in admin/usermanager in IPplan 4.91a allows remote attackers to inject arbitrary web script or HTML via the grp parameter.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site scripting (XSS) vulnerability in admin/usermanager in IPplan 4.91a allows remote attackers to inject arbitrary web script or HTML via the grp parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site scripting (XSS) vulnerability in admin/usermanager in IPplan 4.91a allows remote attackers to inject arbitrary web script or HTML via the grp parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2009-05-20T19:30:00.187,,,nvd,crosssite scripting xss vulnerability in adminusermanager in ipplan 491a allows remote attackers to inject arbitrary web script or html via the grp parameter,Cross-site scripting (XSS) vulnerability in admin/usermanager in IPplan 4.91a allows remote attackers to inject arbitrary web script or HTML via the grp parameter.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2009-4155,"Multiple SQL injection vulnerabilities in Eshopbuilde CMS allow remote attackers to execute arbitrary SQL commands via the sitebid parameter to (1) home-f.asp and (2) opinions-f.asp; (3) sitebid, (4) id, (5) secText, (6) client-ip, and (7) G_id parameters to more-f.asp; (8) sitebid, (9) id, (10) ma_",GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: The vulnerability allows an attacker to execute arbitrary SQL commands by injecting malicious input into various parameters, leading to unauthorized access and potential data manipulation. Vendor: Eshopbuilde CMS Cause: Insufficient input validation and sanitization of user-supplied input in multiple parameters (sitebid, id, secText, client-ip, G_id, ma_) in the vulnerable files (home-f.asp, opinions-f.asp, and more-f.asp) allows attackers to manipulate the SQL queries. Impact: Successful exploitation could lead to unauthorized access to the database, data manipulation, data leakage, and potential complete compromise of the affected system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple SQL injection vulnerabilities in Eshopbuilde CMS allow remote attackers to execute arbitrary SQL commands via the sitebid parameter to (1) home-f.asp and (2) opinions-f.asp; (3) sitebid, (4) id, (5) secText, (6) client-ip, and (7) G_id parameters to more-f.asp; (8) sitebid, (9) id, (10) ma_  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: The vulnerability allows an attacker to execute arbitrary SQL commands by injecting malicious input into various parameters, leading to unauthorized access and potential data manipulation. Vendor: Eshopbuilde CMS Cause: Insufficient input validation and sanitization of user-supplied input in multiple parameters (sitebid, id, secText, client-ip, G_id, ma_) in the vulnerable files (home-f.asp, opinions-f.asp, and more-f.asp) allows attackers to manipulate the SQL queries. Impact: Successful exploitation could lead to unauthorized access to the database, data manipulation, data leakage, and potential complete compromise of the affected system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple SQL injection vulnerabilities in Eshopbuilde CMS allow remote attackers to execute arbitrary SQL commands via the sitebid parameter to (1) home-f.asp and (2) opinions-f.asp; (3) sitebid, (4) id, (5) secText, (6) client-ip, and (7) G_id parameters to more-f.asp; (8) sitebid, (9) id, (10) ma_  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: The vulnerability allows an attacker to execute arbitrary SQL commands by injecting malicious input into various parameters, leading to unauthorized access and potential data manipulation. Vendor: Eshopbuilde CMS Cause: Insufficient input validation and sanitization of user-supplied input in multiple parameters (sitebid, id, secText, client-ip, G_id, ma_) in the vulnerable files (home-f.asp, opinions-f.asp, and more-f.asp) allows attackers to manipulate the SQL queries. Impact: Successful exploitation could lead to unauthorized access to the database, data manipulation, data leakage, and potential complete compromise of the affected system.",2009-12-02T17:30:00.377,,,nvd,multiple sql injection vulnerabilities in eshopbuilde cms allow remote attackers to execute arbitrary sql commands via the sitebid parameter to 1 homefasp and 2 opinionsfasp 3 sitebid 4 id 5 sectext 6 clientip and 7 g_id parameters to morefasp 8 sitebid 9 id 10 ma_,"Multiple SQL injection vulnerabilities in Eshopbuilde CMS allow remote attackers to execute arbitrary SQL commands via the sitebid parameter to (1) home-f.asp and (2) opinions-f.asp; (3) sitebid, (4) id, (5) secText, (6) client-ip, and (7) G_id parameters to more-f.asp; (8) sitebid, (9) id, (10) ma_","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: The vulnerability allows an attacker to execute arbitrary SQL commands by injecting malicious input into various parameters, leading to unauthorized access and potential data manipulation. Vendor: Eshopbuilde CMS Cause: Insufficient input validation and sanitization of user-supplied input in multiple parameters (sitebid, id, secText, client-ip, G_id, ma_) in the vulnerable files (home-f.asp, opinions-f.asp, and more-f.asp) allows attackers to manipulate the SQL queries. Impact: Successful exploitation could lead to unauthorized access to the database, data manipulation, data leakage, and potential complete compromise of the affected system."
CVE-2010-0456,SQL injection vulnerability in the indianpulse Game Server (com_gameserver) component 1.2 for Joomla! allows remote attackers to execute arbitrary SQL commands via the grp parameter in a gameserver action to index.php.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SQL injection vulnerability in the indianpulse Game Server (com_gameserver) component 1.2 for Joomla! allows remote attackers to execute arbitrary SQL commands via the grp parameter in a gameserver action to index.php.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SQL injection vulnerability in the indianpulse Game Server (com_gameserver) component 1.2 for Joomla! allows remote attackers to execute arbitrary SQL commands via the grp parameter in a gameserver action to index.php.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89",2010-01-28T20:30:01.650,,,nvd,sql injection vulnerability in the indianpulse game server com_gameserver component 12 for joomla allows remote attackers to execute arbitrary sql commands via the grp parameter in a gameserver action to indexphp,SQL injection vulnerability in the indianpulse Game Server (com_gameserver) component 1.2 for Joomla! allows remote attackers to execute arbitrary SQL commands via the grp parameter in a gameserver action to index.php.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89
CVE-2010-4989,SQL injection vulnerability in main.asp in Ziggurat Farsi CMS allows remote attackers to execute arbitrary SQL commands via the grp parameter.,GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: SQL injection vulnerability that allows arbitrary SQL commands to be executed. Vendor: Ziggurat Cause: Failure to properly sanitize user input in the grp parameter in main.asp Impact: Remote attackers can execute arbitrary SQL commands, potentially leading to data theft, unauthorized access, and system compromise","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SQL injection vulnerability in main.asp in Ziggurat Farsi CMS allows remote attackers to execute arbitrary SQL commands via the grp parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: SQL injection vulnerability that allows arbitrary SQL commands to be executed. Vendor: Ziggurat Cause: Failure to properly sanitize user input in the grp parameter in main.asp Impact: Remote attackers can execute arbitrary SQL commands, potentially leading to data theft, unauthorized access, and system compromise","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SQL injection vulnerability in main.asp in Ziggurat Farsi CMS allows remote attackers to execute arbitrary SQL commands via the grp parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: SQL injection vulnerability that allows arbitrary SQL commands to be executed. Vendor: Ziggurat Cause: Failure to properly sanitize user input in the grp parameter in main.asp Impact: Remote attackers can execute arbitrary SQL commands, potentially leading to data theft, unauthorized access, and system compromise",2011-11-01T22:55:05.290,,,nvd,sql injection vulnerability in mainasp in ziggurat farsi cms allows remote attackers to execute arbitrary sql commands via the grp parameter,SQL injection vulnerability in main.asp in Ziggurat Farsi CMS allows remote attackers to execute arbitrary SQL commands via the grp parameter.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89 Explanation: SQL injection vulnerability that allows arbitrary SQL commands to be executed. Vendor: Ziggurat Cause: Failure to properly sanitize user input in the grp parameter in main.asp Impact: Remote attackers can execute arbitrary SQL commands, potentially leading to data theft, unauthorized access, and system compromise"
CVE-2017-6599,"A vulnerability in Google-defined remote procedure call (gRPC) handling in Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause the Event Management Service daemon (emsd) to crash due to a system memory leak, resulting in a denial of service (DoS) condition. This vulnerabil",GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability is caused by improper handling of gRPC calls in Cisco IOS XR, leading to a memory leak in the Event Management Service daemon (emsd), resulting in a denial of service condition. Vendor: Cisco Cause: Improper handling of gRPC calls in Cisco IOS XR Impact: Denial of Service","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in Google-defined remote procedure call (gRPC) handling in Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause the Event Management Service daemon (emsd) to crash due to a system memory leak, resulting in a denial of service (DoS) condition. This vulnerabil  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability is caused by improper handling of gRPC calls in Cisco IOS XR, leading to a memory leak in the Event Management Service daemon (emsd), resulting in a denial of service condition. Vendor: Cisco Cause: Improper handling of gRPC calls in Cisco IOS XR Impact: Denial of Service","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in Google-defined remote procedure call (gRPC) handling in Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause the Event Management Service daemon (emsd) to crash due to a system memory leak, resulting in a denial of service (DoS) condition. This vulnerabil  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability is caused by improper handling of gRPC calls in Cisco IOS XR, leading to a memory leak in the Event Management Service daemon (emsd), resulting in a denial of service condition. Vendor: Cisco Cause: Improper handling of gRPC calls in Cisco IOS XR Impact: Denial of Service",2017-04-07T17:59:00.607,,,nvd,a vulnerability in googledefined remote procedure call grpc handling in cisco ios xr software could allow an unauthenticated remote attacker to cause the event management service daemon emsd to crash due to a system memory leak resulting in a denial of service dos condition this vulnerabil,"A vulnerability in Google-defined remote procedure call (gRPC) handling in Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause the Event Management Service daemon (emsd) to crash due to a system memory leak, resulting in a denial of service (DoS) condition. This vulnerabil","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability is caused by improper handling of gRPC calls in Cisco IOS XR, leading to a memory leak in the Event Management Service daemon (emsd), resulting in a denial of service condition. Vendor: Cisco Cause: Improper handling of gRPC calls in Cisco IOS XR Impact: Denial of Service"
CVE-2017-7860,Google gRPC before 2017-02-22 has an out-of-bounds write caused by a heap-based buffer overflow related to the parse_unix function in core/ext/client_channel/parse_address.c.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google gRPC before 2017-02-22 has an out-of-bounds write caused by a heap-based buffer overflow related to the parse_unix function in core/ext/client_channel/parse_address.c.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google gRPC before 2017-02-22 has an out-of-bounds write caused by a heap-based buffer overflow related to the parse_unix function in core/ext/client_channel/parse_address.c.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122",2017-04-14T04:59:00.383,,,nvd,google grpc before 20170222 has an outofbounds write caused by a heapbased buffer overflow related to the parse_unix function in coreextclient_channelparse_addressc,Google gRPC before 2017-02-22 has an out-of-bounds write caused by a heap-based buffer overflow related to the parse_unix function in core/ext/client_channel/parse_address.c.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122
CVE-2017-7861,Google gRPC before 2017-02-22 has an out-of-bounds write related to the gpr_free function in core/lib/support/alloc.c.,GRP,CWE-122,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: CWE-122 is a type of CWE that refers to heap-based buffer overflow. This vulnerability occurs when a program writes more data to a buffer in the heap than it can hold, potentially overwriting adjacent memory and leading to arbitrary code execution or other security issues. Vendor: Google Cause: The vulnerability is due to an out-of-bounds write in the gpr_free function in the core/lib/support/alloc.c file of Google's gRPC library. Impact: An attacker could potentially exploit this vulnerability to execute arbitrary code or cause a denial of service.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google gRPC before 2017-02-22 has an out-of-bounds write related to the gpr_free function in core/lib/support/alloc.c.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: CWE-122 is a type of CWE that refers to heap-based buffer overflow. This vulnerability occurs when a program writes more data to a buffer in the heap than it can hold, potentially overwriting adjacent memory and leading to arbitrary code execution or other security issues. Vendor: Google Cause: The vulnerability is due to an out-of-bounds write in the gpr_free function in the core/lib/support/alloc.c file of Google's gRPC library. Impact: An attacker could potentially exploit this vulnerability to execute arbitrary code or cause a denial of service.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google gRPC before 2017-02-22 has an out-of-bounds write related to the gpr_free function in core/lib/support/alloc.c.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: CWE-122 is a type of CWE that refers to heap-based buffer overflow. This vulnerability occurs when a program writes more data to a buffer in the heap than it can hold, potentially overwriting adjacent memory and leading to arbitrary code execution or other security issues. Vendor: Google Cause: The vulnerability is due to an out-of-bounds write in the gpr_free function in the core/lib/support/alloc.c file of Google's gRPC library. Impact: An attacker could potentially exploit this vulnerability to execute arbitrary code or cause a denial of service.",2017-04-14T04:59:00.417,,,nvd,google grpc before 20170222 has an outofbounds write related to the gpr_free function in corelibsupportallocc,Google gRPC before 2017-02-22 has an out-of-bounds write related to the gpr_free function in core/lib/support/alloc.c.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: CWE-122 is a type of CWE that refers to heap-based buffer overflow. This vulnerability occurs when a program writes more data to a buffer in the heap than it can hold, potentially overwriting adjacent memory and leading to arbitrary code execution or other security issues. Vendor: Google Cause: The vulnerability is due to an out-of-bounds write in the gpr_free function in the core/lib/support/alloc.c file of Google's gRPC library. Impact: An attacker could potentially exploit this vulnerability to execute arbitrary code or cause a denial of service."
CVE-2017-8359,Google gRPC before 2017-03-29 has an out-of-bounds write caused by a heap-based use-after-free related to the grpc_call_destroy function in core/lib/surface/call.c.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google gRPC before 2017-03-29 has an out-of-bounds write caused by a heap-based use-after-free related to the grpc_call_destroy function in core/lib/surface/call.c.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google gRPC before 2017-03-29 has an out-of-bounds write caused by a heap-based use-after-free related to the grpc_call_destroy function in core/lib/surface/call.c.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122",2017-04-30T17:59:00.997,,,nvd,google grpc before 20170329 has an outofbounds write caused by a heapbased useafterfree related to the grpc_call_destroy function in corelibsurfacecallc,Google gRPC before 2017-03-29 has an out-of-bounds write caused by a heap-based use-after-free related to the grpc_call_destroy function in core/lib/surface/call.c.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122
CVE-2017-3876,"A vulnerability in the Event Management Service daemon (emsd) of Cisco IOS XR routers could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on the affected device. The vulnerability is due to improper handling of gRPC requests. An attacker could exploit this vu",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in the Event Management Service daemon (emsd) of Cisco IOS XR routers could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on the affected device. The vulnerability is due to improper handling of gRPC requests. An attacker could exploit this vu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in the Event Management Service daemon (emsd) of Cisco IOS XR routers could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on the affected device. The vulnerability is due to improper handling of gRPC requests. An attacker could exploit this vu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2017-05-16T17:29:00.247,,,nvd,a vulnerability in the event management service daemon emsd of cisco ios xr routers could allow an unauthenticated remote attacker to cause a denial of service dos condition on the affected device the vulnerability is due to improper handling of grpc requests an attacker could exploit this vu,"A vulnerability in the Event Management Service daemon (emsd) of Cisco IOS XR routers could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on the affected device. The vulnerability is due to improper handling of gRPC requests. An attacker could exploit this vu",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2017-9431,Google gRPC before 2017-04-05 has an out-of-bounds write caused by a heap-based buffer overflow related to core/lib/iomgr/error.c.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 787,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google gRPC before 2017-04-05 has an out-of-bounds write caused by a heap-based buffer overflow related to core/lib/iomgr/error.c.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 787","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google gRPC before 2017-04-05 has an out-of-bounds write caused by a heap-based buffer overflow related to core/lib/iomgr/error.c.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 787",2017-06-05T03:29:00.197,,,nvd,google grpc before 20170405 has an outofbounds write caused by a heapbased buffer overflow related to corelibiomgrerrorc,Google gRPC before 2017-04-05 has an out-of-bounds write caused by a heap-based buffer overflow related to core/lib/iomgr/error.c.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 787
CVE-2017-12270,"A vulnerability in the gRPC code of Cisco IOS XR Software for Cisco Network Convergence System (NCS) 5500 Series Routers could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition when the emsd service stops. The vulnerability is due to the software's inability to p",GRP,CWE-400,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in the gRPC code of Cisco IOS XR Software for Cisco Network Convergence System (NCS) 5500 Series Routers could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition when the emsd service stops. The vulnerability is due to the software's inability to p  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in the gRPC code of Cisco IOS XR Software for Cisco Network Convergence System (NCS) 5500 Series Routers could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition when the emsd service stops. The vulnerability is due to the software's inability to p  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400",2017-10-05T07:29:00.777,,,nvd,a vulnerability in the grpc code of cisco ios xr software for cisco network convergence system ncs 5500 series routers could allow an unauthenticated remote attacker to cause a denial of service dos condition when the emsd service stops the vulnerability is due to the softwares inability to p,"A vulnerability in the gRPC code of Cisco IOS XR Software for Cisco Network Convergence System (NCS) 5500 Series Routers could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition when the emsd service stops. The vulnerability is due to the software's inability to p",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400
CVE-2018-16886,"etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remo",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287",2019-01-14T19:29:00.243,8.1,HIGH,nvd,etcd versions 32x before 3226 and 33x before 3311 are vulnerable to an improper authentication issue when rolebased access control rbac is used and clientcertauth is enabled if an etcd client server tls certificate contains a common name cn which matches a valid rbac username a remo,"etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remo",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287
CVE-2019-0034,Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a vulnerability. Notes: Google gRPC credentials were found which existed for specific internal product testing purposes which are not used as part of produ,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 0,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a vulnerability. Notes: Google gRPC credentials were found which existed for specific internal product testing purposes which are not used as part of produ  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 0","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a vulnerability. Notes: Google gRPC credentials were found which existed for specific internal product testing purposes which are not used as part of produ  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 0",2019-04-10T20:29:00.630,,,nvd,rejected reason do not use this candidate number reason this candidate was withdrawn by its cna further investigation showed that it was not a vulnerability notes google grpc credentials were found which existed for specific internal product testing purposes which are not used as part of produ,Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a vulnerability. Notes: Google gRPC credentials were found which existed for specific internal product testing purposes which are not used as part of produ,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 0
CVE-2019-1711,"A vulnerability in the Event Management Service daemon (emsd) of Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. The vulnerability is due to improper handling of gRPC requests. An attacker could exploit this vu",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in the Event Management Service daemon (emsd) of Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. The vulnerability is due to improper handling of gRPC requests. An attacker could exploit this vu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in the Event Management Service daemon (emsd) of Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. The vulnerability is due to improper handling of gRPC requests. An attacker could exploit this vu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2019-04-17T22:29:00.437,,,nvd,a vulnerability in the event management service daemon emsd of cisco ios xr software could allow an unauthenticated remote attacker to cause a denial of service dos condition on an affected device the vulnerability is due to improper handling of grpc requests an attacker could exploit this vu,"A vulnerability in the Event Management Service daemon (emsd) of Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. The vulnerability is due to improper handling of gRPC requests. An attacker could exploit this vu",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2020-7768,The package grpc before 1.24.4; the package @grpc/grpc-js before 1.1.8 are vulnerable to Prototype Pollution via loadPackageDefinition.,GRP,CWE-471,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-471 Explanation: Prototype Pollution in gRPC via loadPackageDefinition function allows an attacker to execute arbitrary code by modifying the prototype of a JavaScript object. Vendor: Google Cause: The vulnerability is due to improper validation of user-supplied data in the loadPackageDefinition function in gRPC and @grpc/grpc-js. Impact: Successful exploitation could allow an attacker to execute arbitrary code, modify the behavior of the application, and potentially compromise the entire system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The package grpc before 1.24.4; the package @grpc/grpc-js before 1.1.8 are vulnerable to Prototype Pollution via loadPackageDefinition.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-471 Explanation: Prototype Pollution in gRPC via loadPackageDefinition function allows an attacker to execute arbitrary code by modifying the prototype of a JavaScript object. Vendor: Google Cause: The vulnerability is due to improper validation of user-supplied data in the loadPackageDefinition function in gRPC and @grpc/grpc-js. Impact: Successful exploitation could allow an attacker to execute arbitrary code, modify the behavior of the application, and potentially compromise the entire system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The package grpc before 1.24.4; the package @grpc/grpc-js before 1.1.8 are vulnerable to Prototype Pollution via loadPackageDefinition.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-471 Explanation: Prototype Pollution in gRPC via loadPackageDefinition function allows an attacker to execute arbitrary code by modifying the prototype of a JavaScript object. Vendor: Google Cause: The vulnerability is due to improper validation of user-supplied data in the loadPackageDefinition function in gRPC and @grpc/grpc-js. Impact: Successful exploitation could allow an attacker to execute arbitrary code, modify the behavior of the application, and potentially compromise the entire system.",2020-11-11T11:15:10.930,7.5,HIGH,nvd,the package grpc before 1244 the package grpcgrpcjs before 118 are vulnerable to prototype pollution via loadpackagedefinition,The package grpc before 1.24.4; the package @grpc/grpc-js before 1.1.8 are vulnerable to Prototype Pollution via loadPackageDefinition.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-471 Explanation: Prototype Pollution in gRPC via loadPackageDefinition function allows an attacker to execute arbitrary code by modifying the prototype of a JavaScript object. Vendor: Google Cause: The vulnerability is due to improper validation of user-supplied data in the loadPackageDefinition function in gRPC and @grpc/grpc-js. Impact: Successful exploitation could allow an attacker to execute arbitrary code, modify the behavior of the application, and potentially compromise the entire system."
CVE-2020-25217,Grandstream GRP261x VoIP phone running firmware version 1.0.3.6 (Base) allows Command Injection as root in its administrative web interface.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Grandstream GRP261x VoIP phone running firmware version 1.0.3.6 (Base) allows Command Injection as root in its administrative web interface.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Grandstream GRP261x VoIP phone running firmware version 1.0.3.6 (Base) allows Command Injection as root in its administrative web interface.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78",2021-03-29T17:15:14.927,7.2,HIGH,nvd,grandstream grp261x voip phone running firmware version 1036 base allows command injection as root in its administrative web interface,Grandstream GRP261x VoIP phone running firmware version 1.0.3.6 (Base) allows Command Injection as root in its administrative web interface.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78
CVE-2020-25218,Grandstream GRP261x VoIP phone running firmware version 1.0.3.6 (Base) allow Authentication Bypass in its administrative web interface.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Grandstream GRP261x VoIP phone running firmware version 1.0.3.6 (Base) allow Authentication Bypass in its administrative web interface.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Grandstream GRP261x VoIP phone running firmware version 1.0.3.6 (Base) allow Authentication Bypass in its administrative web interface.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287",2021-03-29T17:15:14.990,9.8,CRITICAL,nvd,grandstream grp261x voip phone running firmware version 1036 base allow authentication bypass in its administrative web interface,Grandstream GRP261x VoIP phone running firmware version 1.0.3.6 (Base) allow Authentication Bypass in its administrative web interface.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287
CVE-2021-28682,An issue was discovered in Envoy through 1.71.1. There is a remotely exploitable integer overflow in which a very large grpc-timeout value leads to unexpected timeout calculations.,GRP,CWE-190,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190 Explanation: CWE-190 is a type of CWE that represents integer overflow or wraparound vulnerabilities, where an integer is manipulated to exceed its bounds, leading to unexpected behavior or crashes. Vendor: Envoy Cause: A very large grpc-timeout value was used, which led to unexpected timeout calculations due to an integer overflow in Envoy. Impact: This vulnerability could potentially allow remote attackers to exploit the integer overflow and gain unauthorized access or perform unauthorized actions on the system running Envoy.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in Envoy through 1.71.1. There is a remotely exploitable integer overflow in which a very large grpc-timeout value leads to unexpected timeout calculations.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190 Explanation: CWE-190 is a type of CWE that represents integer overflow or wraparound vulnerabilities, where an integer is manipulated to exceed its bounds, leading to unexpected behavior or crashes. Vendor: Envoy Cause: A very large grpc-timeout value was used, which led to unexpected timeout calculations due to an integer overflow in Envoy. Impact: This vulnerability could potentially allow remote attackers to exploit the integer overflow and gain unauthorized access or perform unauthorized actions on the system running Envoy.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in Envoy through 1.71.1. There is a remotely exploitable integer overflow in which a very large grpc-timeout value leads to unexpected timeout calculations.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190 Explanation: CWE-190 is a type of CWE that represents integer overflow or wraparound vulnerabilities, where an integer is manipulated to exceed its bounds, leading to unexpected behavior or crashes. Vendor: Envoy Cause: A very large grpc-timeout value was used, which led to unexpected timeout calculations due to an integer overflow in Envoy. Impact: This vulnerability could potentially allow remote attackers to exploit the integer overflow and gain unauthorized access or perform unauthorized actions on the system running Envoy.",2021-05-20T17:15:07.680,7.5,HIGH,nvd,an issue was discovered in envoy through 1711 there is a remotely exploitable integer overflow in which a very large grpctimeout value leads to unexpected timeout calculations,An issue was discovered in Envoy through 1.71.1. There is a remotely exploitable integer overflow in which a very large grpc-timeout value leads to unexpected timeout calculations.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190 Explanation: CWE-190 is a type of CWE that represents integer overflow or wraparound vulnerabilities, where an integer is manipulated to exceed its bounds, leading to unexpected behavior or crashes. Vendor: Envoy Cause: A very large grpc-timeout value was used, which led to unexpected timeout calculations due to an integer overflow in Envoy. Impact: This vulnerability could potentially allow remote attackers to exploit the integer overflow and gain unauthorized access or perform unauthorized actions on the system running Envoy."
CVE-2021-36153,Mismanaged state in GRPCWebToHTTP2ServerCodec.swift in gRPC Swift 1.1.0 and 1.1.1 allows remote attackers to deny service by sending malformed requests.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mismanaged state in GRPCWebToHTTP2ServerCodec.swift in gRPC Swift 1.1.0 and 1.1.1 allows remote attackers to deny service by sending malformed requests.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mismanaged state in GRPCWebToHTTP2ServerCodec.swift in gRPC Swift 1.1.0 and 1.1.1 allows remote attackers to deny service by sending malformed requests.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2021-07-09T12:15:08.063,7.5,HIGH,nvd,mismanaged state in grpcwebtohttp2servercodecswift in grpc swift 110 and 111 allows remote attackers to deny service by sending malformed requests,Mismanaged state in GRPCWebToHTTP2ServerCodec.swift in gRPC Swift 1.1.0 and 1.1.1 allows remote attackers to deny service by sending malformed requests.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2021-36154,"HTTP2ToRawGRPCServerCodec in gRPC Swift 1.1.1 and earlier allows remote attackers to deny service via the delivery of many small messages within a single HTTP/2 frame, leading to Uncontrolled Recursion and stack consumption.",GRP,CWE-400,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HTTP2ToRawGRPCServerCodec in gRPC Swift 1.1.1 and earlier allows remote attackers to deny service via the delivery of many small messages within a single HTTP/2 frame, leading to Uncontrolled Recursion and stack consumption.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HTTP2ToRawGRPCServerCodec in gRPC Swift 1.1.1 and earlier allows remote attackers to deny service via the delivery of many small messages within a single HTTP/2 frame, leading to Uncontrolled Recursion and stack consumption.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400",2021-07-09T12:15:08.097,7.5,HIGH,nvd,http2torawgrpcservercodec in grpc swift 111 and earlier allows remote attackers to deny service via the delivery of many small messages within a single http2 frame leading to uncontrolled recursion and stack consumption,"HTTP2ToRawGRPCServerCodec in gRPC Swift 1.1.1 and earlier allows remote attackers to deny service via the delivery of many small messages within a single HTTP/2 frame, leading to Uncontrolled Recursion and stack consumption.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400
CVE-2021-36155,"LengthPrefixedMessageReader in gRPC Swift 1.1.0 and earlier allocates buffers of arbitrary length, which allows remote attackers to cause uncontrolled resource consumption and deny service.",GRP,CWE-400,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  LengthPrefixedMessageReader in gRPC Swift 1.1.0 and earlier allocates buffers of arbitrary length, which allows remote attackers to cause uncontrolled resource consumption and deny service.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  LengthPrefixedMessageReader in gRPC Swift 1.1.0 and earlier allocates buffers of arbitrary length, which allows remote attackers to cause uncontrolled resource consumption and deny service.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400",2021-07-09T12:15:08.127,7.5,HIGH,nvd,lengthprefixedmessagereader in grpc swift 110 and earlier allocates buffers of arbitrary length which allows remote attackers to cause uncontrolled resource consumption and deny service,"LengthPrefixedMessageReader in gRPC Swift 1.1.0 and earlier allocates buffers of arbitrary length, which allows remote attackers to cause uncontrolled resource consumption and deny service.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400
CVE-2021-32781,Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions after Envoy sends a locally generated response it must stop further processing of request or response data. However when local response is generated due the internal,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions after Envoy sends a locally generated response it must stop further processing of request or response data. However when local response is generated due the internal  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions after Envoy sends a locally generated response it must stop further processing of request or response data. However when local response is generated due the internal  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2021-08-24T21:15:10.157,8.6,HIGH,nvd,envoy is an open source l7 proxy and communication bus designed for large modern service oriented architectures in affected versions after envoy sends a locally generated response it must stop further processing of request or response data however when local response is generated due the internal,Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions after Envoy sends a locally generated response it must stop further processing of request or response data. However when local response is generated due the internal,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2021-41130,"Extensible Service Proxy, a.k.a. ESP is a proxy which enables API management capabilities for JSON/REST or gRPC API services. ESPv1 can be configured to authenticate a JWT token. Its verified JWT claim is passed to the application by HTTP header ""X-Endpoint-API-UserInfo"", the application can use it ",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Extensible Service Proxy, a.k.a. ESP is a proxy which enables API management capabilities for JSON/REST or gRPC API services. ESPv1 can be configured to authenticate a JWT token. Its verified JWT claim is passed to the application by HTTP header ""X-Endpoint-API-UserInfo"", the application can use it  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Extensible Service Proxy, a.k.a. ESP is a proxy which enables API management capabilities for JSON/REST or gRPC API services. ESPv1 can be configured to authenticate a JWT token. Its verified JWT claim is passed to the application by HTTP header ""X-Endpoint-API-UserInfo"", the application can use it  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862",2021-10-07T19:15:08.843,6.4,MEDIUM,nvd,extensible service proxy aka esp is a proxy which enables api management capabilities for jsonrest or grpc api services espv1 can be configured to authenticate a jwt token its verified jwt claim is passed to the application by http header xendpointapiuserinfo the application can use it,"Extensible Service Proxy, a.k.a. ESP is a proxy which enables API management capabilities for JSON/REST or gRPC API services. ESPv1 can be configured to authenticate a JWT token. Its verified JWT claim is passed to the application by HTTP header ""X-Endpoint-API-UserInfo"", the application can use it ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862
CVE-2021-31350,"An Improper Privilege Management vulnerability in the gRPC framework, used by the Juniper Extension Toolkit (JET) API on Juniper Networks Junos OS and Junos OS Evolved, allows a network-based, low-privileged authenticated attacker to perform operations as root, leading to complete compromise of the ",GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269 Explanation: The vulnerability allows an authenticated, low-privileged attacker to perform operations as root due to improper privilege management in the gRPC framework used by the Juniper Extension Toolkit (JET) API. Vendor: Juniper Networks Cause: Improper privilege management in the gRPC framework used by the Juniper Extension Toolkit (JET) API. Impact: Complete compromise of the affected system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An Improper Privilege Management vulnerability in the gRPC framework, used by the Juniper Extension Toolkit (JET) API on Juniper Networks Junos OS and Junos OS Evolved, allows a network-based, low-privileged authenticated attacker to perform operations as root, leading to complete compromise of the  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269 Explanation: The vulnerability allows an authenticated, low-privileged attacker to perform operations as root due to improper privilege management in the gRPC framework used by the Juniper Extension Toolkit (JET) API. Vendor: Juniper Networks Cause: Improper privilege management in the gRPC framework used by the Juniper Extension Toolkit (JET) API. Impact: Complete compromise of the affected system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An Improper Privilege Management vulnerability in the gRPC framework, used by the Juniper Extension Toolkit (JET) API on Juniper Networks Junos OS and Junos OS Evolved, allows a network-based, low-privileged authenticated attacker to perform operations as root, leading to complete compromise of the  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269 Explanation: The vulnerability allows an authenticated, low-privileged attacker to perform operations as root due to improper privilege management in the gRPC framework used by the Juniper Extension Toolkit (JET) API. Vendor: Juniper Networks Cause: Improper privilege management in the gRPC framework used by the Juniper Extension Toolkit (JET) API. Impact: Complete compromise of the affected system.",2021-10-19T19:15:08.537,7.5,HIGH,nvd,an improper privilege management vulnerability in the grpc framework used by the juniper extension toolkit jet api on juniper networks junos os and junos os evolved allows a networkbased lowprivileged authenticated attacker to perform operations as root leading to complete compromise of the,"An Improper Privilege Management vulnerability in the gRPC framework, used by the Juniper Extension Toolkit (JET) API on Juniper Networks Junos OS and Junos OS Evolved, allows a network-based, low-privileged authenticated attacker to perform operations as root, leading to complete compromise of the ","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269 Explanation: The vulnerability allows an authenticated, low-privileged attacker to perform operations as root due to improper privilege management in the gRPC framework used by the Juniper Extension Toolkit (JET) API. Vendor: Juniper Networks Cause: Improper privilege management in the gRPC framework used by the Juniper Extension Toolkit (JET) API. Impact: Complete compromise of the affected system."
CVE-2021-22810,A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC pointing to a delete policy file. Affected Products: 1,GRP,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC pointing to a delete policy file. Affected Products: 1  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC pointing to a delete policy file. Affected Products: 1  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2022-01-28T20:15:09.997,6.1,MEDIUM,nvd,a cwe79 improper neutralization of input during web page generation crosssite scripting vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious url specifically crafted for the nmc pointing to a delete policy file affected products 1,A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC pointing to a delete policy file. Affected Products: 1,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2021-22811,A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause script execution when the request of a privileged account accessing the vulnerable web page is intercepted. Affected Products: 1-Phase Uninterruptible Power Supply (UP,GRP,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause script execution when the request of a privileged account accessing the vulnerable web page is intercepted. Affected Products: 1-Phase Uninterruptible Power Supply (UP  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause script execution when the request of a privileged account accessing the vulnerable web page is intercepted. Affected Products: 1-Phase Uninterruptible Power Supply (UP  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2022-01-28T20:15:10.047,6.1,MEDIUM,nvd,a cwe79 improper neutralization of input during web page generation crosssite scripting vulnerability exists that could cause script execution when the request of a privileged account accessing the vulnerable web page is intercepted affected products 1phase uninterruptible power supply up,A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause script execution when the request of a privileged account accessing the vulnerable web page is intercepted. Affected Products: 1-Phase Uninterruptible Power Supply (UP,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2021-22812,A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC. Affected Products: 1-Phase Uninterruptible Power Supp,GRP,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC. Affected Products: 1-Phase Uninterruptible Power Supp  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC. Affected Products: 1-Phase Uninterruptible Power Supp  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2022-01-28T20:15:10.100,6.1,MEDIUM,nvd,a cwe79 improper neutralization of input during web page generation crosssite scripting vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious url specifically crafted for the nmc affected products 1phase uninterruptible power supp,A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC. Affected Products: 1-Phase Uninterruptible Power Supp,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2021-22813,A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC pointing to an edit policy file. Affected Products: 1-,GRP,CWE-79,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a type of web vulnerability where untrusted data is improperly neutralized before it is used in the context of web page generation, allowing an attacker to inject malicious scripts into web pages viewed by other users. Vendor: Aruba Networks Cause: The vulnerability occurs when the Network Management Controller (NMC) does not properly sanitize or escape user-controllable data when generating web pages, allowing an attacker to craft a malicious URL that, when clicked by a privileged user, executes arbitrary scripts. Impact: An attacker could execute arbitrary scripts with the privileges of the user clicking the malicious URL, potentially leading to unauthorized access, data theft, or system compromise.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC pointing to an edit policy file. Affected Products: 1-  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a type of web vulnerability where untrusted data is improperly neutralized before it is used in the context of web page generation, allowing an attacker to inject malicious scripts into web pages viewed by other users. Vendor: Aruba Networks Cause: The vulnerability occurs when the Network Management Controller (NMC) does not properly sanitize or escape user-controllable data when generating web pages, allowing an attacker to craft a malicious URL that, when clicked by a privileged user, executes arbitrary scripts. Impact: An attacker could execute arbitrary scripts with the privileges of the user clicking the malicious URL, potentially leading to unauthorized access, data theft, or system compromise.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC pointing to an edit policy file. Affected Products: 1-  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a type of web vulnerability where untrusted data is improperly neutralized before it is used in the context of web page generation, allowing an attacker to inject malicious scripts into web pages viewed by other users. Vendor: Aruba Networks Cause: The vulnerability occurs when the Network Management Controller (NMC) does not properly sanitize or escape user-controllable data when generating web pages, allowing an attacker to craft a malicious URL that, when clicked by a privileged user, executes arbitrary scripts. Impact: An attacker could execute arbitrary scripts with the privileges of the user clicking the malicious URL, potentially leading to unauthorized access, data theft, or system compromise.",2022-01-28T20:15:10.147,6.1,MEDIUM,nvd,a cwe79 improper neutralization of input during web page generation crosssite scripting vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious url specifically crafted for the nmc pointing to an edit policy file affected products 1,A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists that could cause arbritrary script execution when a privileged account clicks on a malicious URL specifically crafted for the NMC pointing to an edit policy file. Affected Products: 1-,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a type of web vulnerability where untrusted data is improperly neutralized before it is used in the context of web page generation, allowing an attacker to inject malicious scripts into web pages viewed by other users. Vendor: Aruba Networks Cause: The vulnerability occurs when the Network Management Controller (NMC) does not properly sanitize or escape user-controllable data when generating web pages, allowing an attacker to craft a malicious URL that, when clicked by a privileged user, executes arbitrary scripts. Impact: An attacker could execute arbitrary scripts with the privileges of the user clicking the malicious URL, potentially leading to unauthorized access, data theft, or system compromise."
CVE-2021-22814,"A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists which could cause arbritrary script execution when a malicious file is read and displayed. Affected Products: 1-Phase Uninterruptible Power Supply (UPS) using NMC2 including Smart-UPS,",GRP,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists which could cause arbritrary script execution when a malicious file is read and displayed. Affected Products: 1-Phase Uninterruptible Power Supply (UPS) using NMC2 including Smart-UPS,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists which could cause arbritrary script execution when a malicious file is read and displayed. Affected Products: 1-Phase Uninterruptible Power Supply (UPS) using NMC2 including Smart-UPS,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2022-01-28T20:15:10.200,6.1,MEDIUM,nvd,a cwe79 improper neutralization of input during web page generation crosssite scripting vulnerability exists which could cause arbritrary script execution when a malicious file is read and displayed affected products 1phase uninterruptible power supply ups using nmc2 including smartups,"A CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability exists which could cause arbritrary script execution when a malicious file is read and displayed. Affected Products: 1-Phase Uninterruptible Power Supply (UPS) using NMC2 including Smart-UPS,",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2021-22815,"A CWE-200: Information Exposure vulnerability exists which could cause the troubleshooting archive to be accessed. Affected Products: 1-Phase Uninterruptible Power Supply (UPS) using NMC2 including Smart-UPS, Symmetra, and Galaxy 3500 with Network Management Card 2 (NMC2): AP9630/AP9630CH/AP9630J, A",GRP,CWE-200,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-200: Information Exposure vulnerability exists which could cause the troubleshooting archive to be accessed. Affected Products: 1-Phase Uninterruptible Power Supply (UPS) using NMC2 including Smart-UPS, Symmetra, and Galaxy 3500 with Network Management Card 2 (NMC2): AP9630/AP9630CH/AP9630J, A  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-200: Information Exposure vulnerability exists which could cause the troubleshooting archive to be accessed. Affected Products: 1-Phase Uninterruptible Power Supply (UPS) using NMC2 including Smart-UPS, Symmetra, and Galaxy 3500 with Network Management Card 2 (NMC2): AP9630/AP9630CH/AP9630J, A  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2022-01-28T20:15:10.250,5.3,MEDIUM,nvd,a cwe200 information exposure vulnerability exists which could cause the troubleshooting archive to be accessed affected products 1phase uninterruptible power supply ups using nmc2 including smartups symmetra and galaxy 3500 with network management card 2 nmc2 ap9630ap9630chap9630j a,"A CWE-200: Information Exposure vulnerability exists which could cause the troubleshooting archive to be accessed. Affected Products: 1-Phase Uninterruptible Power Supply (UPS) using NMC2 including Smart-UPS, Symmetra, and Galaxy 3500 with Network Management Card 2 (NMC2): AP9630/AP9630CH/AP9630J, A",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2022-24777,"grpc-swift is the Swift language implementation of gRPC, a remote procedure call (RPC) framework. Prior to version 1.7.2, a grpc-swift server is vulnerable to a denial of service attack via a reachable assertion. This is due to incorrect logic when handling GOAWAY frames. The attack is low-effort: i",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  grpc-swift is the Swift language implementation of gRPC, a remote procedure call (RPC) framework. Prior to version 1.7.2, a grpc-swift server is vulnerable to a denial of service attack via a reachable assertion. This is due to incorrect logic when handling GOAWAY frames. The attack is low-effort: i  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  grpc-swift is the Swift language implementation of gRPC, a remote procedure call (RPC) framework. Prior to version 1.7.2, a grpc-swift server is vulnerable to a denial of service attack via a reachable assertion. This is due to incorrect logic when handling GOAWAY frames. The attack is low-effort: i  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2022-03-25T17:15:08.653,7.5,HIGH,nvd,grpcswift is the swift language implementation of grpc a remote procedure call rpc framework prior to version 172 a grpcswift server is vulnerable to a denial of service attack via a reachable assertion this is due to incorrect logic when handling goaway frames the attack is loweffort i,"grpc-swift is the Swift language implementation of gRPC, a remote procedure call (RPC) framework. Prior to version 1.7.2, a grpc-swift server is vulnerable to a denial of service attack via a reachable assertion. This is due to incorrect logic when handling GOAWAY frames. The attack is low-effort: i",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2022-26245,Falcon-plus v0.3 was discovered to contain a SQL injection vulnerability via the parameter grpName in /config/service/host.go.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Falcon-plus v0.3 was discovered to contain a SQL injection vulnerability via the parameter grpName in /config/service/host.go.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Falcon-plus v0.3 was discovered to contain a SQL injection vulnerability via the parameter grpName in /config/service/host.go.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89",2022-03-27T14:15:12.427,9.8,CRITICAL,nvd,falconplus v03 was discovered to contain a sql injection vulnerability via the parameter grpname in configservicehostgo,Falcon-plus v0.3 was discovered to contain a SQL injection vulnerability via the parameter grpName in /config/service/host.go.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 89
CVE-2022-29224,Envoy is a cloud-native high-performance proxy. Versions of envoy prior to 1.22.1 are subject to a segmentation fault in the GrpcHealthCheckerImpl. Envoy can perform various types of upstream health checking. One of them uses gRPC. Envoy also has a feature which can “hold” (prevent removal) upstream,GRP,CWE-787,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-787,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is a cloud-native high-performance proxy. Versions of envoy prior to 1.22.1 are subject to a segmentation fault in the GrpcHealthCheckerImpl. Envoy can perform various types of upstream health checking. One of them uses gRPC. Envoy also has a feature which can “hold” (prevent removal) upstream  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-787","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is a cloud-native high-performance proxy. Versions of envoy prior to 1.22.1 are subject to a segmentation fault in the GrpcHealthCheckerImpl. Envoy can perform various types of upstream health checking. One of them uses gRPC. Envoy also has a feature which can “hold” (prevent removal) upstream  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-787",2022-06-09T19:15:10.450,5.9,MEDIUM,nvd,envoy is a cloudnative highperformance proxy versions of envoy prior to 1221 are subject to a segmentation fault in the grpchealthcheckerimpl envoy can perform various types of upstream health checking one of them uses grpc envoy also has a feature which can hold prevent removal upstream,Envoy is a cloud-native high-performance proxy. Versions of envoy prior to 1.22.1 are subject to a segmentation fault in the GrpcHealthCheckerImpl. Envoy can perform various types of upstream health checking. One of them uses gRPC. Envoy also has a feature which can “hold” (prevent removal) upstream,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-787
CVE-2022-22215,A Missing Release of File Descriptor or Handle after Effective Lifetime vulnerability in plugable authentication module (PAM) of Juniper Networks Junos OS and Junos OS Evolved allows a locally authenticated attacker with low privileges to cause a Denial of Service (DoS). It is possible that after th,GRP,CWE-399,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: CWE-399 describes a vulnerability where a resource (file descriptor, socket, etc.) is not properly closed or released after it has been used. This can lead to resource exhaustion or other issues. Vendor: Juniper Networks Cause: The vulnerability is in the plugable authentication module (PAM) of Junos OS and Junos OS Evolved, where a file descriptor or handle is not properly released after its effective lifetime. Impact: A locally authenticated attacker with low privileges can cause a Denial of Service (DoS) condition.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A Missing Release of File Descriptor or Handle after Effective Lifetime vulnerability in plugable authentication module (PAM) of Juniper Networks Junos OS and Junos OS Evolved allows a locally authenticated attacker with low privileges to cause a Denial of Service (DoS). It is possible that after th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: CWE-399 describes a vulnerability where a resource (file descriptor, socket, etc.) is not properly closed or released after it has been used. This can lead to resource exhaustion or other issues. Vendor: Juniper Networks Cause: The vulnerability is in the plugable authentication module (PAM) of Junos OS and Junos OS Evolved, where a file descriptor or handle is not properly released after its effective lifetime. Impact: A locally authenticated attacker with low privileges can cause a Denial of Service (DoS) condition.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A Missing Release of File Descriptor or Handle after Effective Lifetime vulnerability in plugable authentication module (PAM) of Juniper Networks Junos OS and Junos OS Evolved allows a locally authenticated attacker with low privileges to cause a Denial of Service (DoS). It is possible that after th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: CWE-399 describes a vulnerability where a resource (file descriptor, socket, etc.) is not properly closed or released after it has been used. This can lead to resource exhaustion or other issues. Vendor: Juniper Networks Cause: The vulnerability is in the plugable authentication module (PAM) of Junos OS and Junos OS Evolved, where a file descriptor or handle is not properly released after its effective lifetime. Impact: A locally authenticated attacker with low privileges can cause a Denial of Service (DoS) condition.",2022-07-20T15:15:08.950,6.5,MEDIUM,nvd,a missing release of file descriptor or handle after effective lifetime vulnerability in plugable authentication module pam of juniper networks junos os and junos os evolved allows a locally authenticated attacker with low privileges to cause a denial of service dos it is possible that after th,A Missing Release of File Descriptor or Handle after Effective Lifetime vulnerability in plugable authentication module (PAM) of Juniper Networks Junos OS and Junos OS Evolved allows a locally authenticated attacker with low privileges to cause a Denial of Service (DoS). It is possible that after th,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: CWE-399 describes a vulnerability where a resource (file descriptor, socket, etc.) is not properly closed or released after it has been used. This can lead to resource exhaustion or other issues. Vendor: Juniper Networks Cause: The vulnerability is in the plugable authentication module (PAM) of Junos OS and Junos OS Evolved, where a file descriptor or handle is not properly released after its effective lifetime. Impact: A locally authenticated attacker with low privileges can cause a Denial of Service (DoS) condition."
CVE-2023-0296,"The Birthday attack against 64-bit block ciphers flaw (CVE-2016-2183) was reported for the health checks port (9979) on etcd grpc-proxy component. Even though the CVE-2016-2183 has been fixed in the etcd components, to enable periodic health checks from kubelet, it was necessary to open up a new por",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 331,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Birthday attack against 64-bit block ciphers flaw (CVE-2016-2183) was reported for the health checks port (9979) on etcd grpc-proxy component. Even though the CVE-2016-2183 has been fixed in the etcd components, to enable periodic health checks from kubelet, it was necessary to open up a new por  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 331","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Birthday attack against 64-bit block ciphers flaw (CVE-2016-2183) was reported for the health checks port (9979) on etcd grpc-proxy component. Even though the CVE-2016-2183 has been fixed in the etcd components, to enable periodic health checks from kubelet, it was necessary to open up a new por  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 331",2023-01-17T21:15:15.273,5.3,MEDIUM,nvd,the birthday attack against 64bit block ciphers flaw cve20162183 was reported for the health checks port 9979 on etcd grpcproxy component even though the cve20162183 has been fixed in the etcd components to enable periodic health checks from kubelet it was necessary to open up a new por,"The Birthday attack against 64-bit block ciphers flaw (CVE-2016-2183) was reported for the health checks port (9979) on etcd grpc-proxy component. Even though the CVE-2016-2183 has been fixed in the etcd components, to enable periodic health checks from kubelet, it was necessary to open up a new por",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 331
CVE-2023-27487,"Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, the client may bypass JSON Web Token (JWT) checks and forge fake original paths. The header `x-envoy-original-path` should be an internal header, but E",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, the client may bypass JSON Web Token (JWT) checks and forge fake original paths. The header x-envoy-original-path should be an internal header, but E  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, the client may bypass JSON Web Token (JWT) checks and forge fake original paths. The header x-envoy-original-path should be an internal header, but E  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862",2023-04-04T16:15:07.343,8.2,HIGH,nvd,envoy is an open source edge and service proxy designed for cloudnative applications prior to versions 1260 1253 1244 1236 and 1229 the client may bypass json web token jwt checks and forge fake original paths the header xenvoyoriginalpath should be an internal header but e,"Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, the client may bypass JSON Web Token (JWT) checks and forge fake original paths. The header `x-envoy-original-path` should be an internal header, but E",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862
CVE-2023-27488,"Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, escalation of privileges is possible when `failure_mode_allow: true` is configured for `ext_authz` filter. For affected components that are used for lo",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, escalation of privileges is possible when failure_mode_allow: true is configured for ext_authz filter. For affected components that are used for lo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, escalation of privileges is possible when failure_mode_allow: true is configured for ext_authz filter. For affected components that are used for lo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269",2023-04-04T18:15:07.083,5.4,MEDIUM,nvd,envoy is an open source edge and service proxy designed for cloudnative applications prior to versions 1260 1253 1244 1236 and 1229 escalation of privileges is possible when failure_mode_allow true is configured for ext_authz filter for affected components that are used for lo,"Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, escalation of privileges is possible when `failure_mode_allow: true` is configured for `ext_authz` filter. For affected components that are used for lo",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 269
CVE-2023-29193,"SpiceDB is an open source, Google Zanzibar-inspired, database system for creating and managing security-critical application permissions. The `spicedb serve` command contains a flag named `--grpc-preshared-key` which is used to protect the gRPC API from being accessed by unauthorized requests. The v",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Exposure of Sensitive Information to an Unauthorized Actor Vendor: Unknown Cause: The --grpc-preshared-key flag in spicedb serve command is used to protect gRPC API but could be exposed Impact: Unauthorized access to gRPC API and sensitive information,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SpiceDB is an open source, Google Zanzibar-inspired, database system for creating and managing security-critical application permissions. The spicedb serve command contains a flag named --grpc-preshared-key which is used to protect the gRPC API from being accessed by unauthorized requests. The v  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Exposure of Sensitive Information to an Unauthorized Actor Vendor: Unknown Cause: The --grpc-preshared-key flag in spicedb serve command is used to protect gRPC API but could be exposed Impact: Unauthorized access to gRPC API and sensitive information","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SpiceDB is an open source, Google Zanzibar-inspired, database system for creating and managing security-critical application permissions. The spicedb serve command contains a flag named --grpc-preshared-key which is used to protect the gRPC API from being accessed by unauthorized requests. The v  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Exposure of Sensitive Information to an Unauthorized Actor Vendor: Unknown Cause: The --grpc-preshared-key flag in spicedb serve command is used to protect gRPC API but could be exposed Impact: Unauthorized access to gRPC API and sensitive information",2023-04-14T20:15:09.670,8.7,HIGH,nvd,spicedb is an open source google zanzibarinspired database system for creating and managing securitycritical application permissions the spicedb serve command contains a flag named grpcpresharedkey which is used to protect the grpc api from being accessed by unauthorized requests the v,"SpiceDB is an open source, Google Zanzibar-inspired, database system for creating and managing security-critical application permissions. The `spicedb serve` command contains a flag named `--grpc-preshared-key` which is used to protect the gRPC API from being accessed by unauthorized requests. The v",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Exposure of Sensitive Information to an Unauthorized Actor Vendor: Unknown Cause: The --grpc-preshared-key flag in spicedb serve command is used to protect gRPC API but could be exposed Impact: Unauthorized access to gRPC API and sensitive information
CVE-2018-17453,"An issue was discovered in GitLab Community and Enterprise Edition before 11.1.7, 11.2.x before 11.2.4, and 11.3.x before 11.3.1. Attackers may have been able to obtain sensitive access-token data from Sentry logs via the GRPC::Unknown exception.",GRP,CWE-522,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-522 Explanation: Improper handling of credentials in logs, leading to exposure of sensitive information. Vendor: GitLab Cause: Sensitive access tokens were logged in Sentry in an insecure manner. Impact: Attackers could obtain sensitive access tokens from Sentry logs.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in GitLab Community and Enterprise Edition before 11.1.7, 11.2.x before 11.2.4, and 11.3.x before 11.3.1. Attackers may have been able to obtain sensitive access-token data from Sentry logs via the GRPC::Unknown exception.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-522 Explanation: Improper handling of credentials in logs, leading to exposure of sensitive information. Vendor: GitLab Cause: Sensitive access tokens were logged in Sentry in an insecure manner. Impact: Attackers could obtain sensitive access tokens from Sentry logs.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in GitLab Community and Enterprise Edition before 11.1.7, 11.2.x before 11.2.4, and 11.3.x before 11.3.1. Attackers may have been able to obtain sensitive access-token data from Sentry logs via the GRPC::Unknown exception.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-522 Explanation: Improper handling of credentials in logs, leading to exposure of sensitive information. Vendor: GitLab Cause: Sensitive access tokens were logged in Sentry in an insecure manner. Impact: Attackers could obtain sensitive access tokens from Sentry logs.",2023-04-15T23:15:13.557,5.3,MEDIUM,nvd,an issue was discovered in gitlab community and enterprise edition before 1117 112x before 1124 and 113x before 1131 attackers may have been able to obtain sensitive accesstoken data from sentry logs via the grpcunknown exception,"An issue was discovered in GitLab Community and Enterprise Edition before 11.1.7, 11.2.x before 11.2.4, and 11.3.x before 11.3.1. Attackers may have been able to obtain sensitive access-token data from Sentry logs via the GRPC::Unknown exception.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-522 Explanation: Improper handling of credentials in logs, leading to exposure of sensitive information. Vendor: GitLab Cause: Sensitive access tokens were logged in Sentry in an insecure manner. Impact: Attackers could obtain sensitive access tokens from Sentry logs."
CVE-2023-28983,"An OS Command Injection vulnerability in gRPC Network Operations Interface (gNOI) server module of Juniper Networks Junos OS Evolved allows an authenticated, low privileged, network based attacker to inject shell commands and execute code. This issue affects Juniper Networks Junos OS Evolved 21.4 ve",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An OS Command Injection vulnerability in gRPC Network Operations Interface (gNOI) server module of Juniper Networks Junos OS Evolved allows an authenticated, low privileged, network based attacker to inject shell commands and execute code. This issue affects Juniper Networks Junos OS Evolved 21.4 ve  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An OS Command Injection vulnerability in gRPC Network Operations Interface (gNOI) server module of Juniper Networks Junos OS Evolved allows an authenticated, low privileged, network based attacker to inject shell commands and execute code. This issue affects Juniper Networks Junos OS Evolved 21.4 ve  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78",2023-04-17T22:15:09.810,8.8,HIGH,nvd,an os command injection vulnerability in grpc network operations interface gnoi server module of juniper networks junos os evolved allows an authenticated low privileged network based attacker to inject shell commands and execute code this issue affects juniper networks junos os evolved 214 ve,"An OS Command Injection vulnerability in gRPC Network Operations Interface (gNOI) server module of Juniper Networks Junos OS Evolved allows an authenticated, low privileged, network based attacker to inject shell commands and execute code. This issue affects Juniper Networks Junos OS Evolved 21.4 ve",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78
CVE-2023-30845,ESPv2 is a service proxy that provides API management capabilities using Google Service Infrastructure. ESPv2 2.20.0 through 2.42.0 contains an authentication bypass vulnerability. API clients can craft a malicious `X-HTTP-Method-Override` header value to bypass JWT authentication in specific cases.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ESPv2 is a service proxy that provides API management capabilities using Google Service Infrastructure. ESPv2 2.20.0 through 2.42.0 contains an authentication bypass vulnerability. API clients can craft a malicious X-HTTP-Method-Override header value to bypass JWT authentication in specific cases.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ESPv2 is a service proxy that provides API management capabilities using Google Service Infrastructure. ESPv2 2.20.0 through 2.42.0 contains an authentication bypass vulnerability. API clients can craft a malicious X-HTTP-Method-Override header value to bypass JWT authentication in specific cases.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287",2023-04-26T21:15:09.277,8.2,HIGH,nvd,espv2 is a service proxy that provides api management capabilities using google service infrastructure espv2 2200 through 2420 contains an authentication bypass vulnerability api clients can craft a malicious xhttpmethodoverride header value to bypass jwt authentication in specific cases,ESPv2 is a service proxy that provides API management capabilities using Google Service Infrastructure. ESPv2 2.20.0 through 2.42.0 contains an authentication bypass vulnerability. API clients can craft a malicious `X-HTTP-Method-Override` header value to bypass JWT authentication in specific cases.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287
CVE-2023-1428,"There exists an vulnerability causing an abort() to be called in gRPC. 
The following headers cause gRPC's C++ implementation to abort() when called via http2:

te: x (x != trailers)

:scheme: x (x != http, https)

grpclb_client_stats: x (x == anything)

On top of sending one of those headers, a lat",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  There exists an vulnerability causing an abort() to be called in gRPC.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  There exists an vulnerability causing an abort() to be called in gRPC.",2023-06-09T11:15:09.200,7.5,HIGH,nvd,"there exists an vulnerability causing an abort to be called in grpc 
the following headers cause grpcs c implementation to abort when called via http2

te x x  trailers

scheme x x  http https

grpclb_client_stats x x  anything

on top of sending one of those headers a lat","There exists an vulnerability causing an abort() to be called in gRPC. 
The following headers cause gRPC's C++ implementation to abort() when called via http2:

te: x (x != trailers)

:scheme: x (x != http, https)

grpclb_client_stats: x (x == anything)

On top of sending one of those headers, a lat",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2023-32731,"When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this co",GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows desynchronization of HPACK tables between sender and receiver, leading to potential data leakage. Vendor: Google Cause: gRPC HTTP2 stack fails to handle header size exceeded errors, causing it to skip HPACK frame parsing and table mutations. Impact: This can lead to HPACK table desynchronization between sender and receiver, potentially allowing data leakage.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this co  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows desynchronization of HPACK tables between sender and receiver, leading to potential data leakage. Vendor: Google Cause: gRPC HTTP2 stack fails to handle header size exceeded errors, causing it to skip HPACK frame parsing and table mutations. Impact: This can lead to HPACK table desynchronization between sender and receiver, potentially allowing data leakage.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this co  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows desynchronization of HPACK tables between sender and receiver, leading to potential data leakage. Vendor: Google Cause: gRPC HTTP2 stack fails to handle header size exceeded errors, causing it to skip HPACK frame parsing and table mutations. Impact: This can lead to HPACK table desynchronization between sender and receiver, potentially allowing data leakage.",2023-06-09T11:15:09.303,7.4,HIGH,nvd,when grpc http2 stack raised a header size exceeded error it skipped parsing the rest of the hpack frame this caused any hpack table mutations to also be skipped resulting in a desynchronization of hpack tables between sender and receiver if leveraged say between a proxy and a backend this co,"When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this co","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows desynchronization of HPACK tables between sender and receiver, leading to potential data leakage. Vendor: Google Cause: gRPC HTTP2 stack fails to handle header size exceeded errors, causing it to skip HPACK frame parsing and table mutations. Impact: This can lead to HPACK table desynchronization between sender and receiver, potentially allowing data leakage."
CVE-2023-32732,"gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyon",GRP,CWE-476,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for -bin suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyon  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for -bin suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyon  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2023-06-09T11:15:09.377,5.3,MEDIUM,nvd,grpc contains a vulnerability whereby a client can cause a termination of connection between a http2 proxy and a grpc server a base64 encoding error for bin suffixed headers will result in a disconnection by the grpc server but is typically allowed by http2 proxies we recommend upgrading beyon,"gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyon",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2023-34837,A Cross Site Scripting vulnerability in Microworld Technologies eScan Management console v.14.0.1400.2281 allows a remote attacker to execute arbitrary code via a vulnerable parameter GrpPath.,GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows remote code execution through a parameter that is not properly sanitized, allowing an attacker to inject malicious script code. Vendor: Microworld Technologies Cause: Insufficient sanitization of the GrpPath parameter Impact: Remote code execution","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A Cross Site Scripting vulnerability in Microworld Technologies eScan Management console v.14.0.1400.2281 allows a remote attacker to execute arbitrary code via a vulnerable parameter GrpPath.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows remote code execution through a parameter that is not properly sanitized, allowing an attacker to inject malicious script code. Vendor: Microworld Technologies Cause: Insufficient sanitization of the GrpPath parameter Impact: Remote code execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A Cross Site Scripting vulnerability in Microworld Technologies eScan Management console v.14.0.1400.2281 allows a remote attacker to execute arbitrary code via a vulnerable parameter GrpPath.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows remote code execution through a parameter that is not properly sanitized, allowing an attacker to inject malicious script code. Vendor: Microworld Technologies Cause: Insufficient sanitization of the GrpPath parameter Impact: Remote code execution",2023-06-27T18:15:13.653,5.4,MEDIUM,nvd,a cross site scripting vulnerability in microworld technologies escan management console v14014002281 allows a remote attacker to execute arbitrary code via a vulnerable parameter grppath,A Cross Site Scripting vulnerability in Microworld Technologies eScan Management console v.14.0.1400.2281 allows a remote attacker to execute arbitrary code via a vulnerable parameter GrpPath.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows remote code execution through a parameter that is not properly sanitized, allowing an attacker to inject malicious script code. Vendor: Microworld Technologies Cause: Insufficient sanitization of the GrpPath parameter Impact: Remote code execution"
CVE-2023-33335,Cross Site Scripting (XSS) in Sophos Sophos iView (The EOL was December 31st 2020) in grpname parameter that allows arbitrary script to be executed.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross Site Scripting (XSS) in Sophos Sophos iView (The EOL was December 31st 2020) in grpname parameter that allows arbitrary script to be executed.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross Site Scripting (XSS) in Sophos Sophos iView (The EOL was December 31st 2020) in grpname parameter that allows arbitrary script to be executed.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-07-05T18:15:10.277,6.1,MEDIUM,nvd,cross site scripting xss in sophos sophos iview the eol was december 31st 2020 in grpname parameter that allows arbitrary script to be executed,Cross Site Scripting (XSS) in Sophos Sophos iView (The EOL was December 31st 2020) in grpname parameter that allows arbitrary script to be executed.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-35942,"Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.27.0, 1.26.4, 1.25.9, 1.24.10, and 1.23.12, gRPC access loggers using listener's global scope can cause a `use-after-free` crash when the listener is drained. Versions 1.27.0, 1.26.4, 1.25.9, 1",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.27.0, 1.26.4, 1.25.9, 1.24.10, and 1.23.12, gRPC access loggers using listener's global scope can cause a use-after-free crash when the listener is drained. Versions 1.27.0, 1.26.4, 1.25.9, 1  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.27.0, 1.26.4, 1.25.9, 1.24.10, and 1.23.12, gRPC access loggers using listener's global scope can cause a use-after-free crash when the listener is drained. Versions 1.27.0, 1.26.4, 1.25.9, 1  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2023-07-25T19:15:11.050,6.5,MEDIUM,nvd,envoy is an open source edge and service proxy designed for cloudnative applications prior to versions 1270 1264 1259 12410 and 12312 grpc access loggers using listeners global scope can cause a useafterfree crash when the listener is drained versions 1270 1264 1259 1,"Envoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.27.0, 1.26.4, 1.25.9, 1.24.10, and 1.23.12, gRPC access loggers using listener's global scope can cause a `use-after-free` crash when the listener is drained. Versions 1.27.0, 1.26.4, 1.25.9, 1",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2023-33953,"gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks:

- Unbounded memory buffering in the HPACK parser
- Unbounded CPU consumption in",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks: - Unbounded memory buffering in the HPACK parser - Unbounded CPU consumption in  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks: - Unbounded memory buffering in the HPACK parser - Unbounded CPU consumption in  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2023-08-09T13:15:09.370,7.5,HIGH,nvd,"grpc contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases three vectors were found that allow the following dos attacks

 unbounded memory buffering in the hpack parser
 unbounded cpu consumption in","gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks:

- Unbounded memory buffering in the HPACK parser
- Unbounded CPU consumption in",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2023-4785,"Lack of error handling in the TCP server in Google's gRPC starting version 1.23 on posix-compatible platforms (ex. Linux) allows an attacker to cause a denial of service by initiating a significant number of connections with the server. Note that gRPC C++ Python, and Ruby are affected, but gRPC Java",GRP,CWE-400,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Lack of error handling in the TCP server in Google's gRPC starting version 1.23 on posix-compatible platforms (ex. Linux) allows an attacker to cause a denial of service by initiating a significant number of connections with the server. Note that gRPC C++ Python, and Ruby are affected, but gRPC Java  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Lack of error handling in the TCP server in Google's gRPC starting version 1.23 on posix-compatible platforms (ex. Linux) allows an attacker to cause a denial of service by initiating a significant number of connections with the server. Note that gRPC C++ Python, and Ruby are affected, but gRPC Java  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400",2023-09-13T17:15:10.227,7.5,HIGH,nvd,lack of error handling in the tcp server in googles grpc starting version 123 on posixcompatible platforms ex linux allows an attacker to cause a denial of service by initiating a significant number of connections with the server note that grpc c python and ruby are affected but grpc java,"Lack of error handling in the TCP server in Google's gRPC starting version 1.23 on posix-compatible platforms (ex. Linux) allows an attacker to cause a denial of service by initiating a significant number of connections with the server. Note that gRPC C++ Python, and Ruby are affected, but gRPC Java",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-400
CVE-2023-46058,Cross Site Scripting (XSS) vulnerability in Geeklog-Core geeklog v.2.2.2 allows a remote attacker to execute arbitrary code via a crafted payload to the grp_desc parameter of the admin/group.php component.,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross Site Scripting (XSS) vulnerability in Geeklog-Core geeklog v.2.2.2 allows a remote attacker to execute arbitrary code via a crafted payload to the grp_desc parameter of the admin/group.php component.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross Site Scripting (XSS) vulnerability in Geeklog-Core geeklog v.2.2.2 allows a remote attacker to execute arbitrary code via a crafted payload to the grp_desc parameter of the admin/group.php component.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-10-24T00:15:08.773,4.8,MEDIUM,nvd,cross site scripting xss vulnerability in geeklogcore geeklog v222 allows a remote attacker to execute arbitrary code via a crafted payload to the grp_desc parameter of the admingroupphp component,Cross Site Scripting (XSS) vulnerability in Geeklog-Core geeklog v.2.2.2 allows a remote attacker to execute arbitrary code via a crafted payload to the grp_desc parameter of the admin/group.php component.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-47108,"OpenTelemetry-Go Contrib is a collection of third-party packages for OpenTelemetry-Go. Prior to version 0.46.0, the grpc Unary Server Interceptor out of the box adds labels `net.peer.sock.addr` and `net.peer.sock.port` that have unbound cardinality. It leads to the server's potential memory exhausti",GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254 Explanation: The vulnerability is due to the use of unbounded cardinality for the net.peer.sock.addr and net.peer.sock.port labels, which can lead to excessive memory consumption. Vendor: OpenTelemetry Cause: The grpc Unary Server Interceptor in OpenTelemetry-Go Contrib adds labels with unbounded cardinality, causing potential memory exhaustion. Impact: The vulnerability could lead to server memory exhaustion, potentially causing denial of service.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  OpenTelemetry-Go Contrib is a collection of third-party packages for OpenTelemetry-Go. Prior to version 0.46.0, the grpc Unary Server Interceptor out of the box adds labels net.peer.sock.addr and net.peer.sock.port that have unbound cardinality. It leads to the server's potential memory exhausti  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254 Explanation: The vulnerability is due to the use of unbounded cardinality for the net.peer.sock.addr and net.peer.sock.port labels, which can lead to excessive memory consumption. Vendor: OpenTelemetry Cause: The grpc Unary Server Interceptor in OpenTelemetry-Go Contrib adds labels with unbounded cardinality, causing potential memory exhaustion. Impact: The vulnerability could lead to server memory exhaustion, potentially causing denial of service.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  OpenTelemetry-Go Contrib is a collection of third-party packages for OpenTelemetry-Go. Prior to version 0.46.0, the grpc Unary Server Interceptor out of the box adds labels net.peer.sock.addr and net.peer.sock.port that have unbound cardinality. It leads to the server's potential memory exhausti  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254 Explanation: The vulnerability is due to the use of unbounded cardinality for the net.peer.sock.addr and net.peer.sock.port labels, which can lead to excessive memory consumption. Vendor: OpenTelemetry Cause: The grpc Unary Server Interceptor in OpenTelemetry-Go Contrib adds labels with unbounded cardinality, causing potential memory exhaustion. Impact: The vulnerability could lead to server memory exhaustion, potentially causing denial of service.",2023-11-10T19:15:16.410,7.5,HIGH,nvd,opentelemetrygo contrib is a collection of thirdparty packages for opentelemetrygo prior to version 0460 the grpc unary server interceptor out of the box adds labels netpeersockaddr and netpeersockport that have unbound cardinality it leads to the servers potential memory exhausti,"OpenTelemetry-Go Contrib is a collection of third-party packages for OpenTelemetry-Go. Prior to version 0.46.0, the grpc Unary Server Interceptor out of the box adds labels `net.peer.sock.addr` and `net.peer.sock.port` that have unbound cardinality. It leads to the server's potential memory exhausti","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254 Explanation: The vulnerability is due to the use of unbounded cardinality for the net.peer.sock.addr and net.peer.sock.port labels, which can lead to excessive memory consumption. Vendor: OpenTelemetry Cause: The grpc Unary Server Interceptor in OpenTelemetry-Go Contrib adds labels with unbounded cardinality, causing potential memory exhaustion. Impact: The vulnerability could lead to server memory exhaustion, potentially causing denial of service."
CVE-2024-21614,"
An Improper Check for Unusual or Exceptional Conditions vulnerability in Routing Protocol Daemon (RPD) of Juniper Networks Junos OS and Junos OS Evolved allows a network-based, unauthenticated attacker to cause rpd to crash, leading to Denial of Service (DoS).

On all Junos OS and Junos OS Evolved ",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 252,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description: ","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description: ",2024-01-12T01:15:49.837,7.5,HIGH,nvd,"
an improper check for unusual or exceptional conditions vulnerability in routing protocol daemon rpd of juniper networks junos os and junos os evolved allows a networkbased unauthenticated attacker to cause rpd to crash leading to denial of service dos

on all junos os and junos os evolved ","
An Improper Check for Unusual or Exceptional Conditions vulnerability in Routing Protocol Daemon (RPD) of Juniper Networks Junos OS and Junos OS Evolved allows a network-based, unauthenticated attacker to cause rpd to crash, leading to Denial of Service (DoS).

On all Junos OS and Junos OS Evolved ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 252
CVE-2024-25089,Malwarebytes Binisoft Windows Firewall Control before 6.9.9.2 allows remote attackers to execute arbitrary code via gRPC named pipes.,GRP,CWE-125,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Malwarebytes Binisoft Windows Firewall Control before 6.9.9.2 allows remote attackers to execute arbitrary code via gRPC named pipes.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Malwarebytes Binisoft Windows Firewall Control before 6.9.9.2 allows remote attackers to execute arbitrary code via gRPC named pipes.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2024-02-04T22:15:23.117,9.8,CRITICAL,nvd,malwarebytes binisoft windows firewall control before 6992 allows remote attackers to execute arbitrary code via grpc named pipes,Malwarebytes Binisoft Windows Firewall Control before 6.9.9.2 allows remote attackers to execute arbitrary code via gRPC named pipes.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2024-23324,"Envoy is a high-performance edge/middle/service proxy. External authentication can be bypassed by downstream connections. Downstream clients can force invalid gRPC requests to be sent to ext_authz, circumventing ext_authz checks when failure_mode_allow is set to true. This issue has been addressed i",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is a high-performance edge/middle/service proxy. External authentication can be bypassed by downstream connections. Downstream clients can force invalid gRPC requests to be sent to ext_authz, circumventing ext_authz checks when failure_mode_allow is set to true. This issue has been addressed i  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Envoy is a high-performance edge/middle/service proxy. External authentication can be bypassed by downstream connections. Downstream clients can force invalid gRPC requests to be sent to ext_authz, circumventing ext_authz checks when failure_mode_allow is set to true. This issue has been addressed i  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862",2024-02-09T23:15:09.223,8.6,HIGH,nvd,envoy is a highperformance edgemiddleservice proxy external authentication can be bypassed by downstream connections downstream clients can force invalid grpc requests to be sent to ext_authz circumventing ext_authz checks when failure_mode_allow is set to true this issue has been addressed i,"Envoy is a high-performance edge/middle/service proxy. External authentication can be bypassed by downstream connections. Downstream clients can force invalid gRPC requests to be sent to ext_authz, circumventing ext_authz checks when failure_mode_allow is set to true. This issue has been addressed i",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862
CVE-2024-35223,"Dapr is a portable, event-driven, runtime for building distributed applications across cloud and edge. Dapr sends the app token of the invoker app instead of the app token of the invoked app. This causes of a leak of the application token of the invoker app to the invoked app when using Dapr as a gR",GRP,CWE-522,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: CWE-522 is a vulnerability where sensitive information is exposed to unauthorized actors. In this case, the Dapr runtime leaks the invoker application's token to the invoked application, potentially leading to unauthorized access or privilege escalation. Vendor: Dapr Cause: Dapr sends the invoker application's token instead of the invoked application's token when making cross-application calls. Impact: Unauthorized disclosure of sensitive application tokens, potentially leading to privilege escalation and unauthorized access to resources.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Dapr is a portable, event-driven, runtime for building distributed applications across cloud and edge. Dapr sends the app token of the invoker app instead of the app token of the invoked app. This causes of a leak of the application token of the invoker app to the invoked app when using Dapr as a gR  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: CWE-522 is a vulnerability where sensitive information is exposed to unauthorized actors. In this case, the Dapr runtime leaks the invoker application's token to the invoked application, potentially leading to unauthorized access or privilege escalation. Vendor: Dapr Cause: Dapr sends the invoker application's token instead of the invoked application's token when making cross-application calls. Impact: Unauthorized disclosure of sensitive application tokens, potentially leading to privilege escalation and unauthorized access to resources.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Dapr is a portable, event-driven, runtime for building distributed applications across cloud and edge. Dapr sends the app token of the invoker app instead of the app token of the invoked app. This causes of a leak of the application token of the invoker app to the invoked app when using Dapr as a gR  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: CWE-522 is a vulnerability where sensitive information is exposed to unauthorized actors. In this case, the Dapr runtime leaks the invoker application's token to the invoked application, potentially leading to unauthorized access or privilege escalation. Vendor: Dapr Cause: Dapr sends the invoker application's token instead of the invoked application's token when making cross-application calls. Impact: Unauthorized disclosure of sensitive application tokens, potentially leading to privilege escalation and unauthorized access to resources.",2024-05-23T09:15:09.890,5.3,MEDIUM,nvd,dapr is a portable eventdriven runtime for building distributed applications across cloud and edge dapr sends the app token of the invoker app instead of the app token of the invoked app this causes of a leak of the application token of the invoker app to the invoked app when using dapr as a gr,"Dapr is a portable, event-driven, runtime for building distributed applications across cloud and edge. Dapr sends the app token of the invoker app instead of the app token of the invoked app. This causes of a leak of the application token of the invoker app to the invoked app when using Dapr as a gR","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: CWE-522 is a vulnerability where sensitive information is exposed to unauthorized actors. In this case, the Dapr runtime leaks the invoker application's token to the invoked application, potentially leading to unauthorized access or privilege escalation. Vendor: Dapr Cause: Dapr sends the invoker application's token instead of the invoked application's token when making cross-application calls. Impact: Unauthorized disclosure of sensitive application tokens, potentially leading to privilege escalation and unauthorized access to resources."
CVE-2024-37168,"@grpc/grps-js implements the core functionality of gRPC purely in JavaScript, without a C++ addon. Prior to versions 1.10.9, 1.9.15, and 1.8.22, there are two separate code paths in which memory can be allocated per message in excess of the `grpc.max_receive_message_length` channel option: If an inc",GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: The vulnerability allows an attacker to consume excessive memory by sending messages larger than the grpc.max_receive_message_length limit through two separate code paths, leading to a denial of service condition. Vendor: gRPC Cause: The implementation of gRPC in JavaScript allows for two separate code paths where memory is allocated per message in excess of the grpc.max_receive_message_length channel option. Impact: An attacker can consume excessive memory, leading to a denial of service condition.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  @grpc/grps-js implements the core functionality of gRPC purely in JavaScript, without a C++ addon. Prior to versions 1.10.9, 1.9.15, and 1.8.22, there are two separate code paths in which memory can be allocated per message in excess of the grpc.max_receive_message_length channel option: If an inc  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: The vulnerability allows an attacker to consume excessive memory by sending messages larger than the grpc.max_receive_message_length limit through two separate code paths, leading to a denial of service condition. Vendor: gRPC Cause: The implementation of gRPC in JavaScript allows for two separate code paths where memory is allocated per message in excess of the grpc.max_receive_message_length channel option. Impact: An attacker can consume excessive memory, leading to a denial of service condition.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  @grpc/grps-js implements the core functionality of gRPC purely in JavaScript, without a C++ addon. Prior to versions 1.10.9, 1.9.15, and 1.8.22, there are two separate code paths in which memory can be allocated per message in excess of the grpc.max_receive_message_length channel option: If an inc  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: The vulnerability allows an attacker to consume excessive memory by sending messages larger than the grpc.max_receive_message_length limit through two separate code paths, leading to a denial of service condition. Vendor: gRPC Cause: The implementation of gRPC in JavaScript allows for two separate code paths where memory is allocated per message in excess of the grpc.max_receive_message_length channel option. Impact: An attacker can consume excessive memory, leading to a denial of service condition.",2024-06-10T22:15:12.433,5.3,MEDIUM,nvd,grpcgrpsjs implements the core functionality of grpc purely in javascript without a c addon prior to versions 1109 1915 and 1822 there are two separate code paths in which memory can be allocated per message in excess of the grpcmax_receive_message_length channel option if an inc,"@grpc/grps-js implements the core functionality of gRPC purely in JavaScript, without a C++ addon. Prior to versions 1.10.9, 1.9.15, and 1.8.22, there are two separate code paths in which memory can be allocated per message in excess of the `grpc.max_receive_message_length` channel option: If an inc","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: The vulnerability allows an attacker to consume excessive memory by sending messages larger than the grpc.max_receive_message_length limit through two separate code paths, leading to a denial of service condition. Vendor: gRPC Cause: The implementation of gRPC in JavaScript allows for two separate code paths where memory is allocated per message in excess of the grpc.max_receive_message_length channel option. Impact: An attacker can consume excessive memory, leading to a denial of service condition."
CVE-2024-5469,DoS in KAS in GitLab CE/EE affecting all versions from 16.10.0 prior to 16.10.6 and 16.11.0 prior to 16.11.3 allows an attacker to crash KAS via crafted gRPC requests.,GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to crash the service by sending crafted gRPC requests, leading to a Denial of Service condition. Vendor: GitLab Cause: The vulnerability is due to improper handling of crafted gRPC requests in the KAS (Kubernetes Agent Service) component. Impact: The vulnerability can cause the KAS to crash, resulting in a Denial of Service (DoS) condition.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  DoS in KAS in GitLab CE/EE affecting all versions from 16.10.0 prior to 16.10.6 and 16.11.0 prior to 16.11.3 allows an attacker to crash KAS via crafted gRPC requests.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to crash the service by sending crafted gRPC requests, leading to a Denial of Service condition. Vendor: GitLab Cause: The vulnerability is due to improper handling of crafted gRPC requests in the KAS (Kubernetes Agent Service) component. Impact: The vulnerability can cause the KAS to crash, resulting in a Denial of Service (DoS) condition.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  DoS in KAS in GitLab CE/EE affecting all versions from 16.10.0 prior to 16.10.6 and 16.11.0 prior to 16.11.3 allows an attacker to crash KAS via crafted gRPC requests.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to crash the service by sending crafted gRPC requests, leading to a Denial of Service condition. Vendor: GitLab Cause: The vulnerability is due to improper handling of crafted gRPC requests in the KAS (Kubernetes Agent Service) component. Impact: The vulnerability can cause the KAS to crash, resulting in a Denial of Service (DoS) condition.",2024-06-14T04:15:43.120,3.1,LOW,nvd,dos in kas in gitlab ceee affecting all versions from 16100 prior to 16106 and 16110 prior to 16113 allows an attacker to crash kas via crafted grpc requests,DoS in KAS in GitLab CE/EE affecting all versions from 16.10.0 prior to 16.10.6 and 16.11.0 prior to 16.11.3 allows an attacker to crash KAS via crafted gRPC requests.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to crash the service by sending crafted gRPC requests, leading to a Denial of Service condition. Vendor: GitLab Cause: The vulnerability is due to improper handling of crafted gRPC requests in the KAS (Kubernetes Agent Service) component. Impact: The vulnerability can cause the KAS to crash, resulting in a Denial of Service (DoS) condition."
CVE-2024-39530,"An Improper Check for Unusual or Exceptional Conditions vulnerability in the chassis management daemon (chassisd) of Juniper Networks Junos OS allows an unauthenticated, network-based attacker to cause a 

Denial-of-Service (DoS).

If an attempt is made to access specific sensors on platforms not su",GRP,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An Improper Check for Unusual or Exceptional Conditions vulnerability in the chassis management daemon (chassisd) of Juniper Networks Junos OS allows an unauthenticated, network-based attacker to cause a Denial-of-Service (DoS). If an attempt is made to access specific sensors on platforms not su  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An Improper Check for Unusual or Exceptional Conditions vulnerability in the chassis management daemon (chassisd) of Juniper Networks Junos OS allows an unauthenticated, network-based attacker to cause a Denial-of-Service (DoS). If an attempt is made to access specific sensors on platforms not su  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2024-07-11T16:15:04.613,7.5,HIGH,nvd,"an improper check for unusual or exceptional conditions vulnerability in the chassis management daemon chassisd of juniper networks junos os allows an unauthenticated networkbased attacker to cause a 

denialofservice dos

if an attempt is made to access specific sensors on platforms not su","An Improper Check for Unusual or Exceptional Conditions vulnerability in the chassis management daemon (chassisd) of Juniper Networks Junos OS allows an unauthenticated, network-based attacker to cause a 

Denial-of-Service (DoS).

If an attempt is made to access specific sensors on platforms not su",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2024-35199,"TorchServe is a flexible and easy-to-use tool for serving and scaling PyTorch models in production. In affected versions the two gRPC ports 7070 and 7071, are not bound to [localhost](http://localhost/) by default, so when TorchServe is launched, these two interfaces are bound to all interfaces. Cus",GRP,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: Improper access control Vendor: Amazon Web Services (AWS) Cause: TorchServe's gRPC ports were not bound to localhost by default, making them accessible from all interfaces Impact: Potential unauthorized access and data exposure","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  TorchServe is a flexible and easy-to-use tool for serving and scaling PyTorch models in production. In affected versions the two gRPC ports 7070 and 7071, are not bound to [localhost](http://localhost/) by default, so when TorchServe is launched, these two interfaces are bound to all interfaces. Cus  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: Improper access control Vendor: Amazon Web Services (AWS) Cause: TorchServe's gRPC ports were not bound to localhost by default, making them accessible from all interfaces Impact: Potential unauthorized access and data exposure","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  TorchServe is a flexible and easy-to-use tool for serving and scaling PyTorch models in production. In affected versions the two gRPC ports 7070 and 7071, are not bound to [localhost](http://localhost/) by default, so when TorchServe is launched, these two interfaces are bound to all interfaces. Cus  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: Improper access control Vendor: Amazon Web Services (AWS) Cause: TorchServe's gRPC ports were not bound to localhost by default, making them accessible from all interfaces Impact: Potential unauthorized access and data exposure",2024-07-19T02:15:14.777,8.2,HIGH,nvd,torchserve is a flexible and easytouse tool for serving and scaling pytorch models in production in affected versions the two grpc ports 7070 and 7071 are not bound to localhosthttplocalhost by default so when torchserve is launched these two interfaces are bound to all interfaces cus,"TorchServe is a flexible and easy-to-use tool for serving and scaling PyTorch models in production. In affected versions the two gRPC ports 7070 and 7071, are not bound to [localhost](http://localhost/) by default, so when TorchServe is launched, these two interfaces are bound to all interfaces. Cus","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: Improper access control Vendor: Amazon Web Services (AWS) Cause: TorchServe's gRPC ports were not bound to localhost by default, making them accessible from all interfaces Impact: Potential unauthorized access and data exposure"
CVE-2024-7246,"It's possible for a gRPC client communicating with a HTTP/2 proxy to poison the HPACK table between the proxy and the backend such that other clients see failed requests. It's also possible to use this vulnerability to leak other clients HTTP header keys, but not values.

This occurs because the err",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  It's possible for a gRPC client communicating with a HTTP/2 proxy to poison the HPACK table between the proxy and the backend such that other clients see failed requests. It's also possible to use this vulnerability to leak other clients HTTP header keys, but not values. This occurs because the err  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  It's possible for a gRPC client communicating with a HTTP/2 proxy to poison the HPACK table between the proxy and the backend such that other clients see failed requests. It's also possible to use this vulnerability to leak other clients HTTP header keys, but not values. This occurs because the err  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2024-08-06T11:16:07.587,,,nvd,"its possible for a grpc client communicating with a http2 proxy to poison the hpack table between the proxy and the backend such that other clients see failed requests its also possible to use this vulnerability to leak other clients http header keys but not values

this occurs because the err","It's possible for a gRPC client communicating with a HTTP/2 proxy to poison the HPACK table between the proxy and the backend such that other clients see failed requests. It's also possible to use this vulnerability to leak other clients HTTP header keys, but not values.

This occurs because the err",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2024-42487,"Cilium is a networking, observability, and security solution with an eBPF-based dataplane. In the 1.15 branch prior to 1.15.8 and the 1.16 branch prior to 1.16.1, Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification. In particular, reque",GRP,CWE-20,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20 Explanation: The vulnerability allows an attacker to read or modify data without proper authorization. This violates the principle of least privilege. Vendor: Cilium Cause: The Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification, leading to improper authorization checks. Impact: Unauthorized access to resources or data, potentially leading to data leakage or unauthorized modifications.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cilium is a networking, observability, and security solution with an eBPF-based dataplane. In the 1.15 branch prior to 1.15.8 and the 1.16 branch prior to 1.16.1, Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification. In particular, reque  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20 Explanation: The vulnerability allows an attacker to read or modify data without proper authorization. This violates the principle of least privilege. Vendor: Cilium Cause: The Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification, leading to improper authorization checks. Impact: Unauthorized access to resources or data, potentially leading to data leakage or unauthorized modifications.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cilium is a networking, observability, and security solution with an eBPF-based dataplane. In the 1.15 branch prior to 1.15.8 and the 1.16 branch prior to 1.16.1, Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification. In particular, reque  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20 Explanation: The vulnerability allows an attacker to read or modify data without proper authorization. This violates the principle of least privilege. Vendor: Cilium Cause: The Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification, leading to improper authorization checks. Impact: Unauthorized access to resources or data, potentially leading to data leakage or unauthorized modifications.",2024-08-15T21:15:16.997,4.0,MEDIUM,nvd,cilium is a networking observability and security solution with an ebpfbased dataplane in the 115 branch prior to 1158 and the 116 branch prior to 1161 gateway api httproutes and grpcroutes do not follow the match precedence specified in the gateway api specification in particular reque,"Cilium is a networking, observability, and security solution with an eBPF-based dataplane. In the 1.15 branch prior to 1.15.8 and the 1.16 branch prior to 1.16.1, Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification. In particular, reque","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20 Explanation: The vulnerability allows an attacker to read or modify data without proper authorization. This violates the principle of least privilege. Vendor: Cilium Cause: The Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification, leading to improper authorization checks. Impact: Unauthorized access to resources or data, potentially leading to data leakage or unauthorized modifications."
CVE-2024-44934,"In the Linux kernel, the following vulnerability has been resolved:

net: bridge: mcast: wait for previous gc cycles when removing port

syzbot hit a use-after-free[1] which is caused because the bridge doesn't
make sure that all previous garbage has been collected when removing a
port. What happens",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In the Linux kernel, the following vulnerability has been resolved: net: bridge: mcast: wait for previous gc cycles when removing port syzbot hit a use-after-free[1] which is caused because the bridge doesn't make sure that all previous garbage has been collected when removing a port. What happens  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In the Linux kernel, the following vulnerability has been resolved: net: bridge: mcast: wait for previous gc cycles when removing port syzbot hit a use-after-free[1] which is caused because the bridge doesn't make sure that all previous garbage has been collected when removing a port. What happens  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2024-08-26T11:15:05.593,7.8,HIGH,nvd,"in the linux kernel the following vulnerability has been resolved

net bridge mcast wait for previous gc cycles when removing port

syzbot hit a useafterfree1 which is caused because the bridge doesnt
make sure that all previous garbage has been collected when removing a
port what happens","In the Linux kernel, the following vulnerability has been resolved:

net: bridge: mcast: wait for previous gc cycles when removing port

syzbot hit a use-after-free[1] which is caused because the bridge doesn't
make sure that all previous garbage has been collected when removing a
port. What happens",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2024-8391,"In Eclipse Vert.x version 4.3.0 to 4.5.9, the gRPC server does not limit the maximum length of message payload (Maven GAV: io.vertx:vertx-grpc-server and io.vertx:vertx-grpc-client). 




This is fixed in the 4.5.10 version. 




Note this does not affect the Vert.x gRPC server based grpc-java and N",GRP,CWE-122,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Vert.x version 4.3.0 to 4.5.9, the gRPC server does not limit the maximum length of message payload (Maven GAV: io.vertx:vertx-grpc-server and io.vertx:vertx-grpc-client).","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Eclipse Vert.x version 4.3.0 to 4.5.9, the gRPC server does not limit the maximum length of message payload (Maven GAV: io.vertx:vertx-grpc-server and io.vertx:vertx-grpc-client).",2024-09-04T16:15:09.253,7.5,HIGH,nvd,"in eclipse vertx version 430 to 459 the grpc server does not limit the maximum length of message payload maven gav iovertxvertxgrpcserver and iovertxvertxgrpcclient 




this is fixed in the 4510 version 




note this does not affect the vertx grpc server based grpcjava and n","In Eclipse Vert.x version 4.3.0 to 4.5.9, the gRPC server does not limit the maximum length of message payload (Maven GAV: io.vertx:vertx-grpc-server and io.vertx:vertx-grpc-client). 




This is fixed in the 4.5.10 version. 




Note this does not affect the Vert.x gRPC server based grpc-java and N",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122
CVE-2024-8375,"There exists a use after free vulnerability in Reverb. Reverb supports the VARIANT datatype, which is supposed to represent an arbitrary object in C++. When a tensor proto of type VARIANT is unpacked, memory is first allocated to store the entire tensor, and a ctor is called on each instance. Afterw",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  There exists a use after free vulnerability in Reverb. Reverb supports the VARIANT datatype, which is supposed to represent an arbitrary object in C++. When a tensor proto of type VARIANT is unpacked, memory is first allocated to store the entire tensor, and a ctor is called on each instance. Afterw  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  There exists a use after free vulnerability in Reverb. Reverb supports the VARIANT datatype, which is supposed to represent an arbitrary object in C++. When a tensor proto of type VARIANT is unpacked, memory is first allocated to store the entire tensor, and a ctor is called on each instance. Afterw  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2024-09-19T16:15:06.023,,,nvd,there exists a use after free vulnerability in reverb reverb supports the variant datatype which is supposed to represent an arbitrary object in c when a tensor proto of type variant is unpacked memory is first allocated to store the entire tensor and a ctor is called on each instance afterw,"There exists a use after free vulnerability in Reverb. Reverb supports the VARIANT datatype, which is supposed to represent an arbitrary object in C++. When a tensor proto of type VARIANT is unpacked, memory is first allocated to store the entire tensor, and a ctor is called on each instance. Afterw",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2024-47609,Tonic is a native gRPC client & server implementation with async/await support. When using tonic::transport::Server there is a remote DoS attack that can cause the server to exit cleanly on accepting a TCP/TLS stream. This can be triggered by causing the accept call to error out with errors that wer,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Tonic is a native gRPC client & server implementation with async/await support. When using tonic::transport::Server there is a remote DoS attack that can cause the server to exit cleanly on accepting a TCP/TLS stream. This can be triggered by causing the accept call to error out with errors that wer  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Tonic is a native gRPC client & server implementation with async/await support. When using tonic::transport::Server there is a remote DoS attack that can cause the server to exit cleanly on accepting a TCP/TLS stream. This can be triggered by causing the accept call to error out with errors that wer  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2024-10-01T21:15:08.400,,,nvd,tonic is a native grpc client  server implementation with asyncawait support when using tonictransportserver there is a remote dos attack that can cause the server to exit cleanly on accepting a tcptls stream this can be triggered by causing the accept call to error out with errors that wer,Tonic is a native gRPC client & server implementation with async/await support. When using tonic::transport::Server there is a remote DoS attack that can cause the server to exit cleanly on accepting a TCP/TLS stream. This can be triggered by causing the accept call to error out with errors that wer,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2024-47616,Pomerium is an identity and context-aware access proxy. The Pomerium databroker service is responsible for managing all persistent Pomerium application state. Requests to the databroker service API are authorized by the presence of a JSON Web Token (JWT) signed by a key known by all Pomerium service,GRP,CWE-287,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-287 Explanation: Improper Authentication Vendor: Pomerium Cause: The Pomerium databroker service relies on JWT tokens for authorization, but the description doesn't mention proper validation of these tokens. Impact: Unauthorized access to sensitive application state data.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pomerium is an identity and context-aware access proxy. The Pomerium databroker service is responsible for managing all persistent Pomerium application state. Requests to the databroker service API are authorized by the presence of a JSON Web Token (JWT) signed by a key known by all Pomerium service  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-287 Explanation: Improper Authentication Vendor: Pomerium Cause: The Pomerium databroker service relies on JWT tokens for authorization, but the description doesn't mention proper validation of these tokens. Impact: Unauthorized access to sensitive application state data.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pomerium is an identity and context-aware access proxy. The Pomerium databroker service is responsible for managing all persistent Pomerium application state. Requests to the databroker service API are authorized by the presence of a JSON Web Token (JWT) signed by a key known by all Pomerium service  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-287 Explanation: Improper Authentication Vendor: Pomerium Cause: The Pomerium databroker service relies on JWT tokens for authorization, but the description doesn't mention proper validation of these tokens. Impact: Unauthorized access to sensitive application state data.",2024-10-02T22:15:03.010,6.8,MEDIUM,nvd,pomerium is an identity and contextaware access proxy the pomerium databroker service is responsible for managing all persistent pomerium application state requests to the databroker service api are authorized by the presence of a json web token jwt signed by a key known by all pomerium service,Pomerium is an identity and context-aware access proxy. The Pomerium databroker service is responsible for managing all persistent Pomerium application state. Requests to the databroker service API are authorized by the presence of a JSON Web Token (JWT) signed by a key known by all Pomerium service,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-287 Explanation: Improper Authentication Vendor: Pomerium Cause: The Pomerium databroker service relies on JWT tokens for authorization, but the description doesn't mention proper validation of these tokens. Impact: Unauthorized access to sensitive application state data."
CVE-2024-11407,There exists a denial of service through Data corruption in gRPC-C++ - gRPC-C++ servers with transmit zero copy enabled through the channel arg GRPC_ARG_TCP_TX_ZEROCOPY_ENABLED can experience data corruption issues. The data sent by the application may be corrupted before transmission over the netwo,GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause a denial of service by corrupting data before transmission through gRPC-C++ servers with transmit zero copy enabled. Vendor: gRPC-C++ Cause: Data sent by the application may be corrupted before transmission over the network when transmit zero copy is enabled in gRPC-C++ servers. Impact: The vulnerability allows an attacker to cause a denial of service through data corruption.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  There exists a denial of service through Data corruption in gRPC-C++ - gRPC-C++ servers with transmit zero copy enabled through the channel arg GRPC_ARG_TCP_TX_ZEROCOPY_ENABLED can experience data corruption issues. The data sent by the application may be corrupted before transmission over the netwo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause a denial of service by corrupting data before transmission through gRPC-C++ servers with transmit zero copy enabled. Vendor: gRPC-C++ Cause: Data sent by the application may be corrupted before transmission over the network when transmit zero copy is enabled in gRPC-C++ servers. Impact: The vulnerability allows an attacker to cause a denial of service through data corruption.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  There exists a denial of service through Data corruption in gRPC-C++ - gRPC-C++ servers with transmit zero copy enabled through the channel arg GRPC_ARG_TCP_TX_ZEROCOPY_ENABLED can experience data corruption issues. The data sent by the application may be corrupted before transmission over the netwo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause a denial of service by corrupting data before transmission through gRPC-C++ servers with transmit zero copy enabled. Vendor: gRPC-C++ Cause: Data sent by the application may be corrupted before transmission over the network when transmit zero copy is enabled in gRPC-C++ servers. Impact: The vulnerability allows an attacker to cause a denial of service through data corruption.",2024-11-26T17:15:22.830,,,nvd,there exists a denial of service through data corruption in grpcc  grpcc servers with transmit zero copy enabled through the channel arg grpc_arg_tcp_tx_zerocopy_enabled can experience data corruption issues the data sent by the application may be corrupted before transmission over the netwo,There exists a denial of service through Data corruption in gRPC-C++ - gRPC-C++ servers with transmit zero copy enabled through the channel arg GRPC_ARG_TCP_TX_ZEROCOPY_ENABLED can experience data corruption issues. The data sent by the application may be corrupted before transmission over the netwo,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause a denial of service by corrupting data before transmission through gRPC-C++ servers with transmit zero copy enabled. Vendor: gRPC-C++ Cause: Data sent by the application may be corrupted before transmission over the network when transmit zero copy is enabled in gRPC-C++ servers. Impact: The vulnerability allows an attacker to cause a denial of service through data corruption.
CVE-2025-1243,The Temporal api-go library prior to version 1.44.1 did not send `update response` information to Data Converter when the proxy package within the api-go module was used in a gRPC proxy prior to transmission. This resulted in information contained within the `update response` field not having Data C,GRP,CWE-22,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-22 Explanation: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') Vendor: Temporal Cause: The Temporal api-go library did not send 'update response' information to Data Converter when the proxy package within the api-go module was used in a gRPC proxy prior to transmission. Impact: Information contained within the 'update response' field was not transmitted to Data Converter, potentially exposing sensitive information.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Temporal api-go library prior to version 1.44.1 did not send update response information to Data Converter when the proxy package within the api-go module was used in a gRPC proxy prior to transmission. This resulted in information contained within the update response field not having Data C  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-22 Explanation: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') Vendor: Temporal Cause: The Temporal api-go library did not send 'update response' information to Data Converter when the proxy package within the api-go module was used in a gRPC proxy prior to transmission. Impact: Information contained within the 'update response' field was not transmitted to Data Converter, potentially exposing sensitive information.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Temporal api-go library prior to version 1.44.1 did not send update response information to Data Converter when the proxy package within the api-go module was used in a gRPC proxy prior to transmission. This resulted in information contained within the update response field not having Data C  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-22 Explanation: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') Vendor: Temporal Cause: The Temporal api-go library did not send 'update response' information to Data Converter when the proxy package within the api-go module was used in a gRPC proxy prior to transmission. Impact: Information contained within the 'update response' field was not transmitted to Data Converter, potentially exposing sensitive information.",2025-02-12T01:15:09.073,,,nvd,the temporal apigo library prior to version 1441 did not send update response information to data converter when the proxy package within the apigo module was used in a grpc proxy prior to transmission this resulted in information contained within the update response field not having data c,The Temporal api-go library prior to version 1.44.1 did not send `update response` information to Data Converter when the proxy package within the api-go module was used in a gRPC proxy prior to transmission. This resulted in information contained within the `update response` field not having Data C,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-22 Explanation: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') Vendor: Temporal Cause: The Temporal api-go library did not send 'update response' information to Data Converter when the proxy package within the api-go module was used in a gRPC proxy prior to transmission. Impact: Information contained within the 'update response' field was not transmitted to Data Converter, potentially exposing sensitive information."
CVE-2025-27097,"GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. When a user transforms on the root level or single source with transfor",GRP,CWE-22,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-22 Explanation: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') Vendor: GraphQL Mesh Cause: The vulnerability is caused by improper handling of path traversal when transforming data from a source. Impact: An attacker can read arbitrary files on the server, potentially leading to sensitive data exposure.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. When a user transforms on the root level or single source with transfor  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-22 Explanation: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') Vendor: GraphQL Mesh Cause: The vulnerability is caused by improper handling of path traversal when transforming data from a source. Impact: An attacker can read arbitrary files on the server, potentially leading to sensitive data exposure.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. When a user transforms on the root level or single source with transfor  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-22 Explanation: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') Vendor: GraphQL Mesh Cause: The vulnerability is caused by improper handling of path traversal when transforming data from a source. Impact: An attacker can read arbitrary files on the server, potentially leading to sensitive data exposure.",2025-02-20T21:15:26.227,7.5,HIGH,nvd,graphql mesh is a graphql federation framework and gateway for both graphql federation and nongraphql federation subgraphs nongraphql services such as rest and grpc and also databases such as mongodb mysql and postgresql when a user transforms on the root level or single source with transfor,"GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. When a user transforms on the root level or single source with transfor","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-22 Explanation: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') Vendor: GraphQL Mesh Cause: The vulnerability is caused by improper handling of path traversal when transforming data from a source. Impact: An attacker can read arbitrary files on the server, potentially leading to sensitive data exposure."
CVE-2025-27098,"GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. Missing check vulnerability in the static file handler allows any clien",GRP,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. Missing check vulnerability in the static file handler allows any clien  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. Missing check vulnerability in the static file handler allows any clien  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20",2025-02-20T21:15:26.370,5.8,MEDIUM,nvd,graphql mesh is a graphql federation framework and gateway for both graphql federation and nongraphql federation subgraphs nongraphql services such as rest and grpc and also databases such as mongodb mysql and postgresql missing check vulnerability in the static file handler allows any clien,"GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. Missing check vulnerability in the static file handler allows any clien",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20
CVE-2022-49215,"In the Linux kernel, the following vulnerability has been resolved:

xsk: Fix race at socket teardown

Fix a race in the xsk socket teardown code that can lead to a NULL pointer
dereference splat. The current xsk unbind code in xsk_unbind_dev() starts by
setting xs->state to XSK_UNBOUND, sets xs->de",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In the Linux kernel, the following vulnerability has been resolved: xsk: Fix race at socket teardown Fix a race in the xsk socket teardown code that can lead to a NULL pointer dereference splat. The current xsk unbind code in xsk_unbind_dev() starts by setting xs->state to XSK_UNBOUND, sets xs->de  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In the Linux kernel, the following vulnerability has been resolved: xsk: Fix race at socket teardown Fix a race in the xsk socket teardown code that can lead to a NULL pointer dereference splat. The current xsk unbind code in xsk_unbind_dev() starts by setting xs->state to XSK_UNBOUND, sets xs->de  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2025-02-26T07:00:58.590,,,nvd,"in the linux kernel the following vulnerability has been resolved

xsk fix race at socket teardown

fix a race in the xsk socket teardown code that can lead to a null pointer
dereference splat the current xsk unbind code in xsk_unbind_dev starts by
setting xsstate to xsk_unbound sets xsde","In the Linux kernel, the following vulnerability has been resolved:

xsk: Fix race at socket teardown

Fix a race in the xsk socket teardown code that can lead to a NULL pointer
dereference splat. The current xsk unbind code in xsk_unbind_dev() starts by
setting xs->state to XSK_UNBOUND, sets xs->de",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2025-1801,"A flaw was found in the Ansible aap-gateway. Concurrent requests handled by the gateway grpc service can result in concurrency issues due to race condition requests against the proxy. This issue potentially allows a less privileged user to obtain the JWT of a greater privileged user, enabling the se",GRP,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A flaw was found in the Ansible aap-gateway. Concurrent requests handled by the gateway grpc service can result in concurrency issues due to race condition requests against the proxy. This issue potentially allows a less privileged user to obtain the JWT of a greater privileged user, enabling the se  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A flaw was found in the Ansible aap-gateway. Concurrent requests handled by the gateway grpc service can result in concurrency issues due to race condition requests against the proxy. This issue potentially allows a less privileged user to obtain the JWT of a greater privileged user, enabling the se  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362",2025-03-03T15:15:16.500,8.1,HIGH,nvd,a flaw was found in the ansible aapgateway concurrent requests handled by the gateway grpc service can result in concurrency issues due to race condition requests against the proxy this issue potentially allows a less privileged user to obtain the jwt of a greater privileged user enabling the se,"A flaw was found in the Ansible aap-gateway. Concurrent requests handled by the gateway grpc service can result in concurrency issues due to race condition requests against the proxy. This issue potentially allows a less privileged user to obtain the JWT of a greater privileged user, enabling the se",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362