id,description,vendor,cwe_category,cwe_explanation,cause,impact,published,cvss_score,severity,source,description_without_punct,description_normalized,explanation
CVE-2009-0374,"Google Chrome 1.0.154.43 allows remote attackers to trick a user into visiting an arbitrary URL via an onclick action that moves a crafted element to the current mouse position, related to a ""Clickjacking"" vulnerability.  NOTE: a third party disputes the relevance of this issue, stating that ""every ",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 661,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome 1.0.154.43 allows remote attackers to trick a user into visiting an arbitrary URL via an onclick action that moves a crafted element to the current mouse position, related to a ""Clickjacking"" vulnerability. NOTE: a third party disputes the relevance of this issue, stating that ""every  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 661","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome 1.0.154.43 allows remote attackers to trick a user into visiting an arbitrary URL via an onclick action that moves a crafted element to the current mouse position, related to a ""Clickjacking"" vulnerability. NOTE: a third party disputes the relevance of this issue, stating that ""every  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 661",2009-01-30T21:30:00.217,,,nvd,google chrome 1015443 allows remote attackers to trick a user into visiting an arbitrary url via an onclick action that moves a crafted element to the current mouse position related to a clickjacking vulnerability  note a third party disputes the relevance of this issue stating that every,"Google Chrome 1.0.154.43 allows remote attackers to trick a user into visiting an arbitrary URL via an onclick action that moves a crafted element to the current mouse position, related to a ""Clickjacking"" vulnerability.  NOTE: a third party disputes the relevance of this issue, stating that ""every ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 661
CVE-2009-2071,"Google Chrome before 1.0.154.53 displays a cached certificate for a (1) 4xx or (2) 5xx CONNECT response page returned by a proxy server, which allows man-in-the-middle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request, and th",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 1.0.154.53 displays a cached certificate for a (1) 4xx or (2) 5xx CONNECT response page returned by a proxy server, which allows man-in-the-middle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request, and th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 1.0.154.53 displays a cached certificate for a (1) 4xx or (2) 5xx CONNECT response page returned by a proxy server, which allows man-in-the-middle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request, and th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310",2009-06-15T19:30:05.733,,,nvd,google chrome before 1015453 displays a cached certificate for a 1 4xx or 2 5xx connect response page returned by a proxy server which allows maninthemiddle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request and th,"Google Chrome before 1.0.154.53 displays a cached certificate for a (1) 4xx or (2) 5xx CONNECT response page returned by a proxy server, which allows man-in-the-middle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request, and th",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310
CVE-2009-2121,Buffer overflow in the browser kernel in Google Chrome before 2.0.172.33 allows remote HTTP servers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted response.,Google Chrome Browser,CWE-120,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in the browser kernel in Google Chrome before 2.0.172.33 allows remote HTTP servers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted response.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in the browser kernel in Google Chrome before 2.0.172.33 allows remote HTTP servers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted response.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2009-06-23T21:30:00.250,,,nvd,buffer overflow in the browser kernel in google chrome before 2017233 allows remote http servers to cause a denial of service application crash or possibly execute arbitrary code via a crafted response,Buffer overflow in the browser kernel in Google Chrome before 2.0.172.33 allows remote HTTP servers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted response.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2008-7246,"Google Chrome 0.2.149.29 and earlier allows remote attackers to cause a denial of service (unusable browser) by calling the window.print function in a loop, aka a ""printing DoS attack,"" possibly a related issue to CVE-2009-0821.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome 0.2.149.29 and earlier allows remote attackers to cause a denial of service (unusable browser) by calling the window.print function in a loop, aka a ""printing DoS attack,"" possibly a related issue to CVE-2009-0821.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome 0.2.149.29 and earlier allows remote attackers to cause a denial of service (unusable browser) by calling the window.print function in a loop, aka a ""printing DoS attack,"" possibly a related issue to CVE-2009-0821.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2009-09-18T22:30:00.483,,,nvd,google chrome 0214929 and earlier allows remote attackers to cause a denial of service unusable browser by calling the windowprint function in a loop aka a printing dos attack possibly a related issue to cve20090821,"Google Chrome 0.2.149.29 and earlier allows remote attackers to cause a denial of service (unusable browser) by calling the window.print function in a loop, aka a ""printing DoS attack,"" possibly a related issue to CVE-2009-0821.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2009-3931,"Incomplete blacklist vulnerability in browser/download/download_exe.cc in Google Chrome before 3.0.195.32 allows remote attackers to force the download of certain dangerous files via a ""Content-Disposition: attachment"" designation, as demonstrated by (1) .mht and (2) .mhtml files, which are automati",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incomplete blacklist vulnerability in browser/download/download_exe.cc in Google Chrome before 3.0.195.32 allows remote attackers to force the download of certain dangerous files via a ""Content-Disposition: attachment"" designation, as demonstrated by (1) .mht and (2) .mhtml files, which are automati  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incomplete blacklist vulnerability in browser/download/download_exe.cc in Google Chrome before 3.0.195.32 allows remote attackers to force the download of certain dangerous files via a ""Content-Disposition: attachment"" designation, as demonstrated by (1) .mht and (2) .mhtml files, which are automati  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502",2009-11-12T17:54:58.420,,,nvd,incomplete blacklist vulnerability in browserdownloaddownload_execc in google chrome before 3019532 allows remote attackers to force the download of certain dangerous files via a contentdisposition attachment designation as demonstrated by 1 mht and 2 mhtml files which are automati,"Incomplete blacklist vulnerability in browser/download/download_exe.cc in Google Chrome before 3.0.195.32 allows remote attackers to force the download of certain dangerous files via a ""Content-Disposition: attachment"" designation, as demonstrated by (1) .mht and (2) .mhtml files, which are automati",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 502
CVE-2010-0556,"browser/login/login_prompt.cc in Google Chrome before 4.0.249.89 populates an authentication dialog with credentials that were stored by Password Manager for a different web site, which allows user-assisted remote HTTP servers to obtain sensitive information via a URL that requires authentication, a",Google Chrome Browser,CWE-312,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312 Explanation: CWE-312 is a type of injection vulnerability where an attacker can manipulate a URL to cause the browser to authenticate with a different website than intended, potentially exposing stored credentials. Vendor: Google Cause: Google Chrome before 4.0.249.89 populated an authentication dialog with credentials stored by the Password Manager for a different website. Impact: User-assisted remote servers could obtain sensitive information through a URL that requires authentication.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/login/login_prompt.cc in Google Chrome before 4.0.249.89 populates an authentication dialog with credentials that were stored by Password Manager for a different web site, which allows user-assisted remote HTTP servers to obtain sensitive information via a URL that requires authentication, a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312 Explanation: CWE-312 is a type of injection vulnerability where an attacker can manipulate a URL to cause the browser to authenticate with a different website than intended, potentially exposing stored credentials. Vendor: Google Cause: Google Chrome before 4.0.249.89 populated an authentication dialog with credentials stored by the Password Manager for a different website. Impact: User-assisted remote servers could obtain sensitive information through a URL that requires authentication.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/login/login_prompt.cc in Google Chrome before 4.0.249.89 populates an authentication dialog with credentials that were stored by Password Manager for a different web site, which allows user-assisted remote HTTP servers to obtain sensitive information via a URL that requires authentication, a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312 Explanation: CWE-312 is a type of injection vulnerability where an attacker can manipulate a URL to cause the browser to authenticate with a different website than intended, potentially exposing stored credentials. Vendor: Google Cause: Google Chrome before 4.0.249.89 populated an authentication dialog with credentials stored by the Password Manager for a different website. Impact: User-assisted remote servers could obtain sensitive information through a URL that requires authentication.",2010-02-18T17:30:00.583,,,nvd,browserloginlogin_promptcc in google chrome before 4024989 populates an authentication dialog with credentials that were stored by password manager for a different web site which allows userassisted remote http servers to obtain sensitive information via a url that requires authentication a,"browser/login/login_prompt.cc in Google Chrome before 4.0.249.89 populates an authentication dialog with credentials that were stored by Password Manager for a different web site, which allows user-assisted remote HTTP servers to obtain sensitive information via a URL that requires authentication, a","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312 Explanation: CWE-312 is a type of injection vulnerability where an attacker can manipulate a URL to cause the browser to authenticate with a different website than intended, potentially exposing stored credentials. Vendor: Google Cause: Google Chrome before 4.0.249.89 populated an authentication dialog with credentials stored by the Password Manager for a different website. Impact: User-assisted remote servers could obtain sensitive information through a URL that requires authentication."
CVE-2010-0664,Stack consumption vulnerability in the ChildProcessSecurityPolicy::CanRequestURL function in browser/child_process_security_policy.cc in Google Chrome before 4.0.249.78 allows remote attackers to cause a denial of service (memory consumption and application crash) via a URL that specifies multiple p,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Stack consumption vulnerability in the ChildProcessSecurityPolicy::CanRequestURL function in browser/child_process_security_policy.cc in Google Chrome before 4.0.249.78 allows remote attackers to cause a denial of service (memory consumption and application crash) via a URL that specifies multiple p  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Stack consumption vulnerability in the ChildProcessSecurityPolicy::CanRequestURL function in browser/child_process_security_policy.cc in Google Chrome before 4.0.249.78 allows remote attackers to cause a denial of service (memory consumption and application crash) via a URL that specifies multiple p  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122",2010-02-18T18:00:01.130,,,nvd,stack consumption vulnerability in the childprocesssecuritypolicycanrequesturl function in browserchild_process_security_policycc in google chrome before 4024978 allows remote attackers to cause a denial of service memory consumption and application crash via a url that specifies multiple p,Stack consumption vulnerability in the ChildProcessSecurityPolicy::CanRequestURL function in browser/child_process_security_policy.cc in Google Chrome before 4.0.249.78 allows remote attackers to cause a denial of service (memory consumption and application crash) via a URL that specifies multiple p,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122
CVE-2010-1236,"The protocolIs function in platform/KURLGoogle.cpp in WebCore in WebKit before r55822, as used in Google Chrome before 4.1.249.1036 and Flock Browser 3.x before 3.0.0.4112, does not properly handle whitespace at the beginning of a URL, which allows remote attackers to conduct cross-site scripting (X",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The protocolIs function in platform/KURLGoogle.cpp in WebCore in WebKit before r55822, as used in Google Chrome before 4.1.249.1036 and Flock Browser 3.x before 3.0.0.4112, does not properly handle whitespace at the beginning of a URL, which allows remote attackers to conduct cross-site scripting (X  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The protocolIs function in platform/KURLGoogle.cpp in WebCore in WebKit before r55822, as used in Google Chrome before 4.1.249.1036 and Flock Browser 3.x before 3.0.0.4112, does not properly handle whitespace at the beginning of a URL, which allows remote attackers to conduct cross-site scripting (X  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2010-04-01T22:30:00.750,,,nvd,the protocolis function in platformkurlgooglecpp in webcore in webkit before r55822 as used in google chrome before 412491036 and flock browser 3x before 3004112 does not properly handle whitespace at the beginning of a url which allows remote attackers to conduct crosssite scripting x,"The protocolIs function in platform/KURLGoogle.cpp in WebCore in WebKit before r55822, as used in Google Chrome before 4.1.249.1036 and Flock Browser 3.x before 3.0.0.4112, does not properly handle whitespace at the beginning of a URL, which allows remote attackers to conduct cross-site scripting (X",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2010-2298,"browser/renderer_host/database_dispatcher_host.cc in Google Chrome before 5.0.375.70 on Linux does not properly handle ViewHostMsg_DatabaseOpenFile messages in chroot-based sandboxing, which allows remote attackers to bypass intended sandbox restrictions via vectors involving fchdir and chdir calls.",Google Chrome Browser,CWE-264,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/renderer_host/database_dispatcher_host.cc in Google Chrome before 5.0.375.70 on Linux does not properly handle ViewHostMsg_DatabaseOpenFile messages in chroot-based sandboxing, which allows remote attackers to bypass intended sandbox restrictions via vectors involving fchdir and chdir calls.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/renderer_host/database_dispatcher_host.cc in Google Chrome before 5.0.375.70 on Linux does not properly handle ViewHostMsg_DatabaseOpenFile messages in chroot-based sandboxing, which allows remote attackers to bypass intended sandbox restrictions via vectors involving fchdir and chdir calls.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264",2010-06-15T18:00:02.187,,,nvd,browserrenderer_hostdatabase_dispatcher_hostcc in google chrome before 5037570 on linux does not properly handle viewhostmsg_databaseopenfile messages in chrootbased sandboxing which allows remote attackers to bypass intended sandbox restrictions via vectors involving fchdir and chdir calls,"browser/renderer_host/database_dispatcher_host.cc in Google Chrome before 5.0.375.70 on Linux does not properly handle ViewHostMsg_DatabaseOpenFile messages in chroot-based sandboxing, which allows remote attackers to bypass intended sandbox restrictions via vectors involving fchdir and chdir calls.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264
CVE-2010-4575,"The ThemeInstalledInfoBarDelegate::Observe function in browser/extensions/theme_installed_infobar_delegate.cc in Google Chrome before 8.0.552.224 and Chrome OS before 8.0.552.343 does not properly handle incorrect tab interaction by an extension, which allows user-assisted remote attackers to cause ",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The ThemeInstalledInfoBarDelegate::Observe function in browser/extensions/theme_installed_infobar_delegate.cc in Google Chrome before 8.0.552.224 and Chrome OS before 8.0.552.343 does not properly handle incorrect tab interaction by an extension, which allows user-assisted remote attackers to cause  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The ThemeInstalledInfoBarDelegate::Observe function in browser/extensions/theme_installed_infobar_delegate.cc in Google Chrome before 8.0.552.224 and Chrome OS before 8.0.552.343 does not properly handle incorrect tab interaction by an extension, which allows user-assisted remote attackers to cause  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2010-12-22T01:00:03.063,,,nvd,the themeinstalledinfobardelegateobserve function in browserextensionstheme_installed_infobar_delegatecc in google chrome before 80552224 and chrome os before 80552343 does not properly handle incorrect tab interaction by an extension which allows userassisted remote attackers to cause,"The ThemeInstalledInfoBarDelegate::Observe function in browser/extensions/theme_installed_infobar_delegate.cc in Google Chrome before 8.0.552.224 and Chrome OS before 8.0.552.343 does not properly handle incorrect tab interaction by an extension, which allows user-assisted remote attackers to cause ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2010-4576,"browser/worker_host/message_port_dispatcher.cc in Google Chrome before 8.0.552.224 and Chrome OS before 8.0.552.343 does not properly handle certain postMessage calls, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via crafted JavaScript c",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/worker_host/message_port_dispatcher.cc in Google Chrome before 8.0.552.224 and Chrome OS before 8.0.552.343 does not properly handle certain postMessage calls, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via crafted JavaScript c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/worker_host/message_port_dispatcher.cc in Google Chrome before 8.0.552.224 and Chrome OS before 8.0.552.343 does not properly handle certain postMessage calls, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via crafted JavaScript c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2010-12-22T01:00:03.110,,,nvd,browserworker_hostmessage_port_dispatchercc in google chrome before 80552224 and chrome os before 80552343 does not properly handle certain postmessage calls which allows remote attackers to cause a denial of service null pointer dereference and application crash via crafted javascript c,"browser/worker_host/message_port_dispatcher.cc in Google Chrome before 8.0.552.224 and Chrome OS before 8.0.552.343 does not properly handle certain postMessage calls, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via crafted JavaScript c",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2011-2358,"Google Chrome before 13.0.782.107 does not ensure that extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 13.0.782.107 does not ensure that extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 13.0.782.107 does not ensure that extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345",2011-08-03T00:55:01.190,,,nvd,google chrome before 130782107 does not ensure that extension installations are confirmed by a browser dialog which makes it easier for remote attackers to modify the products functionality via a trojan horse extension,"Google Chrome before 13.0.782.107 does not ensure that extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345
CVE-2011-2783,"Google Chrome before 13.0.782.107 does not ensure that developer-mode NPAPI extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 13.0.782.107 does not ensure that developer-mode NPAPI extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 13.0.782.107 does not ensure that developer-mode NPAPI extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345",2011-08-03T00:55:01.737,,,nvd,google chrome before 130782107 does not ensure that developermode npapi extension installations are confirmed by a browser dialog which makes it easier for remote attackers to modify the products functionality via a trojan horse extension,"Google Chrome before 13.0.782.107 does not ensure that developer-mode NPAPI extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345
CVE-2011-4691,"Google Chrome 15.0.874.121 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome 15.0.874.121 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome 15.0.874.121 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2011-12-07T19:55:03.157,,,nvd,google chrome 150874121 and earlier does not prevent capture of data about the times of same origin policy violations during iframe loading attempts which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted javascript code,"Google Chrome 15.0.874.121 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2011-4692,"WebKit, as used in Apple Safari 5.1.1 and earlier and Google Chrome 15 and earlier, does not prevent capture of data about the time required for image loading, which makes it easier for remote attackers to determine whether an image exists in the browser cache via crafted JavaScript code, as demonst",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  WebKit, as used in Apple Safari 5.1.1 and earlier and Google Chrome 15 and earlier, does not prevent capture of data about the time required for image loading, which makes it easier for remote attackers to determine whether an image exists in the browser cache via crafted JavaScript code, as demonst  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  WebKit, as used in Apple Safari 5.1.1 and earlier and Google Chrome 15 and earlier, does not prevent capture of data about the time required for image loading, which makes it easier for remote attackers to determine whether an image exists in the browser cache via crafted JavaScript code, as demonst  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2011-12-07T19:55:03.267,,,nvd,webkit as used in apple safari 511 and earlier and google chrome 15 and earlier does not prevent capture of data about the time required for image loading which makes it easier for remote attackers to determine whether an image exists in the browser cache via crafted javascript code as demonst,"WebKit, as used in Apple Safari 5.1.1 and earlier and Google Chrome 15 and earlier, does not prevent capture of data about the time required for image loading, which makes it easier for remote attackers to determine whether an image exists in the browser cache via crafted JavaScript code, as demonst",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2011-3055,"The browser native UI in Google Chrome before 17.0.963.83 does not require user confirmation before an unpacked extension installation, which allows user-assisted remote attackers to have an unspecified impact via a crafted extension.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser native UI in Google Chrome before 17.0.963.83 does not require user confirmation before an unpacked extension installation, which allows user-assisted remote attackers to have an unspecified impact via a crafted extension.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser native UI in Google Chrome before 17.0.963.83 does not require user confirmation before an unpacked extension installation, which allows user-assisted remote attackers to have an unspecified impact via a crafted extension.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345",2012-03-22T16:55:01.457,,,nvd,the browser native ui in google chrome before 17096383 does not require user confirmation before an unpacked extension installation which allows userassisted remote attackers to have an unspecified impact via a crafted extension,"The browser native UI in Google Chrome before 17.0.963.83 does not require user confirmation before an unpacked extension installation, which allows user-assisted remote attackers to have an unspecified impact via a crafted extension.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345
CVE-2011-3083,"browser/profiles/profile_impl_io_data.cc in Google Chrome before 19.0.1084.46 does not properly handle a malformed ftp URL in the SRC attribute of a VIDEO element, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted web page.",Google Chrome Browser,CWE-476,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/profiles/profile_impl_io_data.cc in Google Chrome before 19.0.1084.46 does not properly handle a malformed ftp URL in the SRC attribute of a VIDEO element, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted web page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/profiles/profile_impl_io_data.cc in Google Chrome before 19.0.1084.46 does not properly handle a malformed ftp URL in the SRC attribute of a VIDEO element, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted web page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2012-05-16T00:55:01.247,,,nvd,browserprofilesprofile_impl_io_datacc in google chrome before 190108446 does not properly handle a malformed ftp url in the src attribute of a video element which allows remote attackers to cause a denial of service null pointer dereference and application crash via a crafted web page,"browser/profiles/profile_impl_io_data.cc in Google Chrome before 19.0.1084.46 does not properly handle a malformed ftp URL in the SRC attribute of a VIDEO element, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted web page.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2011-3108,Use-after-free vulnerability in Google Chrome before 19.0.1084.52 allows remote attackers to execute arbitrary code via vectors related to the browser cache.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in Google Chrome before 19.0.1084.52 allows remote attackers to execute arbitrary code via vectors related to the browser cache.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in Google Chrome before 19.0.1084.52 allows remote attackers to execute arbitrary code via vectors related to the browser cache.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2012-05-24T18:55:01.213,,,nvd,useafterfree vulnerability in google chrome before 190108452 allows remote attackers to execute arbitrary code via vectors related to the browser cache,Use-after-free vulnerability in Google Chrome before 19.0.1084.52 allows remote attackers to execute arbitrary code via vectors related to the browser cache.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2011-1398,"The sapi_header_op function in main/SAPI.c in PHP before 5.3.11 and 5.4.x before 5.4.0RC2 does not check for %0D sequences (aka carriage return characters), which allows remote attackers to bypass an HTTP response-splitting protection mechanism via a crafted URL, related to improper interaction betw",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The sapi_header_op function in main/SAPI.c in PHP before 5.3.11 and 5.4.x before 5.4.0RC2 does not check for %0D sequences (aka carriage return characters), which allows remote attackers to bypass an HTTP response-splitting protection mechanism via a crafted URL, related to improper interaction betw  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The sapi_header_op function in main/SAPI.c in PHP before 5.3.11 and 5.4.x before 5.4.0RC2 does not check for %0D sequences (aka carriage return characters), which allows remote attackers to bypass an HTTP response-splitting protection mechanism via a crafted URL, related to improper interaction betw  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2012-08-30T22:55:02.497,,,nvd,the sapi_header_op function in mainsapic in php before 5311 and 54x before 540rc2 does not check for 0d sequences aka carriage return characters which allows remote attackers to bypass an http responsesplitting protection mechanism via a crafted url related to improper interaction betw,"The sapi_header_op function in main/SAPI.c in PHP before 5.3.11 and 5.4.x before 5.4.0RC2 does not check for %0D sequences (aka carriage return characters), which allows remote attackers to bypass an HTTP response-splitting protection mechanism via a crafted URL, related to improper interaction betw",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2012-4388,"The sapi_header_op function in main/SAPI.c in PHP 5.4.0RC2 through 5.4.0 does not properly determine a pointer during checks for %0D sequences (aka carriage return characters), which allows remote attackers to bypass an HTTP response-splitting protection mechanism via a crafted URL, related to impro",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The sapi_header_op function in main/SAPI.c in PHP 5.4.0RC2 through 5.4.0 does not properly determine a pointer during checks for %0D sequences (aka carriage return characters), which allows remote attackers to bypass an HTTP response-splitting protection mechanism via a crafted URL, related to impro  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The sapi_header_op function in main/SAPI.c in PHP 5.4.0RC2 through 5.4.0 does not properly determine a pointer during checks for %0D sequences (aka carriage return characters), which allows remote attackers to bypass an HTTP response-splitting protection mechanism via a crafted URL, related to impro  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2012-09-07T22:55:02.883,,,nvd,the sapi_header_op function in mainsapic in php 540rc2 through 540 does not properly determine a pointer during checks for 0d sequences aka carriage return characters which allows remote attackers to bypass an http responsesplitting protection mechanism via a crafted url related to impro,"The sapi_header_op function in main/SAPI.c in PHP 5.4.0RC2 through 5.4.0 does not properly determine a pointer during checks for %0D sequences (aka carriage return characters), which allows remote attackers to bypass an HTTP response-splitting protection mechanism via a crafted URL, related to impro",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2013-0903,Use-after-free vulnerability in Google Chrome before 25.0.1364.152 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of browser navigation.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in Google Chrome before 25.0.1364.152 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of browser navigation.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in Google Chrome before 25.0.1364.152 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of browser navigation.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2013-03-05T21:55:11.277,,,nvd,useafterfree vulnerability in google chrome before 2501364152 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of browser navigation,Use-after-free vulnerability in Google Chrome before 25.0.1364.152 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of browser navigation.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2013-0910,"Google Chrome before 25.0.1364.152 does not properly manage the interaction between the browser process and renderer processes during authorization of the loading of a plug-in, which makes it easier for remote attackers to bypass intended access restrictions via vectors involving a blocked plug-in.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 25.0.1364.152 does not properly manage the interaction between the browser process and renderer processes during authorization of the loading of a plug-in, which makes it easier for remote attackers to bypass intended access restrictions via vectors involving a blocked plug-in.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 25.0.1364.152 does not properly manage the interaction between the browser process and renderer processes during authorization of the loading of a plug-in, which makes it easier for remote attackers to bypass intended access restrictions via vectors involving a blocked plug-in.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264",2013-03-05T21:55:23.690,,,nvd,google chrome before 2501364152 does not properly manage the interaction between the browser process and renderer processes during authorization of the loading of a plugin which makes it easier for remote attackers to bypass intended access restrictions via vectors involving a blocked plugin,"Google Chrome before 25.0.1364.152 does not properly manage the interaction between the browser process and renderer processes during authorization of the loading of a plug-in, which makes it easier for remote attackers to bypass intended access restrictions via vectors involving a blocked plug-in.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264
CVE-2013-2876,"browser/extensions/api/tabs/tabs_api.cc in Google Chrome before 28.0.1500.71 does not properly enforce restrictions on the capture of screenshots by extensions, which allows remote attackers to obtain sensitive information about the content of a previous page via vectors involving an interstitial pa",Google Chrome Browser,CWE-200,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/extensions/api/tabs/tabs_api.cc in Google Chrome before 28.0.1500.71 does not properly enforce restrictions on the capture of screenshots by extensions, which allows remote attackers to obtain sensitive information about the content of a previous page via vectors involving an interstitial pa  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/extensions/api/tabs/tabs_api.cc in Google Chrome before 28.0.1500.71 does not properly enforce restrictions on the capture of screenshots by extensions, which allows remote attackers to obtain sensitive information about the content of a previous page via vectors involving an interstitial pa  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200",2013-07-10T10:55:02.170,,,nvd,browserextensionsapitabstabs_apicc in google chrome before 280150071 does not properly enforce restrictions on the capture of screenshots by extensions which allows remote attackers to obtain sensitive information about the content of a previous page via vectors involving an interstitial pa,"browser/extensions/api/tabs/tabs_api.cc in Google Chrome before 28.0.1500.71 does not properly enforce restrictions on the capture of screenshots by extensions, which allows remote attackers to obtain sensitive information about the content of a previous page via vectors involving an interstitial pa",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200
CVE-2013-2914,Use-after-free vulnerability in the color-chooser dialog in Google Chrome before 30.0.1599.66 on Windows allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to color_chooser_dialog.cc and color_chooser_win.cc in browser/ui/views/.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the color-chooser dialog in Google Chrome before 30.0.1599.66 on Windows allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to color_chooser_dialog.cc and color_chooser_win.cc in browser/ui/views/.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the color-chooser dialog in Google Chrome before 30.0.1599.66 on Windows allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to color_chooser_dialog.cc and color_chooser_win.cc in browser/ui/views/.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2013-10-02T10:35:35.167,,,nvd,useafterfree vulnerability in the colorchooser dialog in google chrome before 300159966 on windows allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to color_chooser_dialogcc and color_chooser_wincc in browseruiviews,Use-after-free vulnerability in the color-chooser dialog in Google Chrome before 30.0.1599.66 on Windows allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to color_chooser_dialog.cc and color_chooser_win.cc in browser/ui/views/.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2013-6634,"The OneClickSigninHelper::ShowInfoBarIfPossible function in browser/ui/sync/one_click_signin_helper.cc in Google Chrome before 31.0.1650.63 uses an incorrect URL during realm validation, which allows remote attackers to conduct session fixation attacks and hijack web sessions by triggering improper ",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The OneClickSigninHelper::ShowInfoBarIfPossible function in browser/ui/sync/one_click_signin_helper.cc in Google Chrome before 31.0.1650.63 uses an incorrect URL during realm validation, which allows remote attackers to conduct session fixation attacks and hijack web sessions by triggering improper  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The OneClickSigninHelper::ShowInfoBarIfPossible function in browser/ui/sync/one_click_signin_helper.cc in Google Chrome before 31.0.1650.63 uses an incorrect URL during realm validation, which allows remote attackers to conduct session fixation attacks and hijack web sessions by triggering improper  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522",2013-12-07T00:55:03.820,,,nvd,the oneclicksigninhelpershowinfobarifpossible function in browseruisyncone_click_signin_helpercc in google chrome before 310165063 uses an incorrect url during realm validation which allows remote attackers to conduct session fixation attacks and hijack web sessions by triggering improper,"The OneClickSigninHelper::ShowInfoBarIfPossible function in browser/ui/sync/one_click_signin_helper.cc in Google Chrome before 31.0.1650.63 uses an incorrect URL during realm validation, which allows remote attackers to conduct session fixation attacks and hijack web sessions by triggering improper ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522
CVE-2013-6643,The OneClickSigninBubbleView::WindowClosing function in browser/ui/views/sync/one_click_signin_bubble_view.cc in Google Chrome before 32.0.1700.76 on Windows and before 32.0.1700.77 on Mac OS X and Linux allows attackers to trigger a sync with an arbitrary Google account by leveraging improper handl,Google Chrome Browser,CWE-284,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The OneClickSigninBubbleView::WindowClosing function in browser/ui/views/sync/one_click_signin_bubble_view.cc in Google Chrome before 32.0.1700.76 on Windows and before 32.0.1700.77 on Mac OS X and Linux allows attackers to trigger a sync with an arbitrary Google account by leveraging improper handl  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The OneClickSigninBubbleView::WindowClosing function in browser/ui/views/sync/one_click_signin_bubble_view.cc in Google Chrome before 32.0.1700.76 on Windows and before 32.0.1700.77 on Mac OS X and Linux allows attackers to trigger a sync with an arbitrary Google account by leveraging improper handl  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284",2014-01-16T12:17:26.313,,,nvd,the oneclicksigninbubbleviewwindowclosing function in browseruiviewssyncone_click_signin_bubble_viewcc in google chrome before 320170076 on windows and before 320170077 on mac os x and linux allows attackers to trigger a sync with an arbitrary google account by leveraging improper handl,The OneClickSigninBubbleView::WindowClosing function in browser/ui/views/sync/one_click_signin_bubble_view.cc in Google Chrome before 32.0.1700.76 on Windows and before 32.0.1700.77 on Mac OS X and Linux allows attackers to trigger a sync with an arbitrary Google account by leveraging improper handl,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284
CVE-2014-1732,Use-after-free vulnerability in browser/ui/views/speech_recognition_bubble_views.cc in Google Chrome before 34.0.1847.131 on Windows and OS X and before 34.0.1847.132 on Linux allows remote attackers to cause a denial of service or possibly have unspecified other impact via an INPUT element that tri,Google Chrome Browser,CWE-416,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in browser/ui/views/speech_recognition_bubble_views.cc in Google Chrome before 34.0.1847.131 on Windows and OS X and before 34.0.1847.132 on Linux allows remote attackers to cause a denial of service or possibly have unspecified other impact via an INPUT element that tri  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in browser/ui/views/speech_recognition_bubble_views.cc in Google Chrome before 34.0.1847.131 on Windows and OS X and before 34.0.1847.132 on Linux allows remote attackers to cause a denial of service or possibly have unspecified other impact via an INPUT element that tri  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416",2014-04-26T10:55:05.513,,,nvd,useafterfree vulnerability in browseruiviewsspeech_recognition_bubble_viewscc in google chrome before 3401847131 on windows and os x and before 3401847132 on linux allows remote attackers to cause a denial of service or possibly have unspecified other impact via an input element that tri,Use-after-free vulnerability in browser/ui/views/speech_recognition_bubble_views.cc in Google Chrome before 34.0.1847.131 on Windows and OS X and before 34.0.1847.132 on Linux allows remote attackers to cause a denial of service or possibly have unspecified other impact via an INPUT element that tri,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416
CVE-2014-3172,"The Debugger extension API in browser/extensions/api/debugger/debugger_api.cc in Google Chrome before 37.0.2062.94 does not validate a tab's URL before an attach operation, which allows remote attackers to bypass intended access limitations via an extension that uses a restricted URL, as demonstrate",Google Chrome Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Debugger extension API in browser/extensions/api/debugger/debugger_api.cc in Google Chrome before 37.0.2062.94 does not validate a tab's URL before an attach operation, which allows remote attackers to bypass intended access limitations via an extension that uses a restricted URL, as demonstrate  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Debugger extension API in browser/extensions/api/debugger/debugger_api.cc in Google Chrome before 37.0.2062.94 does not validate a tab's URL before an attach operation, which allows remote attackers to bypass intended access limitations via an extension that uses a restricted URL, as demonstrate  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2014-08-27T01:55:05.697,,,nvd,the debugger extension api in browserextensionsapidebuggerdebugger_apicc in google chrome before 370206294 does not validate a tabs url before an attach operation which allows remote attackers to bypass intended access limitations via an extension that uses a restricted url as demonstrate,"The Debugger extension API in browser/extensions/api/debugger/debugger_api.cc in Google Chrome before 37.0.2062.94 does not validate a tab's URL before an attach operation, which allows remote attackers to bypass intended access limitations via an extension that uses a restricted URL, as demonstrate",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2014-3193,"The SessionService::GetLastSession function in browser/sessions/session_service.cc in Google Chrome before 38.0.2125.101 allows remote attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact via vectors that leverage ""type confusion"" for callback processing.",Google Chrome Browser,CWE-416,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: CWE-416: Use After Free Vendor: Google Cause: The SessionService::GetLastSession function in browser/sessions/session_service.cc mishandles memory after freeing it, leading to type confusion during callback processing. Impact: A remote attacker could cause a denial of service (use-after-free) or potentially unspecified other impact.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SessionService::GetLastSession function in browser/sessions/session_service.cc in Google Chrome before 38.0.2125.101 allows remote attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact via vectors that leverage ""type confusion"" for callback processing.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: CWE-416: Use After Free Vendor: Google Cause: The SessionService::GetLastSession function in browser/sessions/session_service.cc mishandles memory after freeing it, leading to type confusion during callback processing. Impact: A remote attacker could cause a denial of service (use-after-free) or potentially unspecified other impact.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SessionService::GetLastSession function in browser/sessions/session_service.cc in Google Chrome before 38.0.2125.101 allows remote attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact via vectors that leverage ""type confusion"" for callback processing.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: CWE-416: Use After Free Vendor: Google Cause: The SessionService::GetLastSession function in browser/sessions/session_service.cc mishandles memory after freeing it, leading to type confusion during callback processing. Impact: A remote attacker could cause a denial of service (use-after-free) or potentially unspecified other impact.",2014-10-08T10:55:06.503,,,nvd,the sessionservicegetlastsession function in browsersessionssession_servicecc in google chrome before 3802125101 allows remote attackers to cause a denial of service useafterfree or possibly have unspecified other impact via vectors that leverage type confusion for callback processing,"The SessionService::GetLastSession function in browser/sessions/session_service.cc in Google Chrome before 38.0.2125.101 allows remote attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact via vectors that leverage ""type confusion"" for callback processing.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: CWE-416: Use After Free Vendor: Google Cause: The SessionService::GetLastSession function in browser/sessions/session_service.cc mishandles memory after freeing it, leading to type confusion during callback processing. Impact: A remote attacker could cause a denial of service (use-after-free) or potentially unspecified other impact."
CVE-2014-7935,Use-after-free vulnerability in browser/speech/tts_message_filter.cc in the Speech implementation in Google Chrome before 40.0.2214.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving utterances from a closed tab.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in browser/speech/tts_message_filter.cc in the Speech implementation in Google Chrome before 40.0.2214.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving utterances from a closed tab.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in browser/speech/tts_message_filter.cc in the Speech implementation in Google Chrome before 40.0.2214.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving utterances from a closed tab.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2015-01-22T22:59:16.523,,,nvd,useafterfree vulnerability in browserspeechtts_message_filtercc in the speech implementation in google chrome before 400221491 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving utterances from a closed tab,Use-after-free vulnerability in browser/speech/tts_message_filter.cc in the Speech implementation in Google Chrome before 40.0.2214.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving utterances from a closed tab.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2014-7936,Use-after-free vulnerability in the ZoomBubbleView::Close function in browser/ui/views/location_bar/zoom_bubble_view.cc in the Views implementation in Google Chrome before 40.0.2214.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted docume,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the ZoomBubbleView::Close function in browser/ui/views/location_bar/zoom_bubble_view.cc in the Views implementation in Google Chrome before 40.0.2214.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted docume  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the ZoomBubbleView::Close function in browser/ui/views/location_bar/zoom_bubble_view.cc in the Views implementation in Google Chrome before 40.0.2214.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted docume  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2015-01-22T22:59:17.460,,,nvd,useafterfree vulnerability in the zoombubbleviewclose function in browseruiviewslocation_barzoom_bubble_viewcc in the views implementation in google chrome before 400221491 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted docume,Use-after-free vulnerability in the ZoomBubbleView::Close function in browser/ui/views/location_bar/zoom_bubble_view.cc in the Views implementation in Google Chrome before 40.0.2214.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted docume,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2014-9648,"components/navigation_interception/intercept_navigation_resource_throttle.cc in Google Chrome before 40.0.2214.91 on Android does not properly restrict use of intent: URLs to open an application after navigation to a web site, which allows remote attackers to cause a denial of service (loss of brows",Google Chrome Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  components/navigation_interception/intercept_navigation_resource_throttle.cc in Google Chrome before 40.0.2214.91 on Android does not properly restrict use of intent: URLs to open an application after navigation to a web site, which allows remote attackers to cause a denial of service (loss of brows  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  components/navigation_interception/intercept_navigation_resource_throttle.cc in Google Chrome before 40.0.2214.91 on Android does not properly restrict use of intent: URLs to open an application after navigation to a web site, which allows remote attackers to cause a denial of service (loss of brows  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20",2015-01-27T20:01:43.627,,,nvd,componentsnavigation_interceptionintercept_navigation_resource_throttlecc in google chrome before 400221491 on android does not properly restrict use of intent urls to open an application after navigation to a web site which allows remote attackers to cause a denial of service loss of brows,"components/navigation_interception/intercept_navigation_resource_throttle.cc in Google Chrome before 40.0.2214.91 on Android does not properly restrict use of intent: URLs to open an application after navigation to a web site, which allows remote attackers to cause a denial of service (loss of brows",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20
CVE-2015-1226,"The DebuggerFunction::InitAgentHost function in browser/extensions/api/debugger/debugger_api.cc in Google Chrome before 41.0.2272.76 does not properly restrict what URLs are available as debugger targets, which allows remote attackers to bypass intended access restrictions via a crafted extension.",Google Chrome Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The DebuggerFunction::InitAgentHost function in browser/extensions/api/debugger/debugger_api.cc in Google Chrome before 41.0.2272.76 does not properly restrict what URLs are available as debugger targets, which allows remote attackers to bypass intended access restrictions via a crafted extension.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The DebuggerFunction::InitAgentHost function in browser/extensions/api/debugger/debugger_api.cc in Google Chrome before 41.0.2272.76 does not properly restrict what URLs are available as debugger targets, which allows remote attackers to bypass intended access restrictions via a crafted extension.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20",2015-03-09T00:59:19.637,,,nvd,the debuggerfunctioninitagenthost function in browserextensionsapidebuggerdebugger_apicc in google chrome before 410227276 does not properly restrict what urls are available as debugger targets which allows remote attackers to bypass intended access restrictions via a crafted extension,"The DebuggerFunction::InitAgentHost function in browser/extensions/api/debugger/debugger_api.cc in Google Chrome before 41.0.2272.76 does not properly restrict what URLs are available as debugger targets, which allows remote attackers to bypass intended access restrictions via a crafted extension.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20
CVE-2015-1245,Use-after-free vulnerability in the OpenPDFInReaderView::Update function in browser/ui/views/location_bar/open_pdf_in_reader_view.cc in Google Chrome before 41.0.2272.76 might allow user-assisted remote attackers to cause a denial of service (heap memory corruption) or possibly have unspecified othe,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the OpenPDFInReaderView::Update function in browser/ui/views/location_bar/open_pdf_in_reader_view.cc in Google Chrome before 41.0.2272.76 might allow user-assisted remote attackers to cause a denial of service (heap memory corruption) or possibly have unspecified othe  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the OpenPDFInReaderView::Update function in browser/ui/views/location_bar/open_pdf_in_reader_view.cc in Google Chrome before 41.0.2272.76 might allow user-assisted remote attackers to cause a denial of service (heap memory corruption) or possibly have unspecified othe  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2015-04-19T10:59:08.617,,,nvd,useafterfree vulnerability in the openpdfinreaderviewupdate function in browseruiviewslocation_baropen_pdf_in_reader_viewcc in google chrome before 410227276 might allow userassisted remote attackers to cause a denial of service heap memory corruption or possibly have unspecified othe,Use-after-free vulnerability in the OpenPDFInReaderView::Update function in browser/ui/views/location_bar/open_pdf_in_reader_view.cc in Google Chrome before 41.0.2272.76 might allow user-assisted remote attackers to cause a denial of service (heap memory corruption) or possibly have unspecified othe,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2015-1247,"The SearchEngineTabHelper::OnPageHasOSDD function in browser/ui/search_engines/search_engine_tab_helper.cc in Google Chrome before 42.0.2311.90 does not prevent use of a file: URL for an OpenSearch descriptor XML document, which might allow remote attackers to obtain sensitive information from local",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SearchEngineTabHelper::OnPageHasOSDD function in browser/ui/search_engines/search_engine_tab_helper.cc in Google Chrome before 42.0.2311.90 does not prevent use of a file: URL for an OpenSearch descriptor XML document, which might allow remote attackers to obtain sensitive information from local  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SearchEngineTabHelper::OnPageHasOSDD function in browser/ui/search_engines/search_engine_tab_helper.cc in Google Chrome before 42.0.2311.90 does not prevent use of a file: URL for an OpenSearch descriptor XML document, which might allow remote attackers to obtain sensitive information from local  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-04-19T10:59:10.537,,,nvd,the searchenginetabhelperonpagehasosdd function in browseruisearch_enginessearch_engine_tab_helpercc in google chrome before 420231190 does not prevent use of a file url for an opensearch descriptor xml document which might allow remote attackers to obtain sensitive information from local,"The SearchEngineTabHelper::OnPageHasOSDD function in browser/ui/search_engines/search_engine_tab_helper.cc in Google Chrome before 42.0.2311.90 does not prevent use of a file: URL for an OpenSearch descriptor XML document, which might allow remote attackers to obtain sensitive information from local",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-3334,"browser/ui/website_settings/website_settings.cc in Google Chrome before 42.0.2311.90 does not always display ""Media: Allowed by you"" in a Permissions table after the user has granted camera permission to a web site, which might make it easier for user-assisted remote attackers to obtain sensitive vi",Google Chrome Browser,CWE-311,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-311,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/ui/website_settings/website_settings.cc in Google Chrome before 42.0.2311.90 does not always display ""Media: Allowed by you"" in a Permissions table after the user has granted camera permission to a web site, which might make it easier for user-assisted remote attackers to obtain sensitive vi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-311","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/ui/website_settings/website_settings.cc in Google Chrome before 42.0.2311.90 does not always display ""Media: Allowed by you"" in a Permissions table after the user has granted camera permission to a web site, which might make it easier for user-assisted remote attackers to obtain sensitive vi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-311",2015-04-19T10:59:14.223,,,nvd,browseruiwebsite_settingswebsite_settingscc in google chrome before 420231190 does not always display media allowed by you in a permissions table after the user has granted camera permission to a web site which might make it easier for userassisted remote attackers to obtain sensitive vi,"browser/ui/website_settings/website_settings.cc in Google Chrome before 42.0.2311.90 does not always display ""Media: Allowed by you"" in a Permissions table after the user has granted camera permission to a web site, which might make it easier for user-assisted remote attackers to obtain sensitive vi",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-311
CVE-2015-6583,"Google Chrome before 45.0.2454.85 does not display a location bar for a hosted app's window after navigation away from the installation site, which might make it easier for remote attackers to spoof content via a crafted app, related to browser.cc and hosted_app_browser_controller.cc.",Google Chrome Browser,CWE-345,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 45.0.2454.85 does not display a location bar for a hosted app's window after navigation away from the installation site, which might make it easier for remote attackers to spoof content via a crafted app, related to browser.cc and hosted_app_browser_controller.cc.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Google Chrome before 45.0.2454.85 does not display a location bar for a hosted app's window after navigation away from the installation site, which might make it easier for remote attackers to spoof content via a crafted app, related to browser.cc and hosted_app_browser_controller.cc.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-345",2015-09-03T22:59:16.703,,,nvd,google chrome before 450245485 does not display a location bar for a hosted apps window after navigation away from the installation site which might make it easier for remote attackers to spoof content via a crafted app related to browsercc and hosted_app_browser_controllercc,"Google Chrome before 45.0.2454.85 does not display a location bar for a hosted app's window after navigation away from the installation site, which might make it easier for remote attackers to spoof content via a crafted app, related to browser.cc and hosted_app_browser_controller.cc.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-345
CVE-2015-6780,"Use-after-free vulnerability in the Infobars implementation in Google Chrome before 47.0.2526.73 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted web site, related to browser/ui/views/website_settings/website_settings_popup_view.cc.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the Infobars implementation in Google Chrome before 47.0.2526.73 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted web site, related to browser/ui/views/website_settings/website_settings_popup_view.cc.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the Infobars implementation in Google Chrome before 47.0.2526.73 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted web site, related to browser/ui/views/website_settings/website_settings_popup_view.cc.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2015-12-06T01:59:17.790,,,nvd,useafterfree vulnerability in the infobars implementation in google chrome before 470252673 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted web site related to browseruiviewswebsite_settingswebsite_settings_popup_viewcc,"Use-after-free vulnerability in the Infobars implementation in Google Chrome before 47.0.2526.73 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted web site, related to browser/ui/views/website_settings/website_settings_popup_view.cc.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2016-1627,"The Developer Tools (aka DevTools) subsystem in Google Chrome before 48.0.2564.109 does not validate URL schemes and ensure that the remoteBase parameter is associated with a chrome-devtools-frontend.appspot.com URL, which allows remote attackers to bypass intended access restrictions via a crafted ",Google Chrome Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Developer Tools (aka DevTools) subsystem in Google Chrome before 48.0.2564.109 does not validate URL schemes and ensure that the remoteBase parameter is associated with a chrome-devtools-frontend.appspot.com URL, which allows remote attackers to bypass intended access restrictions via a crafted  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Developer Tools (aka DevTools) subsystem in Google Chrome before 48.0.2564.109 does not validate URL schemes and ensure that the remoteBase parameter is associated with a chrome-devtools-frontend.appspot.com URL, which allows remote attackers to bypass intended access restrictions via a crafted  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20",2016-02-14T02:59:05.320,,,nvd,the developer tools aka devtools subsystem in google chrome before 4802564109 does not validate url schemes and ensure that the remotebase parameter is associated with a chromedevtoolsfrontendappspotcom url which allows remote attackers to bypass intended access restrictions via a crafted,"The Developer Tools (aka DevTools) subsystem in Google Chrome before 48.0.2564.109 does not validate URL schemes and ensure that the remoteBase parameter is associated with a chrome-devtools-frontend.appspot.com URL, which allows remote attackers to bypass intended access restrictions via a crafted ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20
CVE-2016-1639,Use-after-free vulnerability in browser/extensions/api/webrtc_audio_private/webrtc_audio_private_api.cc in the WebRTC Audio Private API implementation in Google Chrome before 49.0.2623.75 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging inc,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in browser/extensions/api/webrtc_audio_private/webrtc_audio_private_api.cc in the WebRTC Audio Private API implementation in Google Chrome before 49.0.2623.75 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging inc  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in browser/extensions/api/webrtc_audio_private/webrtc_audio_private_api.cc in the WebRTC Audio Private API implementation in Google Chrome before 49.0.2623.75 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging inc  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2016-03-06T02:59:10.163,,,nvd,useafterfree vulnerability in browserextensionsapiwebrtc_audio_privatewebrtc_audio_private_apicc in the webrtc audio private api implementation in google chrome before 490262375 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging inc,Use-after-free vulnerability in browser/extensions/api/webrtc_audio_private/webrtc_audio_private_api.cc in the WebRTC Audio Private API implementation in Google Chrome before 49.0.2623.75 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging inc,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2016-1650,The PageCaptureSaveAsMHTMLFunction::ReturnFailure function in browser/extensions/api/page_capture/page_capture_api.cc in Google Chrome before 49.0.2623.108 allows attackers to cause a denial of service or possibly have unspecified other impact by triggering an error in creating an MHTML document.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The PageCaptureSaveAsMHTMLFunction::ReturnFailure function in browser/extensions/api/page_capture/page_capture_api.cc in Google Chrome before 49.0.2623.108 allows attackers to cause a denial of service or possibly have unspecified other impact by triggering an error in creating an MHTML document.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The PageCaptureSaveAsMHTMLFunction::ReturnFailure function in browser/extensions/api/page_capture/page_capture_api.cc in Google Chrome before 49.0.2623.108 allows attackers to cause a denial of service or possibly have unspecified other impact by triggering an error in creating an MHTML document.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2016-03-29T10:59:04.207,,,nvd,the pagecapturesaveasmhtmlfunctionreturnfailure function in browserextensionsapipage_capturepage_capture_apicc in google chrome before 4902623108 allows attackers to cause a denial of service or possibly have unspecified other impact by triggering an error in creating an mhtml document,The PageCaptureSaveAsMHTMLFunction::ReturnFailure function in browser/extensions/api/page_capture/page_capture_api.cc in Google Chrome before 49.0.2623.108 allows attackers to cause a denial of service or possibly have unspecified other impact by triggering an error in creating an MHTML document.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2016-1693,"browser/safe_browsing/srt_field_trial_win.cc in Google Chrome before 51.0.2704.63 does not use the HTTPS service on dl.google.com to obtain the Software Removal Tool, which allows remote attackers to spoof the chrome_cleanup_tool.exe (aka CCT) file via a man-in-the-middle attack on an HTTP session.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 3520,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/safe_browsing/srt_field_trial_win.cc in Google Chrome before 51.0.2704.63 does not use the HTTPS service on dl.google.com to obtain the Software Removal Tool, which allows remote attackers to spoof the chrome_cleanup_tool.exe (aka CCT) file via a man-in-the-middle attack on an HTTP session.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 3520","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/safe_browsing/srt_field_trial_win.cc in Google Chrome before 51.0.2704.63 does not use the HTTPS service on dl.google.com to obtain the Software Removal Tool, which allows remote attackers to spoof the chrome_cleanup_tool.exe (aka CCT) file via a man-in-the-middle attack on an HTTP session.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 3520",2016-06-05T23:59:23.070,,,nvd,browsersafe_browsingsrt_field_trial_wincc in google chrome before 510270463 does not use the https service on dlgooglecom to obtain the software removal tool which allows remote attackers to spoof the chrome_cleanup_toolexe aka cct file via a maninthemiddle attack on an http session,"browser/safe_browsing/srt_field_trial_win.cc in Google Chrome before 51.0.2704.63 does not use the HTTPS service on dl.google.com to obtain the Software Removal Tool, which allows remote attackers to spoof the chrome_cleanup_tool.exe (aka CCT) file via a man-in-the-middle attack on an HTTP session.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 3520
CVE-2016-1694,"browser/browsing_data/browsing_data_remover.cc in Google Chrome before 51.0.2704.63 deletes HPKP pins during cache clearing, which makes it easier for remote attackers to spoof web sites via a valid certificate from an arbitrary recognized Certification Authority.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/browsing_data/browsing_data_remover.cc in Google Chrome before 51.0.2704.63 deletes HPKP pins during cache clearing, which makes it easier for remote attackers to spoof web sites via a valid certificate from an arbitrary recognized Certification Authority.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/browsing_data/browsing_data_remover.cc in Google Chrome before 51.0.2704.63 deletes HPKP pins during cache clearing, which makes it easier for remote attackers to spoof web sites via a valid certificate from an arbitrary recognized Certification Authority.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311",2016-06-05T23:59:24.103,,,nvd,browserbrowsing_databrowsing_data_removercc in google chrome before 510270463 deletes hpkp pins during cache clearing which makes it easier for remote attackers to spoof web sites via a valid certificate from an arbitrary recognized certification authority,"browser/browsing_data/browsing_data_remover.cc in Google Chrome before 51.0.2704.63 deletes HPKP pins during cache clearing, which makes it easier for remote attackers to spoof web sites via a valid certificate from an arbitrary recognized Certification Authority.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 311
CVE-2016-1706,"The PPAPI implementation in Google Chrome before 52.0.2743.82 does not validate the origin of IPC messages to the plugin broker process that should have come from the browser process, which allows remote attackers to bypass a sandbox protection mechanism via an unexpected message type, related to br",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The PPAPI implementation in Google Chrome before 52.0.2743.82 does not validate the origin of IPC messages to the plugin broker process that should have come from the browser process, which allows remote attackers to bypass a sandbox protection mechanism via an unexpected message type, related to br  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The PPAPI implementation in Google Chrome before 52.0.2743.82 does not validate the origin of IPC messages to the plugin broker process that should have come from the browser process, which allows remote attackers to bypass a sandbox protection mechanism via an unexpected message type, related to br  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-07-23T19:59:01.590,,,nvd,the ppapi implementation in google chrome before 520274382 does not validate the origin of ipc messages to the plugin broker process that should have come from the browser process which allows remote attackers to bypass a sandbox protection mechanism via an unexpected message type related to br,"The PPAPI implementation in Google Chrome before 52.0.2743.82 does not validate the origin of IPC messages to the plugin broker process that should have come from the browser process, which allows remote attackers to bypass a sandbox protection mechanism via an unexpected message type, related to br",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-5174,"browser/ui/cocoa/browser_window_controller_private.mm in Google Chrome before 53.0.2785.113 does not process fullscreen toggle requests during a fullscreen transition, which allows remote attackers to cause a denial of service (unsuppressed popup) via a crafted web site.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/ui/cocoa/browser_window_controller_private.mm in Google Chrome before 53.0.2785.113 does not process fullscreen toggle requests during a fullscreen transition, which allows remote attackers to cause a denial of service (unsuppressed popup) via a crafted web site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/ui/cocoa/browser_window_controller_private.mm in Google Chrome before 53.0.2785.113 does not process fullscreen toggle requests during a fullscreen transition, which allows remote attackers to cause a denial of service (unsuppressed popup) via a crafted web site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2016-09-25T20:59:07.060,,,nvd,browseruicocoabrowser_window_controller_privatemm in google chrome before 5302785113 does not process fullscreen toggle requests during a fullscreen transition which allows remote attackers to cause a denial of service unsuppressed popup via a crafted web site,"browser/ui/cocoa/browser_window_controller_private.mm in Google Chrome before 53.0.2785.113 does not process fullscreen toggle requests during a fullscreen transition, which allows remote attackers to cause a denial of service (unsuppressed popup) via a crafted web site.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2016-5188,"Multiple issues in Blink in Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux allow a remote attacker to spoof various parts of browser UI via crafted HTML pages.",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple issues in Blink in Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux allow a remote attacker to spoof various parts of browser UI via crafted HTML pages.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple issues in Blink in Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux allow a remote attacker to spoof various parts of browser UI via crafted HTML pages.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345",2016-12-18T03:59:00.350,,,nvd,multiple issues in blink in google chrome prior to 540284059 for windows mac and linux allow a remote attacker to spoof various parts of browser ui via crafted html pages,"Multiple issues in Blink in Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux allow a remote attacker to spoof various parts of browser UI via crafted HTML pages.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345
CVE-2017-3823,"An issue was discovered in the Cisco WebEx Extension before 1.0.7 on Google Chrome, the ActiveTouch General Plugin Container before 106 on Mozilla Firefox, the GpcContainer Class ActiveX control plugin before 10031.6.2017.0126 on Internet Explorer, and the Download Manager ActiveX control plugin bef",Google Chrome Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: Improper neutralization of special elements in a protocol or data stream Vendor: Cisco Cause: The vulnerability is due to improper neutralization of special elements in the affected plugins' input validation, which could allow attackers to perform arbitrary code execution. Impact: Successful exploitation could allow an attacker to execute arbitrary code on the target system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in the Cisco WebEx Extension before 1.0.7 on Google Chrome, the ActiveTouch General Plugin Container before 106 on Mozilla Firefox, the GpcContainer Class ActiveX control plugin before 10031.6.2017.0126 on Internet Explorer, and the Download Manager ActiveX control plugin bef  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: Improper neutralization of special elements in a protocol or data stream Vendor: Cisco Cause: The vulnerability is due to improper neutralization of special elements in the affected plugins' input validation, which could allow attackers to perform arbitrary code execution. Impact: Successful exploitation could allow an attacker to execute arbitrary code on the target system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An issue was discovered in the Cisco WebEx Extension before 1.0.7 on Google Chrome, the ActiveTouch General Plugin Container before 106 on Mozilla Firefox, the GpcContainer Class ActiveX control plugin before 10031.6.2017.0126 on Internet Explorer, and the Download Manager ActiveX control plugin bef  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: Improper neutralization of special elements in a protocol or data stream Vendor: Cisco Cause: The vulnerability is due to improper neutralization of special elements in the affected plugins' input validation, which could allow attackers to perform arbitrary code execution. Impact: Successful exploitation could allow an attacker to execute arbitrary code on the target system.",2017-02-01T11:59:00.133,,,nvd,an issue was discovered in the cisco webex extension before 107 on google chrome the activetouch general plugin container before 106 on mozilla firefox the gpccontainer class activex control plugin before 10031620170126 on internet explorer and the download manager activex control plugin bef,"An issue was discovered in the Cisco WebEx Extension before 1.0.7 on Google Chrome, the ActiveTouch General Plugin Container before 106 on Mozilla Firefox, the GpcContainer Class ActiveX control plugin before 10031.6.2017.0126 on Internet Explorer, and the Download Manager ActiveX control plugin bef","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: Improper neutralization of special elements in a protocol or data stream Vendor: Cisco Cause: The vulnerability is due to improper neutralization of special elements in the affected plugins' input validation, which could allow attackers to perform arbitrary code execution. Impact: Successful exploitation could allow an attacker to execute arbitrary code on the target system."
CVE-2017-6753,"A vulnerability in Cisco WebEx browser extensions for Google Chrome and Mozilla Firefox could allow an unauthenticated, remote attacker to execute arbitrary code with the privileges of the affected browser on an affected system. This vulnerability affects the browser extensions for Cisco WebEx Meeti",Google Chrome Browser,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Improper neutralization of special elements used in an OS Command (CWE-79) in the context of input validation or command injection Vendor: Cisco Cause: The vulnerability allows remote code execution through the WebEx browser extensions for Google Chrome and Mozilla Firefox by improperly handling user input in a way that could lead to command injection Impact: An attacker could execute arbitrary code with the privileges of the affected browser on the target system,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in Cisco WebEx browser extensions for Google Chrome and Mozilla Firefox could allow an unauthenticated, remote attacker to execute arbitrary code with the privileges of the affected browser on an affected system. This vulnerability affects the browser extensions for Cisco WebEx Meeti  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Improper neutralization of special elements used in an OS Command (CWE-79) in the context of input validation or command injection Vendor: Cisco Cause: The vulnerability allows remote code execution through the WebEx browser extensions for Google Chrome and Mozilla Firefox by improperly handling user input in a way that could lead to command injection Impact: An attacker could execute arbitrary code with the privileges of the affected browser on the target system","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in Cisco WebEx browser extensions for Google Chrome and Mozilla Firefox could allow an unauthenticated, remote attacker to execute arbitrary code with the privileges of the affected browser on an affected system. This vulnerability affects the browser extensions for Cisco WebEx Meeti  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Improper neutralization of special elements used in an OS Command (CWE-79) in the context of input validation or command injection Vendor: Cisco Cause: The vulnerability allows remote code execution through the WebEx browser extensions for Google Chrome and Mozilla Firefox by improperly handling user input in a way that could lead to command injection Impact: An attacker could execute arbitrary code with the privileges of the affected browser on the target system",2017-07-25T19:29:00.397,,,nvd,a vulnerability in cisco webex browser extensions for google chrome and mozilla firefox could allow an unauthenticated remote attacker to execute arbitrary code with the privileges of the affected browser on an affected system this vulnerability affects the browser extensions for cisco webex meeti,"A vulnerability in Cisco WebEx browser extensions for Google Chrome and Mozilla Firefox could allow an unauthenticated, remote attacker to execute arbitrary code with the privileges of the affected browser on an affected system. This vulnerability affects the browser extensions for Cisco WebEx Meeti",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Improper neutralization of special elements used in an OS Command (CWE-79) in the context of input validation or command injection Vendor: Cisco Cause: The vulnerability allows remote code execution through the WebEx browser extensions for Google Chrome and Mozilla Firefox by improperly handling user input in a way that could lead to command injection Impact: An attacker could execute arbitrary code with the privileges of the affected browser on the target system
CVE-2017-5120,"Inappropriate use of www mismatch redirects in browser navigation in Google Chrome prior to 61.0.3163.79 for Mac, Windows, and Linux, and 61.0.3163.81 for Android, allowed a remote attacker to potentially downgrade HTTPS requests to HTTP via a crafted HTML page. In other words, Chrome could transmit",Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 307,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate use of www mismatch redirects in browser navigation in Google Chrome prior to 61.0.3163.79 for Mac, Windows, and Linux, and 61.0.3163.81 for Android, allowed a remote attacker to potentially downgrade HTTPS requests to HTTP via a crafted HTML page. In other words, Chrome could transmit  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 307","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate use of www mismatch redirects in browser navigation in Google Chrome prior to 61.0.3163.79 for Mac, Windows, and Linux, and 61.0.3163.81 for Android, allowed a remote attacker to potentially downgrade HTTPS requests to HTTP via a crafted HTML page. In other words, Chrome could transmit  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 307",2017-10-27T05:29:02.630,6.5,MEDIUM,nvd,inappropriate use of www mismatch redirects in browser navigation in google chrome prior to 610316379 for mac windows and linux and 610316381 for android allowed a remote attacker to potentially downgrade https requests to http via a crafted html page in other words chrome could transmit,"Inappropriate use of www mismatch redirects in browser navigation in Google Chrome prior to 61.0.3163.79 for Mac, Windows, and Linux, and 61.0.3163.81 for Android, allowed a remote attacker to potentially downgrade HTTPS requests to HTTP via a crafted HTML page. In other words, Chrome could transmit",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 307
CVE-2018-12716,"The API service on Google Home and Chromecast devices before mid-July 2018 does not prevent DNS rebinding attacks from reading the scan_results JSON data, which allows remote attackers to determine the physical location of most web browsers by leveraging the presence of one of these devices on its l",Google Chrome Browser,CWE-362,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-362 Explanation: The vulnerability allows remote attackers to determine the physical location of web browsers by exploiting the presence of Google Home and Chromecast devices through DNS rebinding attacks. Vendor: Google Cause: The API service on Google Home and Chromecast devices does not prevent DNS rebinding attacks, allowing attackers to access sensitive scan_results JSON data. Impact: Attackers can determine the physical location of most web browsers by leveraging the presence of Google Home and Chromecast devices on the local network.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The API service on Google Home and Chromecast devices before mid-July 2018 does not prevent DNS rebinding attacks from reading the scan_results JSON data, which allows remote attackers to determine the physical location of most web browsers by leveraging the presence of one of these devices on its l  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-362 Explanation: The vulnerability allows remote attackers to determine the physical location of web browsers by exploiting the presence of Google Home and Chromecast devices through DNS rebinding attacks. Vendor: Google Cause: The API service on Google Home and Chromecast devices does not prevent DNS rebinding attacks, allowing attackers to access sensitive scan_results JSON data. Impact: Attackers can determine the physical location of most web browsers by leveraging the presence of Google Home and Chromecast devices on the local network.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The API service on Google Home and Chromecast devices before mid-July 2018 does not prevent DNS rebinding attacks from reading the scan_results JSON data, which allows remote attackers to determine the physical location of most web browsers by leveraging the presence of one of these devices on its l  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-362 Explanation: The vulnerability allows remote attackers to determine the physical location of web browsers by exploiting the presence of Google Home and Chromecast devices through DNS rebinding attacks. Vendor: Google Cause: The API service on Google Home and Chromecast devices does not prevent DNS rebinding attacks, allowing attackers to access sensitive scan_results JSON data. Impact: Attackers can determine the physical location of most web browsers by leveraging the presence of Google Home and Chromecast devices on the local network.",2018-06-25T02:29:00.223,,,nvd,the api service on google home and chromecast devices before midjuly 2018 does not prevent dns rebinding attacks from reading the scan_results json data which allows remote attackers to determine the physical location of most web browsers by leveraging the presence of one of these devices on its l,"The API service on Google Home and Chromecast devices before mid-July 2018 does not prevent DNS rebinding attacks from reading the scan_results JSON data, which allows remote attackers to determine the physical location of most web browsers by leveraging the presence of one of these devices on its l","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-362 Explanation: The vulnerability allows remote attackers to determine the physical location of web browsers by exploiting the presence of Google Home and Chromecast devices through DNS rebinding attacks. Vendor: Google Cause: The API service on Google Home and Chromecast devices does not prevent DNS rebinding attacks, allowing attackers to access sensitive scan_results JSON data. Impact: Attackers can determine the physical location of most web browsers by leveraging the presence of Google Home and Chromecast devices on the local network."
CVE-2018-6053,Inappropriate implementation in New Tab Page in Google Chrome prior to 64.0.3282.119 allowed a local attacker to view website thumbnail images after clearing browser data via a crafted HTML page.,Google Chrome Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in New Tab Page in Google Chrome prior to 64.0.3282.119 allowed a local attacker to view website thumbnail images after clearing browser data via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in New Tab Page in Google Chrome prior to 64.0.3282.119 allowed a local attacker to view website thumbnail images after clearing browser data via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20",2018-09-25T14:29:03.897,,,nvd,inappropriate implementation in new tab page in google chrome prior to 6403282119 allowed a local attacker to view website thumbnail images after clearing browser data via a crafted html page,Inappropriate implementation in New Tab Page in Google Chrome prior to 64.0.3282.119 allowed a local attacker to view website thumbnail images after clearing browser data via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20
CVE-2018-18346,Incorrect handling of alert box display in Blink in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to present confusing browser UI via a crafted HTML page.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect handling of alert box display in Blink in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to present confusing browser UI via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect handling of alert box display in Blink in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to present confusing browser UI via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2018-12-11T16:29:01.387,,,nvd,incorrect handling of alert box display in blink in google chrome prior to 710357880 allowed a remote attacker to present confusing browser ui via a crafted html page,Incorrect handling of alert box display in Blink in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to present confusing browser UI via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2018-20067,A renderer initiated back navigation was incorrectly allowed to cancel a browser initiated one in Navigation in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to confuse the user about the origin of the current page via a crafted HTML page.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A renderer initiated back navigation was incorrectly allowed to cancel a browser initiated one in Navigation in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to confuse the user about the origin of the current page via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A renderer initiated back navigation was incorrectly allowed to cancel a browser initiated one in Navigation in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to confuse the user about the origin of the current page via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345",2019-01-09T19:29:03.430,,,nvd,a renderer initiated back navigation was incorrectly allowed to cancel a browser initiated one in navigation in google chrome prior to 710357880 allowed a remote attacker to confuse the user about the origin of the current page via a crafted html page,A renderer initiated back navigation was incorrectly allowed to cancel a browser initiated one in Navigation in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to confuse the user about the origin of the current page via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345
CVE-2018-6147,Lack of secure text entry mode in Browser UI in Google Chrome on Mac prior to 67.0.3396.62 allowed a local attacker to obtain potentially sensitive information from process memory via a local process.,Google Chrome Browser,CWE-200,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Lack of secure text entry mode in Browser UI in Google Chrome on Mac prior to 67.0.3396.62 allowed a local attacker to obtain potentially sensitive information from process memory via a local process.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Lack of secure text entry mode in Browser UI in Google Chrome on Mac prior to 67.0.3396.62 allowed a local attacker to obtain potentially sensitive information from process memory via a local process.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2019-01-09T19:29:10.103,,,nvd,lack of secure text entry mode in browser ui in google chrome on mac prior to 670339662 allowed a local attacker to obtain potentially sensitive information from process memory via a local process,Lack of secure text entry mode in Browser UI in Google Chrome on Mac prior to 67.0.3396.62 allowed a local attacker to obtain potentially sensitive information from process memory via a local process.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2019-5765,An exposed debugging endpoint in the browser in Google Chrome on Android prior to 72.0.3626.81 allowed a local attacker to obtain potentially sensitive information from process memory via a crafted Intent.,Google Chrome Browser,CWE-248,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-248,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An exposed debugging endpoint in the browser in Google Chrome on Android prior to 72.0.3626.81 allowed a local attacker to obtain potentially sensitive information from process memory via a crafted Intent.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-248","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An exposed debugging endpoint in the browser in Google Chrome on Android prior to 72.0.3626.81 allowed a local attacker to obtain potentially sensitive information from process memory via a crafted Intent.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-248",2019-02-19T17:29:00.923,,,nvd,an exposed debugging endpoint in the browser in google chrome on android prior to 720362681 allowed a local attacker to obtain potentially sensitive information from process memory via a crafted intent,An exposed debugging endpoint in the browser in Google Chrome on Android prior to 72.0.3626.81 allowed a local attacker to obtain potentially sensitive information from process memory via a crafted Intent.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-248
CVE-2019-5833,Incorrect dialog box scoping in browser in Google Chrome on Android prior to 75.0.3770.80 allowed a remote attacker to display misleading security UI via a crafted HTML page.,Google Chrome Browser,CWE-345,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect dialog box scoping in browser in Google Chrome on Android prior to 75.0.3770.80 allowed a remote attacker to display misleading security UI via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect dialog box scoping in browser in Google Chrome on Android prior to 75.0.3770.80 allowed a remote attacker to display misleading security UI via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-345",2019-06-27T17:15:15.270,4.3,MEDIUM,nvd,incorrect dialog box scoping in browser in google chrome on android prior to 750377080 allowed a remote attacker to display misleading security ui via a crafted html page,Incorrect dialog box scoping in browser in Google Chrome on Android prior to 75.0.3770.80 allowed a remote attacker to display misleading security UI via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-345
CVE-2016-5202,"browser/extensions/api/dial/dial_registry.cc in Google Chrome before 54.0.2840.98 on macOS, before 54.0.2840.99 on Windows, and before 54.0.2840.100 on Linux neglects to copy a device ID before an erase() call, which causes the erase operation to access data that that erase operation will destroy.",Google Chrome Browser,CWE-416,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/extensions/api/dial/dial_registry.cc in Google Chrome before 54.0.2840.98 on macOS, before 54.0.2840.99 on Windows, and before 54.0.2840.100 on Linux neglects to copy a device ID before an erase() call, which causes the erase operation to access data that that erase operation will destroy.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/extensions/api/dial/dial_registry.cc in Google Chrome before 54.0.2840.98 on macOS, before 54.0.2840.99 on Windows, and before 54.0.2840.100 on Linux neglects to copy a device ID before an erase() call, which causes the erase operation to access data that that erase operation will destroy.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416",2019-10-25T15:15:11.857,9.1,CRITICAL,nvd,browserextensionsapidialdial_registrycc in google chrome before 540284098 on macos before 540284099 on windows and before 5402840100 on linux neglects to copy a device id before an erase call which causes the erase operation to access data that that erase operation will destroy,"browser/extensions/api/dial/dial_registry.cc in Google Chrome before 54.0.2840.98 on macOS, before 54.0.2840.99 on Windows, and before 54.0.2840.100 on Linux neglects to copy a device ID before an erase() call, which causes the erase operation to access data that that erase operation will destroy.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416
CVE-2019-15684,Kaspersky Protection extension for web browser Google Chrome prior to 30.112.62.0 was vulnerable to unauthorized access to its features remotely that could lead to removing other installed extensions.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2846,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Kaspersky Protection extension for web browser Google Chrome prior to 30.112.62.0 was vulnerable to unauthorized access to its features remotely that could lead to removing other installed extensions.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2846","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Kaspersky Protection extension for web browser Google Chrome prior to 30.112.62.0 was vulnerable to unauthorized access to its features remotely that could lead to removing other installed extensions.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2846",2019-11-25T16:15:13.613,4.3,MEDIUM,nvd,kaspersky protection extension for web browser google chrome prior to 30112620 was vulnerable to unauthorized access to its features remotely that could lead to removing other installed extensions,Kaspersky Protection extension for web browser Google Chrome prior to 30.112.62.0 was vulnerable to unauthorized access to its features remotely that could lead to removing other installed extensions.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2846
CVE-2020-16019,Inappropriate implementation in filesystem in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file.,Google Chrome Browser,CWE-125,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a type of vulnerability where an application does not properly prevent or properly restrict the use of restricted operations or resources. In this case, the vulnerability allows a compromised browser process to bypass noexec restrictions, potentially leading to privilege escalation. Vendor: Google Cause: Inappropriate implementation of filesystem restrictions in Google Chrome on ChromeOS. Impact: A remote attacker could potentially bypass filesystem restrictions and execute malicious code.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in filesystem in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a type of vulnerability where an application does not properly prevent or properly restrict the use of restricted operations or resources. In this case, the vulnerability allows a compromised browser process to bypass noexec restrictions, potentially leading to privilege escalation. Vendor: Google Cause: Inappropriate implementation of filesystem restrictions in Google Chrome on ChromeOS. Impact: A remote attacker could potentially bypass filesystem restrictions and execute malicious code.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in filesystem in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a type of vulnerability where an application does not properly prevent or properly restrict the use of restricted operations or resources. In this case, the vulnerability allows a compromised browser process to bypass noexec restrictions, potentially leading to privilege escalation. Vendor: Google Cause: Inappropriate implementation of filesystem restrictions in Google Chrome on ChromeOS. Impact: A remote attacker could potentially bypass filesystem restrictions and execute malicious code.",2021-01-08T19:15:12.867,8.8,HIGH,nvd,inappropriate implementation in filesystem in google chrome on chromeos prior to 870428066 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file,Inappropriate implementation in filesystem in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a type of vulnerability where an application does not properly prevent or properly restrict the use of restricted operations or resources. In this case, the vulnerability allows a compromised browser process to bypass noexec restrictions, potentially leading to privilege escalation. Vendor: Google Cause: Inappropriate implementation of filesystem restrictions in Google Chrome on ChromeOS. Impact: A remote attacker could potentially bypass filesystem restrictions and execute malicious code."
CVE-2020-16020,Inappropriate implementation in cryptohome in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass discretionary access control via a malicious file.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 228,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in cryptohome in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass discretionary access control via a malicious file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 228","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in cryptohome in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass discretionary access control via a malicious file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 228",2021-01-08T19:15:12.927,8.8,HIGH,nvd,inappropriate implementation in cryptohome in google chrome on chromeos prior to 870428066 allowed a remote attacker who had compromised the browser process to bypass discretionary access control via a malicious file,Inappropriate implementation in cryptohome in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass discretionary access control via a malicious file.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 228
CVE-2020-16021,Race in image burner in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to perform OS-level privilege escalation via a malicious file.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Race in image burner in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to perform OS-level privilege escalation via a malicious file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Race in image burner in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to perform OS-level privilege escalation via a malicious file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362",2021-01-08T19:15:12.990,7.5,HIGH,nvd,race in image burner in google chrome on chromeos prior to 870428066 allowed a remote attacker who had compromised the browser process to perform oslevel privilege escalation via a malicious file,Race in image burner in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to perform OS-level privilege escalation via a malicious file.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362
CVE-2020-16035,Insufficient data validation in cros-disks in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation allows attackers to bypass security restrictions. Vendor: Google Cause: Insufficient data validation in cros-disks component Impact: Remote attackers could bypass noexec restrictions via malicious files,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insufficient data validation in cros-disks in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation allows attackers to bypass security restrictions. Vendor: Google Cause: Insufficient data validation in cros-disks component Impact: Remote attackers could bypass noexec restrictions via malicious files","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insufficient data validation in cros-disks in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation allows attackers to bypass security restrictions. Vendor: Google Cause: Insufficient data validation in cros-disks component Impact: Remote attackers could bypass noexec restrictions via malicious files",2021-01-08T19:15:13.803,8.8,HIGH,nvd,insufficient data validation in crosdisks in google chrome on chromeos prior to 870428066 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file,Insufficient data validation in cros-disks in Google Chrome on ChromeOS prior to 87.0.4280.66 allowed a remote attacker who had compromised the browser process to bypass noexec restrictions via a malicious file.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation allows attackers to bypass security restrictions. Vendor: Google Cause: Insufficient data validation in cros-disks component Impact: Remote attackers could bypass noexec restrictions via malicious files
CVE-2021-30597,Use after free in Browser UI in Google Chrome on Chrome prior to 92.0.4515.131 allowed a remote attacker to potentially exploit heap corruption via physical access to the device.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser UI in Google Chrome on Chrome prior to 92.0.4515.131 allowed a remote attacker to potentially exploit heap corruption via physical access to the device.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser UI in Google Chrome on Chrome prior to 92.0.4515.131 allowed a remote attacker to potentially exploit heap corruption via physical access to the device.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2021-08-26T18:15:08.250,6.8,MEDIUM,nvd,use after free in browser ui in google chrome on chrome prior to 9204515131 allowed a remote attacker to potentially exploit heap corruption via physical access to the device,Use after free in Browser UI in Google Chrome on Chrome prior to 92.0.4515.131 allowed a remote attacker to potentially exploit heap corruption via physical access to the device.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2021-37971,Incorrect security UI in Web Browser UI in Google Chrome prior to 94.0.4606.54 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.,Google Chrome Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: The vulnerability allows attackers to spoof the Omnibox contents, leading to potential phishing attacks. Vendor: Google Cause: Incorrect security UI in Google Chrome's Web Browser UI implementation. Impact: Remote attackers can spoof the URL bar, potentially tricking users into visiting malicious sites.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect security UI in Web Browser UI in Google Chrome prior to 94.0.4606.54 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: The vulnerability allows attackers to spoof the Omnibox contents, leading to potential phishing attacks. Vendor: Google Cause: Incorrect security UI in Google Chrome's Web Browser UI implementation. Impact: Remote attackers can spoof the URL bar, potentially tricking users into visiting malicious sites.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect security UI in Web Browser UI in Google Chrome prior to 94.0.4606.54 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: The vulnerability allows attackers to spoof the Omnibox contents, leading to potential phishing attacks. Vendor: Google Cause: Incorrect security UI in Google Chrome's Web Browser UI implementation. Impact: Remote attackers can spoof the URL bar, potentially tricking users into visiting malicious sites.",2021-10-08T22:15:08.197,4.3,MEDIUM,nvd,incorrect security ui in web browser ui in google chrome prior to 940460654 allowed a remote attacker to spoof the contents of the omnibox url bar via a crafted html page,Incorrect security UI in Web Browser UI in Google Chrome prior to 94.0.4606.54 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: The vulnerability allows attackers to spoof the Omnibox contents, leading to potential phishing attacks. Vendor: Google Cause: Incorrect security UI in Google Chrome's Web Browser UI implementation. Impact: Remote attackers can spoof the URL bar, potentially tricking users into visiting malicious sites."
CVE-2021-37999,Insufficient data validation in New Tab Page in Google Chrome prior to 95.0.4638.69 allowed a remote attacker to inject arbitrary scripts or HTML in a new browser tab via a crafted HTML page.,Google Chrome Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insufficient data validation in New Tab Page in Google Chrome prior to 95.0.4638.69 allowed a remote attacker to inject arbitrary scripts or HTML in a new browser tab via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insufficient data validation in New Tab Page in Google Chrome prior to 95.0.4638.69 allowed a remote attacker to inject arbitrary scripts or HTML in a new browser tab via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2021-11-23T22:15:07.763,6.1,MEDIUM,nvd,insufficient data validation in new tab page in google chrome prior to 950463869 allowed a remote attacker to inject arbitrary scripts or html in a new browser tab via a crafted html page,Insufficient data validation in New Tab Page in Google Chrome prior to 95.0.4638.69 allowed a remote attacker to inject arbitrary scripts or HTML in a new browser tab via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2021-38000,Insufficient validation of untrusted input in Intents in Google Chrome on Android prior to 95.0.4638.69 allowed a remote attacker to arbitrarily browser to a malicious URL via a crafted HTML page.,Google Chrome Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insufficient validation of untrusted input in Intents in Google Chrome on Android prior to 95.0.4638.69 allowed a remote attacker to arbitrarily browser to a malicious URL via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insufficient validation of untrusted input in Intents in Google Chrome on Android prior to 95.0.4638.69 allowed a remote attacker to arbitrarily browser to a malicious URL via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2021-11-23T22:15:07.807,6.1,MEDIUM,nvd,insufficient validation of untrusted input in intents in google chrome on android prior to 950463869 allowed a remote attacker to arbitrarily browser to a malicious url via a crafted html page,Insufficient validation of untrusted input in Intents in Google Chrome on Android prior to 95.0.4638.69 allowed a remote attacker to arbitrarily browser to a malicious URL via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2022-0112,Incorrect security UI in Browser UI in Google Chrome prior to 97.0.4692.71 allowed a remote attacker to display missing URL or incorrect URL via a crafted URL.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect security UI in Browser UI in Google Chrome prior to 97.0.4692.71 allowed a remote attacker to display missing URL or incorrect URL via a crafted URL.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Incorrect security UI in Browser UI in Google Chrome prior to 97.0.4692.71 allowed a remote attacker to display missing URL or incorrect URL via a crafted URL.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2022-02-12T00:15:07.837,4.3,MEDIUM,nvd,incorrect security ui in browser ui in google chrome prior to 970469271 allowed a remote attacker to display missing url or incorrect url via a crafted url,Incorrect security UI in Browser UI in Google Chrome prior to 97.0.4692.71 allowed a remote attacker to display missing URL or incorrect URL via a crafted URL.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2022-0805,Use after free in Browser Switcher in Google Chrome prior to 99.0.4844.51 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via user interaction.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser Switcher in Google Chrome prior to 99.0.4844.51 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via user interaction.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser Switcher in Google Chrome prior to 99.0.4844.51 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via user interaction.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2022-04-05T01:15:09.213,8.8,HIGH,nvd,use after free in browser switcher in google chrome prior to 990484451 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via user interaction,Use after free in Browser Switcher in Google Chrome prior to 99.0.4844.51 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via user interaction.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2022-0977,Use after free in Browser UI in Google Chrome on Chrome OS prior to 99.0.4844.74 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted HTML page.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser UI in Google Chrome on Chrome OS prior to 99.0.4844.74 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser UI in Google Chrome on Chrome OS prior to 99.0.4844.74 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2022-07-21T23:15:09.030,9.6,CRITICAL,nvd,use after free in browser ui in google chrome on chrome os prior to 990484474 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted html page,Use after free in Browser UI in Google Chrome on Chrome OS prior to 99.0.4844.74 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2022-1490,Use after free in Browser Switcher in Google Chrome prior to 101.0.4951.41 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted HTML page.,Google Chrome Browser,CWE-416,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser Switcher in Google Chrome prior to 101.0.4951.41 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser Switcher in Google Chrome prior to 101.0.4951.41 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416",2022-07-26T22:15:09.877,8.8,HIGH,nvd,use after free in browser switcher in google chrome prior to 1010495141 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted html page,Use after free in Browser Switcher in Google Chrome prior to 101.0.4951.41 allowed a remote attacker who convinced a user to engage in specific user interaction to potentially exploit heap corruption via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416
CVE-2022-1634,Use after free in Browser UI in Google Chrome prior to 101.0.4951.64 allowed a remote attacker who had convinced a user to engage in specific UI interaction to potentially exploit heap corruption via specific user interactions.,Google Chrome Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to exploit a use-after-free condition in the Chrome browser's UI, potentially leading to heap corruption. Vendor: Google Cause: Heap corruption through specific user interactions in the Browser UI component Impact: Remote code execution, potentially leading to arbitrary code execution or data leakage","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser UI in Google Chrome prior to 101.0.4951.64 allowed a remote attacker who had convinced a user to engage in specific UI interaction to potentially exploit heap corruption via specific user interactions.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to exploit a use-after-free condition in the Chrome browser's UI, potentially leading to heap corruption. Vendor: Google Cause: Heap corruption through specific user interactions in the Browser UI component Impact: Remote code execution, potentially leading to arbitrary code execution or data leakage","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser UI in Google Chrome prior to 101.0.4951.64 allowed a remote attacker who had convinced a user to engage in specific UI interaction to potentially exploit heap corruption via specific user interactions.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to exploit a use-after-free condition in the Chrome browser's UI, potentially leading to heap corruption. Vendor: Google Cause: Heap corruption through specific user interactions in the Browser UI component Impact: Remote code execution, potentially leading to arbitrary code execution or data leakage",2022-07-26T22:15:10.420,8.8,HIGH,nvd,use after free in browser ui in google chrome prior to 1010495164 allowed a remote attacker who had convinced a user to engage in specific ui interaction to potentially exploit heap corruption via specific user interactions,Use after free in Browser UI in Google Chrome prior to 101.0.4951.64 allowed a remote attacker who had convinced a user to engage in specific UI interaction to potentially exploit heap corruption via specific user interactions.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to exploit a use-after-free condition in the Chrome browser's UI, potentially leading to heap corruption. Vendor: Google Cause: Heap corruption through specific user interactions in the Browser UI component Impact: Remote code execution, potentially leading to arbitrary code execution or data leakage"
CVE-2022-2998,Use after free in Browser Creation in Google Chrome prior to 104.0.5112.101 allowed a remote attacker who had convinced a user to engage in a specific UI interaction to potentially exploit heap corruption via a crafted HTML page.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser Creation in Google Chrome prior to 104.0.5112.101 allowed a remote attacker who had convinced a user to engage in a specific UI interaction to potentially exploit heap corruption via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser Creation in Google Chrome prior to 104.0.5112.101 allowed a remote attacker who had convinced a user to engage in a specific UI interaction to potentially exploit heap corruption via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2022-09-26T16:15:11.670,8.8,HIGH,nvd,use after free in browser creation in google chrome prior to 10405112101 allowed a remote attacker who had convinced a user to engage in a specific ui interaction to potentially exploit heap corruption via a crafted html page,Use after free in Browser Creation in Google Chrome prior to 104.0.5112.101 allowed a remote attacker who had convinced a user to engage in a specific UI interaction to potentially exploit heap corruption via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2022-3046,Use after free in Browser Tag in Google Chrome prior to 105.0.5195.52 allowed an attacker who convinced a user to install a malicious extension to potentially exploit heap corruption via a crafted HTML page.,Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser Tag in Google Chrome prior to 105.0.5195.52 allowed an attacker who convinced a user to install a malicious extension to potentially exploit heap corruption via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser Tag in Google Chrome prior to 105.0.5195.52 allowed an attacker who convinced a user to install a malicious extension to potentially exploit heap corruption via a crafted HTML page.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2022-09-26T16:15:12.327,8.8,HIGH,nvd,use after free in browser tag in google chrome prior to 1050519552 allowed an attacker who convinced a user to install a malicious extension to potentially exploit heap corruption via a crafted html page,Use after free in Browser Tag in Google Chrome prior to 105.0.5195.52 allowed an attacker who convinced a user to install a malicious extension to potentially exploit heap corruption via a crafted HTML page.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2022-3863,Use after free in Browser History in Google Chrome prior to 100.0.4896.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chrome security severity: High),Google Chrome Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to exploit heap corruption by manipulating the browser history in a way that causes a use-after-free condition, leading to potential memory corruption. Vendor: Google Cause: Improper handling of browser history operations leading to a use-after-free condition Impact: Remote code execution and arbitrary code execution possibilities","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser History in Google Chrome prior to 100.0.4896.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chrome security severity: High)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to exploit heap corruption by manipulating the browser history in a way that causes a use-after-free condition, leading to potential memory corruption. Vendor: Google Cause: Improper handling of browser history operations leading to a use-after-free condition Impact: Remote code execution and arbitrary code execution possibilities","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser History in Google Chrome prior to 100.0.4896.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chrome security severity: High)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to exploit heap corruption by manipulating the browser history in a way that causes a use-after-free condition, leading to potential memory corruption. Vendor: Google Cause: Improper handling of browser history operations leading to a use-after-free condition Impact: Remote code execution and arbitrary code execution possibilities",2023-01-02T23:15:10.730,6.1,MEDIUM,nvd,use after free in browser history in google chrome prior to 1000489675 allowed a remote attacker to potentially exploit heap corruption via a crafted html page chrome security severity high,Use after free in Browser History in Google Chrome prior to 100.0.4896.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chrome security severity: High),"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to exploit heap corruption by manipulating the browser history in a way that causes a use-after-free condition, leading to potential memory corruption. Vendor: Google Cause: Improper handling of browser history operations leading to a use-after-free condition Impact: Remote code execution and arbitrary code execution possibilities"
CVE-2023-0699,Use after free in GPU in Google Chrome prior to 110.0.5481.77 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page and browser shutdown. (Chromium security severity: Medium),Google Chrome Browser,CWE-416,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in GPU in Google Chrome prior to 110.0.5481.77 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page and browser shutdown. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in GPU in Google Chrome prior to 110.0.5481.77 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page and browser shutdown. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416",2023-02-07T21:15:09.470,8.8,HIGH,nvd,use after free in gpu in google chrome prior to 1100548177 allowed a remote attacker to potentially exploit heap corruption via a crafted html page and browser shutdown chromium security severity medium,Use after free in GPU in Google Chrome prior to 110.0.5481.77 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page and browser shutdown. (Chromium security severity: Medium),<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416
CVE-2023-1820,Heap buffer overflow in Browser History in Google Chrome prior to 112.0.5615.49 allowed a remote attacker who convinced a user to engage in specific UI interaction to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: Medium),Google Chrome Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: The vulnerability allows an attacker to cause a heap buffer overflow through crafted input, potentially leading to arbitrary code execution or denial of service. Vendor: Google Cause: Heap buffer overflow in Browser History component of Google Chrome Impact: Remote code execution or denial of service through crafted HTML page","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Heap buffer overflow in Browser History in Google Chrome prior to 112.0.5615.49 allowed a remote attacker who convinced a user to engage in specific UI interaction to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: The vulnerability allows an attacker to cause a heap buffer overflow through crafted input, potentially leading to arbitrary code execution or denial of service. Vendor: Google Cause: Heap buffer overflow in Browser History component of Google Chrome Impact: Remote code execution or denial of service through crafted HTML page","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Heap buffer overflow in Browser History in Google Chrome prior to 112.0.5615.49 allowed a remote attacker who convinced a user to engage in specific UI interaction to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: The vulnerability allows an attacker to cause a heap buffer overflow through crafted input, potentially leading to arbitrary code execution or denial of service. Vendor: Google Cause: Heap buffer overflow in Browser History component of Google Chrome Impact: Remote code execution or denial of service through crafted HTML page",2023-04-04T22:15:07.697,8.8,HIGH,nvd,heap buffer overflow in browser history in google chrome prior to 1120561549 allowed a remote attacker who convinced a user to engage in specific ui interaction to potentially exploit heap corruption via a crafted html page chromium security severity medium,Heap buffer overflow in Browser History in Google Chrome prior to 112.0.5615.49 allowed a remote attacker who convinced a user to engage in specific UI interaction to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: Medium),"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122 Explanation: The vulnerability allows an attacker to cause a heap buffer overflow through crafted input, potentially leading to arbitrary code execution or denial of service. Vendor: Google Cause: Heap buffer overflow in Browser History component of Google Chrome Impact: Remote code execution or denial of service through crafted HTML page"
CVE-2021-4316,Inappropriate implementation in Cast UI in Google Chrome prior to 96.0.4664.45 allowed a remote attacker to spoof browser UI via a crafted HTML page. (Chromium security severity: Low),Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in Cast UI in Google Chrome prior to 96.0.4664.45 allowed a remote attacker to spoof browser UI via a crafted HTML page. (Chromium security severity: Low)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in Cast UI in Google Chrome prior to 96.0.4664.45 allowed a remote attacker to spoof browser UI via a crafted HTML page. (Chromium security severity: Low)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2023-07-29T00:15:10.237,4.3,MEDIUM,nvd,inappropriate implementation in cast ui in google chrome prior to 960466445 allowed a remote attacker to spoof browser ui via a crafted html page chromium security severity low,Inappropriate implementation in Cast UI in Google Chrome prior to 96.0.4664.45 allowed a remote attacker to spoof browser UI via a crafted HTML page. (Chromium security severity: Low),<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2023-4351,Use after free in Network in Google Chrome prior to 116.0.5845.96 allowed a remote attacker who has elicited a browser shutdown to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google Chrome Browser,CWE-416,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Network in Google Chrome prior to 116.0.5845.96 allowed a remote attacker who has elicited a browser shutdown to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Network in Google Chrome prior to 116.0.5845.96 allowed a remote attacker who has elicited a browser shutdown to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416",2023-08-15T18:15:11.260,8.8,HIGH,nvd,use after free in network in google chrome prior to 1160584596 allowed a remote attacker who has elicited a browser shutdown to potentially exploit heap corruption via a crafted html page chromium security severity high,Use after free in Network in Google Chrome prior to 116.0.5845.96 allowed a remote attacker who has elicited a browser shutdown to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-416
CVE-2023-6512,Inappropriate implementation in Web Browser UI in Google Chrome prior to 120.0.6099.62 allowed a remote attacker to potentially spoof the contents of an iframe dialog context menu via a crafted HTML page. (Chromium security severity: Low),Google Chrome Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows spoofing of an iframe dialog context menu through a crafted HTML page, potentially allowing an attacker to manipulate the user interface. Vendor: Google Cause: Inappropriate implementation of Web Browser UI in Google Chrome Impact: Potential spoofing of contents in an iframe dialog context menu","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in Web Browser UI in Google Chrome prior to 120.0.6099.62 allowed a remote attacker to potentially spoof the contents of an iframe dialog context menu via a crafted HTML page. (Chromium security severity: Low)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows spoofing of an iframe dialog context menu through a crafted HTML page, potentially allowing an attacker to manipulate the user interface. Vendor: Google Cause: Inappropriate implementation of Web Browser UI in Google Chrome Impact: Potential spoofing of contents in an iframe dialog context menu","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in Web Browser UI in Google Chrome prior to 120.0.6099.62 allowed a remote attacker to potentially spoof the contents of an iframe dialog context menu via a crafted HTML page. (Chromium security severity: Low)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows spoofing of an iframe dialog context menu through a crafted HTML page, potentially allowing an attacker to manipulate the user interface. Vendor: Google Cause: Inappropriate implementation of Web Browser UI in Google Chrome Impact: Potential spoofing of contents in an iframe dialog context menu",2023-12-06T02:15:07.543,6.5,MEDIUM,nvd,inappropriate implementation in web browser ui in google chrome prior to 1200609962 allowed a remote attacker to potentially spoof the contents of an iframe dialog context menu via a crafted html page chromium security severity low,Inappropriate implementation in Web Browser UI in Google Chrome prior to 120.0.6099.62 allowed a remote attacker to potentially spoof the contents of an iframe dialog context menu via a crafted HTML page. (Chromium security severity: Low),"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows spoofing of an iframe dialog context menu through a crafted HTML page, potentially allowing an attacker to manipulate the user interface. Vendor: Google Cause: Inappropriate implementation of Web Browser UI in Google Chrome Impact: Potential spoofing of contents in an iframe dialog context menu"
CVE-2024-3841,Insufficient data validation in Browser Switcher in Google Chrome prior to 124.0.6367.60 allowed a remote attacker to inject scripts or HTML into a privileged page via a malicious file. (Chromium security severity: Medium),Google Chrome Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows injection of malicious scripts or HTML content into a privileged page in Google Chrome due to insufficient data validation in the Browser Switcher component. Vendor: Google Cause: Insufficient data validation in the Browser Switcher component Impact: Injection of scripts or HTML into a privileged page, potentially allowing remote attackers to execute arbitrary code or manipulate the browser's behavior","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insufficient data validation in Browser Switcher in Google Chrome prior to 124.0.6367.60 allowed a remote attacker to inject scripts or HTML into a privileged page via a malicious file. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows injection of malicious scripts or HTML content into a privileged page in Google Chrome due to insufficient data validation in the Browser Switcher component. Vendor: Google Cause: Insufficient data validation in the Browser Switcher component Impact: Injection of scripts or HTML into a privileged page, potentially allowing remote attackers to execute arbitrary code or manipulate the browser's behavior","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Insufficient data validation in Browser Switcher in Google Chrome prior to 124.0.6367.60 allowed a remote attacker to inject scripts or HTML into a privileged page via a malicious file. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows injection of malicious scripts or HTML content into a privileged page in Google Chrome due to insufficient data validation in the Browser Switcher component. Vendor: Google Cause: Insufficient data validation in the Browser Switcher component Impact: Injection of scripts or HTML into a privileged page, potentially allowing remote attackers to execute arbitrary code or manipulate the browser's behavior",2024-04-17T08:15:10.530,6.1,MEDIUM,nvd,insufficient data validation in browser switcher in google chrome prior to 1240636760 allowed a remote attacker to inject scripts or html into a privileged page via a malicious file chromium security severity medium,Insufficient data validation in Browser Switcher in Google Chrome prior to 124.0.6367.60 allowed a remote attacker to inject scripts or HTML into a privileged page via a malicious file. (Chromium security severity: Medium),"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows injection of malicious scripts or HTML content into a privileged page in Google Chrome due to insufficient data validation in the Browser Switcher component. Vendor: Google Cause: Insufficient data validation in the Browser Switcher component Impact: Injection of scripts or HTML into a privileged page, potentially allowing remote attackers to execute arbitrary code or manipulate the browser's behavior"
CVE-2024-5497,Out of bounds memory access in Browser UI in Google Chrome prior to 125.0.6422.141 allowed a remote attacker who convinced a user to engage in specific UI gestures to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google Chrome Browser,CWE-787,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-787,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Out of bounds memory access in Browser UI in Google Chrome prior to 125.0.6422.141 allowed a remote attacker who convinced a user to engage in specific UI gestures to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-787","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Out of bounds memory access in Browser UI in Google Chrome prior to 125.0.6422.141 allowed a remote attacker who convinced a user to engage in specific UI gestures to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-787",2024-05-30T23:15:48.560,8.8,HIGH,nvd,out of bounds memory access in browser ui in google chrome prior to 12506422141 allowed a remote attacker who convinced a user to engage in specific ui gestures to potentially exploit heap corruption via a crafted html page chromium security severity high,Out of bounds memory access in Browser UI in Google Chrome prior to 125.0.6422.141 allowed a remote attacker who convinced a user to engage in specific UI gestures to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-787
CVE-2024-5842,Use after free in Browser UI in Google Chrome prior to 126.0.6478.54 allowed a remote attacker who convinced a user to engage in specific UI gestures to perform an out of bounds memory read via a crafted HTML page. (Chromium security severity: Medium),Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser UI in Google Chrome prior to 126.0.6478.54 allowed a remote attacker who convinced a user to engage in specific UI gestures to perform an out of bounds memory read via a crafted HTML page. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use after free in Browser UI in Google Chrome prior to 126.0.6478.54 allowed a remote attacker who convinced a user to engage in specific UI gestures to perform an out of bounds memory read via a crafted HTML page. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2024-06-11T21:15:55.080,8.8,HIGH,nvd,use after free in browser ui in google chrome prior to 1260647854 allowed a remote attacker who convinced a user to engage in specific ui gestures to perform an out of bounds memory read via a crafted html page chromium security severity medium,Use after free in Browser UI in Google Chrome prior to 126.0.6478.54 allowed a remote attacker who convinced a user to engage in specific UI gestures to perform an out of bounds memory read via a crafted HTML page. (Chromium security severity: Medium),<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2025-0996,Inappropriate implementation in Browser UI in Google Chrome on Android prior to 133.0.6943.98 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page. (Chromium security severity: High),Google Chrome Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in Browser UI in Google Chrome on Android prior to 133.0.6943.98 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page. (Chromium security severity: High)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in Browser UI in Google Chrome on Android prior to 133.0.6943.98 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page. (Chromium security severity: High)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2025-02-15T02:15:09.260,5.4,MEDIUM,nvd,inappropriate implementation in browser ui in google chrome on android prior to 1330694398 allowed a remote attacker to spoof the contents of the omnibox url bar via a crafted html page chromium security severity high,Inappropriate implementation in Browser UI in Google Chrome on Android prior to 133.0.6943.98 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page. (Chromium security severity: High),<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2025-1917,Inappropriate implementation in Browser UI in Google Chrome on Android prior to 134.0.6998.35 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium),Google Chrome Browser,CWE-200,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200 Explanation: The vulnerability allows a crafted HTML page to spoof the browser UI, leading to potential UI spoofing attacks. Vendor: Google Cause: Inappropriate implementation of the browser UI handling in Google Chrome on Android. Impact: A remote attacker could potentially perform UI spoofing attacks.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in Browser UI in Google Chrome on Android prior to 134.0.6998.35 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200 Explanation: The vulnerability allows a crafted HTML page to spoof the browser UI, leading to potential UI spoofing attacks. Vendor: Google Cause: Inappropriate implementation of the browser UI handling in Google Chrome on Android. Impact: A remote attacker could potentially perform UI spoofing attacks.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Inappropriate implementation in Browser UI in Google Chrome on Android prior to 134.0.6998.35 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200 Explanation: The vulnerability allows a crafted HTML page to spoof the browser UI, leading to potential UI spoofing attacks. Vendor: Google Cause: Inappropriate implementation of the browser UI handling in Google Chrome on Android. Impact: A remote attacker could potentially perform UI spoofing attacks.",2025-03-05T04:15:11.393,4.3,MEDIUM,nvd,inappropriate implementation in browser ui in google chrome on android prior to 1340699835 allowed a remote attacker to perform ui spoofing via a crafted html page chromium security severity medium,Inappropriate implementation in Browser UI in Google Chrome on Android prior to 134.0.6998.35 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium),"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200 Explanation: The vulnerability allows a crafted HTML page to spoof the browser UI, leading to potential UI spoofing attacks. Vendor: Google Cause: Inappropriate implementation of the browser UI handling in Google Chrome on Android. Impact: A remote attacker could potentially perform UI spoofing attacks."
CVE-2015-6064,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6084 and CVE-2015-6085.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6084 and CVE-2015-6085.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6084 and CVE-2015-6085.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-11-11T11:59:34.693,,,nvd,microsoft internet explorer 10 and 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156084 and cve20156085,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6084 and CVE-2015-6085.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6073,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6068, CVE-2015-6072, CVE-2015-6",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution and denial of service through memory corruption. This is due to improper input validation in the handling of web content. Vendor: Microsoft Cause: Improper input validation in handling of web content in Microsoft Internet Explorer and Microsoft Edge browsers. Impact: Remote code execution and denial of service.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6068, CVE-2015-6072, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution and denial of service through memory corruption. This is due to improper input validation in the handling of web content. Vendor: Microsoft Cause: Improper input validation in handling of web content in Microsoft Internet Explorer and Microsoft Edge browsers. Impact: Remote code execution and denial of service.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6068, CVE-2015-6072, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution and denial of service through memory corruption. This is due to improper input validation in the handling of web content. Vendor: Microsoft Cause: Improper input validation in handling of web content in Microsoft Internet Explorer and Microsoft Edge browsers. Impact: Remote code execution and denial of service.",2015-11-11T12:59:15.487,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156068 cve20156072 cve20156,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6068, CVE-2015-6072, CVE-2015-6",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution and denial of service through memory corruption. This is due to improper input validation in the handling of web content. Vendor: Microsoft Cause: Improper input validation in handling of web content in Microsoft Internet Explorer and Microsoft Edge browsers. Impact: Remote code execution and denial of service.
CVE-2015-6078,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6065.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution or denial of service through memory corruption. This is due to improper handling of web content. Vendor: Microsoft Cause: Improper memory handling in Microsoft Internet Explorer 9 through 11 and Microsoft Edge browsers when processing crafted web content. Impact: Arbitrary code execution or denial of service.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6065.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution or denial of service through memory corruption. This is due to improper handling of web content. Vendor: Microsoft Cause: Improper memory handling in Microsoft Internet Explorer 9 through 11 and Microsoft Edge browsers when processing crafted web content. Impact: Arbitrary code execution or denial of service.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6065.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution or denial of service through memory corruption. This is due to improper handling of web content. Vendor: Microsoft Cause: Improper memory handling in Microsoft Internet Explorer 9 through 11 and Microsoft Edge browsers when processing crafted web content. Impact: Arbitrary code execution or denial of service.",2015-11-11T12:59:20.160,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156065,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6065.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution or denial of service through memory corruption. This is due to improper handling of web content. Vendor: Microsoft Cause: Improper memory handling in Microsoft Internet Explorer 9 through 11 and Microsoft Edge browsers when processing crafted web content. Impact: Arbitrary code execution or denial of service.
CVE-2015-6088,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to bypass the ASLR protection mechanism via a crafted web site, aka ""Microsoft Browser ASLR Bypass.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to bypass the ASLR protection mechanism via a crafted web site, aka ""Microsoft Browser ASLR Bypass.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to bypass the ASLR protection mechanism via a crafted web site, aka ""Microsoft Browser ASLR Bypass.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121",2015-11-11T12:59:28.960,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to bypass the aslr protection mechanism via a crafted web site aka microsoft browser aslr bypass,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to bypass the ASLR protection mechanism via a crafted web site, aka ""Microsoft Browser ASLR Bypass.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121
CVE-2015-6139,"Microsoft Internet Explorer 11 and Microsoft Edge mishandle content types, which allows remote attackers to execute arbitrary web script in a privileged context via a crafted web site, aka ""Microsoft Browser Elevation of Privilege Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge mishandle content types, which allows remote attackers to execute arbitrary web script in a privileged context via a crafted web site, aka ""Microsoft Browser Elevation of Privilege Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge mishandle content types, which allows remote attackers to execute arbitrary web script in a privileged context via a crafted web site, aka ""Microsoft Browser Elevation of Privilege Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:22.510,,,nvd,microsoft internet explorer 11 and microsoft edge mishandle content types which allows remote attackers to execute arbitrary web script in a privileged context via a crafted web site aka microsoft browser elevation of privilege vulnerability,"Microsoft Internet Explorer 11 and Microsoft Edge mishandle content types, which allows remote attackers to execute arbitrary web script in a privileged context via a crafted web site, aka ""Microsoft Browser Elevation of Privilege Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6140,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6142, CVE-2015-6143, CVE-2015-6",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6142, CVE-2015-6143, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6142, CVE-2015-6143, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:23.700,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156142 cve20156143 cve20156,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6142, CVE-2015-6143, CVE-2015-6",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6142,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6143, CVE-2015-6",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6143, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6143, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:25.717,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156140 cve20156143 cve20156,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6143, CVE-2015-6",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6144,"Microsoft Internet Explorer 8 through 11 and Microsoft Edge mishandle HTML attributes in HTTP responses, which allows remote attackers to bypass a cross-site scripting (XSS) protection mechanism via unspecified vectors, aka ""Microsoft Browser XSS Filter Bypass Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 8 through 11 and Microsoft Edge mishandle HTML attributes in HTTP responses, which allows remote attackers to bypass a cross-site scripting (XSS) protection mechanism via unspecified vectors, aka ""Microsoft Browser XSS Filter Bypass Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 8 through 11 and Microsoft Edge mishandle HTML attributes in HTTP responses, which allows remote attackers to bypass a cross-site scripting (XSS) protection mechanism via unspecified vectors, aka ""Microsoft Browser XSS Filter Bypass Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2015-12-09T11:59:27.907,,,nvd,microsoft internet explorer 8 through 11 and microsoft edge mishandle html attributes in http responses which allows remote attackers to bypass a crosssite scripting xss protection mechanism via unspecified vectors aka microsoft browser xss filter bypass vulnerability,"Microsoft Internet Explorer 8 through 11 and Microsoft Edge mishandle HTML attributes in HTTP responses, which allows remote attackers to bypass a cross-site scripting (XSS) protection mechanism via unspecified vectors, aka ""Microsoft Browser XSS Filter Bypass Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2015-6148,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6156.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6156.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6156.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:32.033,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156156,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6156.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6151,"Microsoft Internet Explorer 8 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6083.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 8 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6083.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 8 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6083.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:35.253,,,nvd,microsoft internet explorer 8 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156083,"Microsoft Internet Explorer 8 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6083.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6153,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:37.053,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156140 cve20156142 cve20156,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6154,"Microsoft Internet Explorer 7 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6150.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 7 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6150.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 7 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6150.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:38.177,,,nvd,microsoft internet explorer 7 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156150,"Microsoft Internet Explorer 7 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6150.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6155,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:39.007,,,nvd,microsoft internet explorer 10 and 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6158,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:42.057,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156140 cve20156142 cve20156,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6159,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-09T11:59:43.227,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20156140 cve20156142 cve20156,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2015-6140, CVE-2015-6142, CVE-2015-6",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-6161,"Microsoft Internet Explorer 7 through 11 and Microsoft Edge allow remote attackers to bypass the ASLR protection mechanism via a crafted web site, aka ""Microsoft Browser ASLR Bypass.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 7 through 11 and Microsoft Edge allow remote attackers to bypass the ASLR protection mechanism via a crafted web site, aka ""Microsoft Browser ASLR Bypass.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 7 through 11 and Microsoft Edge allow remote attackers to bypass the ASLR protection mechanism via a crafted web site, aka ""Microsoft Browser ASLR Bypass.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2015-12-09T11:59:45.213,,,nvd,microsoft internet explorer 7 through 11 and microsoft edge allow remote attackers to bypass the aslr protection mechanism via a crafted web site aka microsoft browser aslr bypass,"Microsoft Internet Explorer 7 through 11 and Microsoft Edge allow remote attackers to bypass the ASLR protection mechanism via a crafted web site, aka ""Microsoft Browser ASLR Bypass.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2015-6170,"Microsoft Edge allows remote attackers to gain privileges via a crafted web site, aka ""Microsoft Browser Elevation of Privilege Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to gain privileges via a crafted web site, aka ""Microsoft Browser Elevation of Privilege Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to gain privileges via a crafted web site, aka ""Microsoft Browser Elevation of Privilege Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264",2015-12-09T11:59:51.607,,,nvd,microsoft edge allows remote attackers to gain privileges via a crafted web site aka microsoft browser elevation of privilege vulnerability,"Microsoft Edge allows remote attackers to gain privileges via a crafted web site, aka ""Microsoft Browser Elevation of Privilege Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264
CVE-2016-0060,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0061, CVE-2016-0063, ",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0061, CVE-2016-0063,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0061, CVE-2016-0063,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-02-10T11:59:23.927,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20160061 cve20160063,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0061, CVE-2016-0063, ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-0061,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0060, CVE-2016-0063, ",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site. This is a CWE-20 (Improper Input Validation) vulnerability. Vendor: Microsoft Cause: Improper input validation in Microsoft Internet Explorer 9 through 11 and Microsoft Edge Impact: Arbitrary code execution or denial of service through memory corruption,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0060, CVE-2016-0063,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site. This is a CWE-20 (Improper Input Validation) vulnerability. Vendor: Microsoft Cause: Improper input validation in Microsoft Internet Explorer 9 through 11 and Microsoft Edge Impact: Arbitrary code execution or denial of service through memory corruption","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0060, CVE-2016-0063,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site. This is a CWE-20 (Improper Input Validation) vulnerability. Vendor: Microsoft Cause: Improper input validation in Microsoft Internet Explorer 9 through 11 and Microsoft Edge Impact: Arbitrary code execution or denial of service through memory corruption",2016-02-10T11:59:24.910,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20160060 cve20160063,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0060, CVE-2016-0063, ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site. This is a CWE-20 (Improper Input Validation) vulnerability. Vendor: Microsoft Cause: Improper input validation in Microsoft Internet Explorer 9 through 11 and Microsoft Edge Impact: Arbitrary code execution or denial of service through memory corruption
CVE-2016-0062,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-02-10T11:59:25.893,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-0077,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge misparse HTTP responses, which allows remote attackers to spoof web sites via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge misparse HTTP responses, which allows remote attackers to spoof web sites via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge misparse HTTP responses, which allows remote attackers to spoof web sites via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2016-02-10T11:59:32.317,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge misparse http responses which allows remote attackers to spoof web sites via a crafted url aka microsoft browser spoofing vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge misparse HTTP responses, which allows remote attackers to spoof web sites via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2016-0102,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0103, CVE-2016-0106, CVE-2016-0",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0103, CVE-2016-0106, CVE-2016-0  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0103, CVE-2016-0106, CVE-2016-0  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-03-09T11:59:12.543,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20160103 cve20160106 cve20160,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0103, CVE-2016-0106, CVE-2016-0",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-0105,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0107, CVE-2016-0111, ",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0107, CVE-2016-0111,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0107, CVE-2016-0111,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-03-09T11:59:15.327,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20160107 cve20160111,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0107, CVE-2016-0111, ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-0109,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0102, CVE-2016-0103, CVE-2016-0",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0102, CVE-2016-0103, CVE-2016-0  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0102, CVE-2016-0103, CVE-2016-0  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-03-09T11:59:18.950,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20160102 cve20160103 cve20160,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0102, CVE-2016-0103, CVE-2016-0",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-0110,"Microsoft Internet Explorer 10 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-03-09T11:59:19.857,,,nvd,microsoft internet explorer 10 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 10 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-0111,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0105, CVE-2016-0107, ",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0105, CVE-2016-0107,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0105, CVE-2016-0107,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-03-09T11:59:20.747,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20160105 cve20160107,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-0105, CVE-2016-0107, ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-0125,"Microsoft Edge mishandles the Referer policy, which allows remote attackers to obtain sensitive browser-history and request information via a crafted HTTPS web site, aka ""Microsoft Edge Information Disclosure Vulnerability.""",Microsoft Edge Browser,CWE-601,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: CWE-601: More Than One Byte Beyond Bound of Buffer Vendor: Microsoft Cause: Microsoft Edge mishandles the Referer policy, causing buffer overflow Impact: Allows remote attackers to obtain sensitive browser-history and request information","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge mishandles the Referer policy, which allows remote attackers to obtain sensitive browser-history and request information via a crafted HTTPS web site, aka ""Microsoft Edge Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: CWE-601: More Than One Byte Beyond Bound of Buffer Vendor: Microsoft Cause: Microsoft Edge mishandles the Referer policy, causing buffer overflow Impact: Allows remote attackers to obtain sensitive browser-history and request information","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge mishandles the Referer policy, which allows remote attackers to obtain sensitive browser-history and request information via a crafted HTTPS web site, aka ""Microsoft Edge Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: CWE-601: More Than One Byte Beyond Bound of Buffer Vendor: Microsoft Cause: Microsoft Edge mishandles the Referer policy, causing buffer overflow Impact: Allows remote attackers to obtain sensitive browser-history and request information",2016-03-09T11:59:31.047,,,nvd,microsoft edge mishandles the referer policy which allows remote attackers to obtain sensitive browserhistory and request information via a crafted https web site aka microsoft edge information disclosure vulnerability,"Microsoft Edge mishandles the Referer policy, which allows remote attackers to obtain sensitive browser-history and request information via a crafted HTTPS web site, aka ""Microsoft Edge Information Disclosure Vulnerability.""","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: CWE-601: More Than One Byte Beyond Bound of Buffer Vendor: Microsoft Cause: Microsoft Edge mishandles the Referer policy, causing buffer overflow Impact: Allows remote attackers to obtain sensitive browser-history and request information"
CVE-2016-0154,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-04-12T23:59:17.923,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-0192,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-05-11T01:59:34.350,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-3264,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-07-13T01:59:23.377,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-3273,"The XSS Filter in Microsoft Internet Explorer 9 through 11 and Microsoft Edge does not properly restrict JavaScript code, which allows remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The XSS Filter in Microsoft Internet Explorer 9 through 11 and Microsoft Edge does not properly restrict JavaScript code, which allows remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The XSS Filter in Microsoft Internet Explorer 9 through 11 and Microsoft Edge does not properly restrict JavaScript code, which allows remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2016-07-13T01:59:28.703,,,nvd,the xss filter in microsoft internet explorer 9 through 11 and microsoft edge does not properly restrict javascript code which allows remote attackers to obtain sensitive information via a crafted web site aka microsoft browser information disclosure vulnerability,"The XSS Filter in Microsoft Internet Explorer 9 through 11 and Microsoft Edge does not properly restrict JavaScript code, which allows remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2016-3274,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to conduct content-spoofing attacks via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to conduct content-spoofing attacks via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to conduct content-spoofing attacks via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312",2016-07-13T01:59:29.657,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to conduct contentspoofing attacks via a crafted url aka microsoft browser spoofing vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to conduct content-spoofing attacks via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312
CVE-2016-3276,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to conduct content-spoofing attacks via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""",Microsoft Edge Browser,CWE-362,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: CWE-362 describes a vulnerability where an application accepts input that appears to be from a trusted source but is actually from an attacker. This can lead to spoofing attacks. Vendor: Microsoft Cause: Microsoft Internet Explorer 11 and Microsoft Edge accept crafted URLs from untrusted sources Impact: Remote attackers can conduct content-spoofing attacks,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to conduct content-spoofing attacks via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: CWE-362 describes a vulnerability where an application accepts input that appears to be from a trusted source but is actually from an attacker. This can lead to spoofing attacks. Vendor: Microsoft Cause: Microsoft Internet Explorer 11 and Microsoft Edge accept crafted URLs from untrusted sources Impact: Remote attackers can conduct content-spoofing attacks","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to conduct content-spoofing attacks via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: CWE-362 describes a vulnerability where an application accepts input that appears to be from a trusted source but is actually from an attacker. This can lead to spoofing attacks. Vendor: Microsoft Cause: Microsoft Internet Explorer 11 and Microsoft Edge accept crafted URLs from untrusted sources Impact: Remote attackers can conduct content-spoofing attacks",2016-07-13T01:59:30.533,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to conduct contentspoofing attacks via a crafted url aka microsoft browser spoofing vulnerability,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to conduct content-spoofing attacks via a crafted URL, aka ""Microsoft Browser Spoofing Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: CWE-362 describes a vulnerability where an application accepts input that appears to be from a trusted source but is actually from an attacker. This can lead to spoofing attacks. Vendor: Microsoft Cause: Microsoft Internet Explorer 11 and Microsoft Edge accept crafted URLs from untrusted sources Impact: Remote attackers can conduct content-spoofing attacks
CVE-2016-3277,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2016-07-13T01:59:31.453,,,nvd,microsoft internet explorer 10 and 11 and microsoft edge allow remote attackers to obtain sensitive information via a crafted web site aka microsoft browser information disclosure vulnerability,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2016-3289,"Microsoft Internet Explorer 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-3322.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution through memory corruption. It is a different vulnerability than CVE-2016-3322. Vendor: Microsoft Cause: Memory corruption in Microsoft Internet Explorer 11 and Edge. Impact: Remote code execution via crafted web page.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-3322.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution through memory corruption. It is a different vulnerability than CVE-2016-3322. Vendor: Microsoft Cause: Memory corruption in Microsoft Internet Explorer 11 and Edge. Impact: Remote code execution via crafted web page.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-3322.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution through memory corruption. It is a different vulnerability than CVE-2016-3322. Vendor: Microsoft Cause: Memory corruption in Microsoft Internet Explorer 11 and Edge. Impact: Remote code execution via crafted web page.",2016-08-09T21:59:03.330,,,nvd,microsoft internet explorer 11 and edge allow remote attackers to execute arbitrary code via a crafted web page aka microsoft browser memory corruption vulnerability a different vulnerability than cve20163322,"Microsoft Internet Explorer 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-3322.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution through memory corruption. It is a different vulnerability than CVE-2016-3322. Vendor: Microsoft Cause: Memory corruption in Microsoft Internet Explorer 11 and Edge. Impact: Remote code execution via crafted web page.
CVE-2016-3293,"Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-08-09T21:59:06.580,,,nvd,microsoft internet explorer 9 through 11 and edge allow remote attackers to execute arbitrary code via a crafted web page aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-3322,"Microsoft Internet Explorer 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-3289.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-3289.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-3289.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-08-09T21:59:29.693,,,nvd,microsoft internet explorer 11 and edge allow remote attackers to execute arbitrary code via a crafted web page aka microsoft browser memory corruption vulnerability a different vulnerability than cve20163289,"Microsoft Internet Explorer 11 and Edge allow remote attackers to execute arbitrary code via a crafted web page, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-3289.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-3326,"Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to obtain sensitive information via a crafted web page, aka ""Microsoft Browser Information Disclosure Vulnerability,"" a different vulnerability than CVE-2016-3327.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to obtain sensitive information via a crafted web page, aka ""Microsoft Browser Information Disclosure Vulnerability,"" a different vulnerability than CVE-2016-3327.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to obtain sensitive information via a crafted web page, aka ""Microsoft Browser Information Disclosure Vulnerability,"" a different vulnerability than CVE-2016-3327.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2016-08-09T21:59:30.833,,,nvd,microsoft internet explorer 9 through 11 and edge allow remote attackers to obtain sensitive information via a crafted web page aka microsoft browser information disclosure vulnerability a different vulnerability than cve20163327,"Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to obtain sensitive information via a crafted web page, aka ""Microsoft Browser Information Disclosure Vulnerability,"" a different vulnerability than CVE-2016-3327.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2016-3327,"Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to obtain sensitive information via a crafted web page, aka ""Microsoft Browser Information Disclosure Vulnerability,"" a different vulnerability than CVE-2016-3326.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to obtain sensitive information via a crafted web page, aka ""Microsoft Browser Information Disclosure Vulnerability,"" a different vulnerability than CVE-2016-3326.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to obtain sensitive information via a crafted web page, aka ""Microsoft Browser Information Disclosure Vulnerability,"" a different vulnerability than CVE-2016-3326.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005",2016-08-09T21:59:32.053,,,nvd,microsoft internet explorer 9 through 11 and edge allow remote attackers to obtain sensitive information via a crafted web page aka microsoft browser information disclosure vulnerability a different vulnerability than cve20163326,"Microsoft Internet Explorer 9 through 11 and Edge allow remote attackers to obtain sensitive information via a crafted web page, aka ""Microsoft Browser Information Disclosure Vulnerability,"" a different vulnerability than CVE-2016-3326.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005
CVE-2016-3247,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-09-14T10:59:04.463,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-3291,"Microsoft Internet Explorer 11 and Microsoft Edge mishandle cross-origin requests, which allows remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Exposure of Sensitive Information to an Unauthorized Actor Vendor: Microsoft Cause: Microsoft Internet Explorer 11 and Microsoft Edge mishandle cross-origin requests Impact: Remote attackers can obtain sensitive information via a crafted web site,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge mishandle cross-origin requests, which allows remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Exposure of Sensitive Information to an Unauthorized Actor Vendor: Microsoft Cause: Microsoft Internet Explorer 11 and Microsoft Edge mishandle cross-origin requests Impact: Remote attackers can obtain sensitive information via a crafted web site","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge mishandle cross-origin requests, which allows remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Exposure of Sensitive Information to an Unauthorized Actor Vendor: Microsoft Cause: Microsoft Internet Explorer 11 and Microsoft Edge mishandle cross-origin requests Impact: Remote attackers can obtain sensitive information via a crafted web site",2016-09-14T10:59:05.557,,,nvd,microsoft internet explorer 11 and microsoft edge mishandle crossorigin requests which allows remote attackers to obtain sensitive information via a crafted web site aka microsoft browser information disclosure vulnerability,"Microsoft Internet Explorer 11 and Microsoft Edge mishandle cross-origin requests, which allows remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200 Explanation: Exposure of Sensitive Information to an Unauthorized Actor Vendor: Microsoft Cause: Microsoft Internet Explorer 11 and Microsoft Edge mishandle cross-origin requests Impact: Remote attackers can obtain sensitive information via a crafted web site
CVE-2016-3295,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254",2016-09-14T10:59:09.103,,,nvd,microsoft internet explorer 10 and 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254
CVE-2016-3297,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-09-14T10:59:10.370,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-3325,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2016-09-14T10:59:15.917,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to obtain sensitive information via a crafted web site aka microsoft browser information disclosure vulnerability,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2016-3351,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2016-09-14T10:59:24.357,6.5,MEDIUM,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to obtain sensitive information via a crafted web site aka microsoft browser information disclosure vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to obtain sensitive information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2016-3267,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to determine the existence of unspecified files via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to determine the existence of unspecified files via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to determine the existence of unspecified files via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2016-10-14T02:59:11.877,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to determine the existence of unspecified files via a crafted web site aka microsoft browser information disclosure vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to determine the existence of unspecified files via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2016-3331,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-10-14T02:59:14.927,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-3387,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge do not properly restrict access to private namespaces, which allows remote attackers to gain privileges via unspecified vectors, aka ""Microsoft Browser Elevation of Privilege Vulnerability,"" a different vulnerability than CVE-2016-3388.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge do not properly restrict access to private namespaces, which allows remote attackers to gain privileges via unspecified vectors, aka ""Microsoft Browser Elevation of Privilege Vulnerability,"" a different vulnerability than CVE-2016-3388.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge do not properly restrict access to private namespaces, which allows remote attackers to gain privileges via unspecified vectors, aka ""Microsoft Browser Elevation of Privilege Vulnerability,"" a different vulnerability than CVE-2016-3388.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-10-14T02:59:23.727,,,nvd,microsoft internet explorer 10 and 11 and microsoft edge do not properly restrict access to private namespaces which allows remote attackers to gain privileges via unspecified vectors aka microsoft browser elevation of privilege vulnerability a different vulnerability than cve20163388,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge do not properly restrict access to private namespaces, which allows remote attackers to gain privileges via unspecified vectors, aka ""Microsoft Browser Elevation of Privilege Vulnerability,"" a different vulnerability than CVE-2016-3388.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-3388,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge do not properly restrict access to private namespaces, which allows remote attackers to gain privileges via unspecified vectors, aka ""Microsoft Browser Elevation of Privilege Vulnerability,"" a different vulnerability than CVE-2016-3387.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge do not properly restrict access to private namespaces, which allows remote attackers to gain privileges via unspecified vectors, aka ""Microsoft Browser Elevation of Privilege Vulnerability,"" a different vulnerability than CVE-2016-3387.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge do not properly restrict access to private namespaces, which allows remote attackers to gain privileges via unspecified vectors, aka ""Microsoft Browser Elevation of Privilege Vulnerability,"" a different vulnerability than CVE-2016-3387.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-10-14T02:59:24.930,,,nvd,microsoft internet explorer 10 and 11 and microsoft edge do not properly restrict access to private namespaces which allows remote attackers to gain privileges via unspecified vectors aka microsoft browser elevation of privilege vulnerability a different vulnerability than cve20163387,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge do not properly restrict access to private namespaces, which allows remote attackers to gain privileges via unspecified vectors, aka ""Microsoft Browser Elevation of Privilege Vulnerability,"" a different vulnerability than CVE-2016-3387.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-3391,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow context-dependent attackers to discover credentials by leveraging access to a memory dump, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows attackers to obtain sensitive information from memory dumps, potentially exposing credentials. Vendor: Microsoft Cause: Inadequate protection of sensitive data in memory Impact: Disclosure of credentials","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow context-dependent attackers to discover credentials by leveraging access to a memory dump, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows attackers to obtain sensitive information from memory dumps, potentially exposing credentials. Vendor: Microsoft Cause: Inadequate protection of sensitive data in memory Impact: Disclosure of credentials","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow context-dependent attackers to discover credentials by leveraging access to a memory dump, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows attackers to obtain sensitive information from memory dumps, potentially exposing credentials. Vendor: Microsoft Cause: Inadequate protection of sensitive data in memory Impact: Disclosure of credentials",2016-10-14T02:59:28.057,,,nvd,microsoft internet explorer 10 and 11 and microsoft edge allow contextdependent attackers to discover credentials by leveraging access to a memory dump aka microsoft browser information disclosure vulnerability,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow context-dependent attackers to discover credentials by leveraging access to a memory dump, aka ""Microsoft Browser Information Disclosure Vulnerability.""","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: The vulnerability allows attackers to obtain sensitive information from memory dumps, potentially exposing credentials. Vendor: Microsoft Cause: Inadequate protection of sensitive data in memory Impact: Disclosure of credentials"
CVE-2016-3392,"The Edge Content Security Policy feature in Microsoft Edge does not properly validate documents, which allows remote attackers to bypass intended access restrictions via a crafted web site, aka ""Microsoft Browser Security Feature Bypass Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Edge Content Security Policy feature in Microsoft Edge does not properly validate documents, which allows remote attackers to bypass intended access restrictions via a crafted web site, aka ""Microsoft Browser Security Feature Bypass Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Edge Content Security Policy feature in Microsoft Edge does not properly validate documents, which allows remote attackers to bypass intended access restrictions via a crafted web site, aka ""Microsoft Browser Security Feature Bypass Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-10-14T02:59:29.197,,,nvd,the edge content security policy feature in microsoft edge does not properly validate documents which allows remote attackers to bypass intended access restrictions via a crafted web site aka microsoft browser security feature bypass vulnerability,"The Edge Content Security Policy feature in Microsoft Edge does not properly validate documents, which allows remote attackers to bypass intended access restrictions via a crafted web site, aka ""Microsoft Browser Security Feature Bypass Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-7195,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-7198.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-7198.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-7198.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-11-10T06:59:11.420,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20167198,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-7198.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-7196,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-11-10T06:59:12.527,,,nvd,microsoft internet explorer 10 and 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 10 and 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-7198,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-7195.",Microsoft Edge Browser,CWE-20,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution or denial of service through memory corruption. This is a type of CWE-20, which is a general category for improper input handling leading to code execution. Vendor: Microsoft Cause: A crafted website can cause memory corruption in Microsoft Internet Explorer 9 through 11 and Microsoft Edge. Impact: This vulnerability can allow an attacker to execute arbitrary code or cause a denial of service on the affected systems.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-7195.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution or denial of service through memory corruption. This is a type of CWE-20, which is a general category for improper input handling leading to code execution. Vendor: Microsoft Cause: A crafted website can cause memory corruption in Microsoft Internet Explorer 9 through 11 and Microsoft Edge. Impact: This vulnerability can allow an attacker to execute arbitrary code or cause a denial of service on the affected systems.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-7195.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution or denial of service through memory corruption. This is a type of CWE-20, which is a general category for improper input handling leading to code execution. Vendor: Microsoft Cause: A crafted website can cause memory corruption in Microsoft Internet Explorer 9 through 11 and Microsoft Edge. Impact: This vulnerability can allow an attacker to execute arbitrary code or cause a denial of service on the affected systems.",2016-11-10T06:59:13.653,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability a different vulnerability than cve20167195,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability,"" a different vulnerability than CVE-2016-7195.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution or denial of service through memory corruption. This is a type of CWE-20, which is a general category for improper input handling leading to code execution. Vendor: Microsoft Cause: A crafted website can cause memory corruption in Microsoft Internet Explorer 9 through 11 and Microsoft Edge. Impact: This vulnerability can allow an attacker to execute arbitrary code or cause a denial of service on the affected systems."
CVE-2016-7199,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to bypass the Same Origin Policy and obtain sensitive window-state information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to bypass the Same Origin Policy and obtain sensitive window-state information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to bypass the Same Origin Policy and obtain sensitive window-state information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-11-10T06:59:14.687,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to bypass the same origin policy and obtain sensitive windowstate information via a crafted web site aka microsoft browser information disclosure vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to bypass the Same Origin Policy and obtain sensitive window-state information via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-7227,"The scripting engines in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to determine the existence of local files via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The scripting engines in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to determine the existence of local files via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The scripting engines in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to determine the existence of local files via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2016-11-10T06:59:40.097,,,nvd,the scripting engines in microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to determine the existence of local files via unspecified vectors aka microsoft browser information disclosure vulnerability,"The scripting engines in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to determine the existence of local files via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2016-7239,"The RegEx class in the XSS filter in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allows remote attackers to conduct cross-site scripting (XSS) attacks and obtain sensitive information via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper Neutralization of Input During Web Page Generation ('Cross-Site Scripting') Vendor: Microsoft Cause: The RegEx class in the XSS filter in Internet Explorer and Edge does not properly neutralize or sanitize user-supplied input in the context of a web page generation process, allowing remote attackers to inject malicious scripts. Impact: Successful exploitation could allow remote attackers to conduct cross-site scripting attacks and obtain sensitive information.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The RegEx class in the XSS filter in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allows remote attackers to conduct cross-site scripting (XSS) attacks and obtain sensitive information via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper Neutralization of Input During Web Page Generation ('Cross-Site Scripting') Vendor: Microsoft Cause: The RegEx class in the XSS filter in Internet Explorer and Edge does not properly neutralize or sanitize user-supplied input in the context of a web page generation process, allowing remote attackers to inject malicious scripts. Impact: Successful exploitation could allow remote attackers to conduct cross-site scripting attacks and obtain sensitive information.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The RegEx class in the XSS filter in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allows remote attackers to conduct cross-site scripting (XSS) attacks and obtain sensitive information via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper Neutralization of Input During Web Page Generation ('Cross-Site Scripting') Vendor: Microsoft Cause: The RegEx class in the XSS filter in Internet Explorer and Edge does not properly neutralize or sanitize user-supplied input in the context of a web page generation process, allowing remote attackers to inject malicious scripts. Impact: Successful exploitation could allow remote attackers to conduct cross-site scripting attacks and obtain sensitive information.",2016-11-10T06:59:52.317,,,nvd,the regex class in the xss filter in microsoft internet explorer 9 through 11 and microsoft edge allows remote attackers to conduct crosssite scripting xss attacks and obtain sensitive information via unspecified vectors aka microsoft browser information disclosure vulnerability,"The RegEx class in the XSS filter in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allows remote attackers to conduct cross-site scripting (XSS) attacks and obtain sensitive information via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper Neutralization of Input During Web Page Generation ('Cross-Site Scripting') Vendor: Microsoft Cause: The RegEx class in the XSS filter in Internet Explorer and Edge does not properly neutralize or sanitize user-supplied input in the context of a web page generation process, allowing remote attackers to inject malicious scripts. Impact: Successful exploitation could allow remote attackers to conduct cross-site scripting attacks and obtain sensitive information."
CVE-2016-7241,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-11-10T06:59:54.457,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-7279,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-12-20T06:59:00.983,,,nvd,microsoft internet explorer 9 through 11 and microsoft edge allow remote attackers to execute arbitrary code or cause a denial of service memory corruption via a crafted web site aka microsoft browser memory corruption vulnerability,"Microsoft Internet Explorer 9 through 11 and Microsoft Edge allow remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site, aka ""Microsoft Browser Memory Corruption Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-7281,"The Web Workers implementation in Microsoft Internet Explorer 10 and 11 and Microsoft Edge allows remote attackers to bypass the Same Origin Policy via unspecified vectors, aka ""Microsoft Browser Security Feature Bypass Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Web Workers implementation in Microsoft Internet Explorer 10 and 11 and Microsoft Edge allows remote attackers to bypass the Same Origin Policy via unspecified vectors, aka ""Microsoft Browser Security Feature Bypass Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Web Workers implementation in Microsoft Internet Explorer 10 and 11 and Microsoft Edge allows remote attackers to bypass the Same Origin Policy via unspecified vectors, aka ""Microsoft Browser Security Feature Bypass Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005",2016-12-20T06:59:01.047,,,nvd,the web workers implementation in microsoft internet explorer 10 and 11 and microsoft edge allows remote attackers to bypass the same origin policy via unspecified vectors aka microsoft browser security feature bypass vulnerability,"The Web Workers implementation in Microsoft Internet Explorer 10 and 11 and Microsoft Edge allows remote attackers to bypass the Same Origin Policy via unspecified vectors, aka ""Microsoft Browser Security Feature Bypass Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005
CVE-2016-7282,"Cross-site scripting (XSS) vulnerability in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site scripting (XSS) vulnerability in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site scripting (XSS) vulnerability in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2016-12-20T06:59:01.093,,,nvd,crosssite scripting xss vulnerability in microsoft internet explorer 9 through 11 and microsoft edge allows remote attackers to inject arbitrary web script or html via unspecified vectors aka microsoft browser information disclosure vulnerability,"Cross-site scripting (XSS) vulnerability in Microsoft Internet Explorer 9 through 11 and Microsoft Edge allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka ""Microsoft Browser Information Disclosure Vulnerability.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2017-0012,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to spoof web content via a crafted web site, aka ""Microsoft Browser Spoofing Vulnerability."" This vulnerability is different from those described in CVE-2017-0033 and CVE-2017-0069.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to spoof web content via a crafted web site, aka ""Microsoft Browser Spoofing Vulnerability."" This vulnerability is different from those described in CVE-2017-0033 and CVE-2017-0069.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to spoof web content via a crafted web site, aka ""Microsoft Browser Spoofing Vulnerability."" This vulnerability is different from those described in CVE-2017-0033 and CVE-2017-0069.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352",2017-03-17T00:59:00.417,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to spoof web content via a crafted web site aka microsoft browser spoofing vulnerability this vulnerability is different from those described in cve20170033 and cve20170069,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to spoof web content via a crafted web site, aka ""Microsoft Browser Spoofing Vulnerability."" This vulnerability is different from those described in CVE-2017-0033 and CVE-2017-0069.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352
CVE-2017-0033,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to spoof web content via a crafted web site, aka ""Microsoft Browser Spoofing Vulnerability."" This vulnerability is different from those described in CVE-2017-0012 and CVE-2017-0069.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 325,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to spoof web content via a crafted web site, aka ""Microsoft Browser Spoofing Vulnerability."" This vulnerability is different from those described in CVE-2017-0012 and CVE-2017-0069.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 325","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to spoof web content via a crafted web site, aka ""Microsoft Browser Spoofing Vulnerability."" This vulnerability is different from those described in CVE-2017-0012 and CVE-2017-0069.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 325",2017-03-17T00:59:01.007,,,nvd,microsoft internet explorer 11 and microsoft edge allow remote attackers to spoof web content via a crafted web site aka microsoft browser spoofing vulnerability this vulnerability is different from those described in cve20170012 and cve20170069,"Microsoft Internet Explorer 11 and Microsoft Edge allow remote attackers to spoof web content via a crafted web site, aka ""Microsoft Browser Spoofing Vulnerability."" This vulnerability is different from those described in CVE-2017-0012 and CVE-2017-0069.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 325
CVE-2017-0065,"Microsoft Edge allows remote attackers to obtain sensitive information from process memory via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability."" This vulnerability is different from those described in CVE-2017-0009, CVE-2017-0011, CVE-2017-0017, and CVE-2017-0068.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to obtain sensitive information from process memory via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability."" This vulnerability is different from those described in CVE-2017-0009, CVE-2017-0011, CVE-2017-0017, and CVE-2017-0068.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to obtain sensitive information from process memory via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability."" This vulnerability is different from those described in CVE-2017-0009, CVE-2017-0011, CVE-2017-0017, and CVE-2017-0068.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005",2017-03-17T00:59:01.680,,,nvd,microsoft edge allows remote attackers to obtain sensitive information from process memory via a crafted web site aka microsoft browser information disclosure vulnerability this vulnerability is different from those described in cve20170009 cve20170011 cve20170017 and cve20170068,"Microsoft Edge allows remote attackers to obtain sensitive information from process memory via a crafted web site, aka ""Microsoft Browser Information Disclosure Vulnerability."" This vulnerability is different from those described in CVE-2017-0009, CVE-2017-0011, CVE-2017-0017, and CVE-2017-0068.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005
CVE-2017-0066,"Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0135 and CVE-2017-0140.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0135 and CVE-2017-0140.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0135 and CVE-2017-0140.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2017-03-17T00:59:01.697,,,nvd,microsoft edge allows remote attackers to bypass the same origin policy for html elements in other browser windows aka microsoft edge security feature bypass vulnerability this vulnerability is different from those described in cve20170135 and cve20170140,"Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0135 and CVE-2017-0140.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2017-0068,"Browsers in Microsoft Edge allow remote attackers to obtain sensitive information from process memory via a crafted web site, aka ""Microsoft Edge Information Disclosure Vulnerability."" This vulnerability is different from those described in CVE-2017-0009, CVE-2017-0011, CVE-2017-0017, and CVE-2017-0",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Browsers in Microsoft Edge allow remote attackers to obtain sensitive information from process memory via a crafted web site, aka ""Microsoft Edge Information Disclosure Vulnerability."" This vulnerability is different from those described in CVE-2017-0009, CVE-2017-0011, CVE-2017-0017, and CVE-2017-0  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Browsers in Microsoft Edge allow remote attackers to obtain sensitive information from process memory via a crafted web site, aka ""Microsoft Edge Information Disclosure Vulnerability."" This vulnerability is different from those described in CVE-2017-0009, CVE-2017-0011, CVE-2017-0017, and CVE-2017-0  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005",2017-03-17T00:59:01.757,,,nvd,browsers in microsoft edge allow remote attackers to obtain sensitive information from process memory via a crafted web site aka microsoft edge information disclosure vulnerability this vulnerability is different from those described in cve20170009 cve20170011 cve20170017 and cve20170,"Browsers in Microsoft Edge allow remote attackers to obtain sensitive information from process memory via a crafted web site, aka ""Microsoft Edge Information Disclosure Vulnerability."" This vulnerability is different from those described in CVE-2017-0009, CVE-2017-0011, CVE-2017-0017, and CVE-2017-0",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005
CVE-2017-0135,"Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0066 and CVE-2017-0140.",Microsoft Edge Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94 Explanation: Improper control of generation of code ('Code Injection'). The vulnerability allows an attacker to inject arbitrary HTML content into another browser window, bypassing the same-origin policy restrictions. Vendor: Microsoft Cause: Microsoft Edge allows remote attackers to inject HTML content into other browser windows, bypassing the same-origin policy. Impact: Security Feature Bypass - Allows bypassing the same-origin policy for HTML elements in other browser windows, potentially leading to unauthorized access and data theft.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0066 and CVE-2017-0140.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94 Explanation: Improper control of generation of code ('Code Injection'). The vulnerability allows an attacker to inject arbitrary HTML content into another browser window, bypassing the same-origin policy restrictions. Vendor: Microsoft Cause: Microsoft Edge allows remote attackers to inject HTML content into other browser windows, bypassing the same-origin policy. Impact: Security Feature Bypass - Allows bypassing the same-origin policy for HTML elements in other browser windows, potentially leading to unauthorized access and data theft.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0066 and CVE-2017-0140.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94 Explanation: Improper control of generation of code ('Code Injection'). The vulnerability allows an attacker to inject arbitrary HTML content into another browser window, bypassing the same-origin policy restrictions. Vendor: Microsoft Cause: Microsoft Edge allows remote attackers to inject HTML content into other browser windows, bypassing the same-origin policy. Impact: Security Feature Bypass - Allows bypassing the same-origin policy for HTML elements in other browser windows, potentially leading to unauthorized access and data theft.",2017-03-17T00:59:03.790,,,nvd,microsoft edge allows remote attackers to bypass the same origin policy for html elements in other browser windows aka microsoft edge security feature bypass vulnerability this vulnerability is different from those described in cve20170066 and cve20170140,"Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0066 and CVE-2017-0140.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94 Explanation: Improper control of generation of code ('Code Injection'). The vulnerability allows an attacker to inject arbitrary HTML content into another browser window, bypassing the same-origin policy restrictions. Vendor: Microsoft Cause: Microsoft Edge allows remote attackers to inject HTML content into other browser windows, bypassing the same-origin policy. Impact: Security Feature Bypass - Allows bypassing the same-origin policy for HTML elements in other browser windows, potentially leading to unauthorized access and data theft."
CVE-2017-0140,"Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0066 and CVE-2017-0135.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0066 and CVE-2017-0135.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0066 and CVE-2017-0135.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-03-17T00:59:03.917,,,nvd,microsoft edge allows remote attackers to bypass the same origin policy for html elements in other browser windows aka microsoft edge security feature bypass vulnerability this vulnerability is different from those described in cve20170066 and cve20170135,"Microsoft Edge allows remote attackers to bypass the Same Origin Policy for HTML elements in other browser windows, aka ""Microsoft Edge Security Feature Bypass Vulnerability."" This vulnerability is different from those described in CVE-2017-0066 and CVE-2017-0135.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-0093,"A remote code execution vulnerability in Microsoft Edge exists in the way that the Scripting Engine renders when handling objects in memory in Microsoft browsers. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user, ak",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability in Microsoft Edge exists in the way that the Scripting Engine renders when handling objects in memory in Microsoft browsers. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user, ak  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability in Microsoft Edge exists in the way that the Scripting Engine renders when handling objects in memory in Microsoft browsers. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user, ak  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-04-12T14:59:00.217,,,nvd,a remote code execution vulnerability in microsoft edge exists in the way that the scripting engine renders when handling objects in memory in microsoft browsers the vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user ak,"A remote code execution vulnerability in Microsoft Edge exists in the way that the Scripting Engine renders when handling objects in memory in Microsoft browsers. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user, ak",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-0233,"An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This CVE ID is unique from CVE-2017-0241.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This CVE ID is unique from CVE-2017-0241.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This CVE ID is unique from CVE-2017-0241.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264",2017-05-12T14:29:02.643,,,nvd,an elevation of privilege vulnerability exists in microsoft edge that could allow an attacker to escape from the appcontainer sandbox in the browser aka microsoft edge elevation of privilege vulnerability this cve id is unique from cve20170241,"An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This CVE ID is unique from CVE-2017-0241.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264
CVE-2017-0241,"An elevation of privilege vulnerability exists when Microsoft Edge renders a domain-less page in the URL, which could allow Microsoft Edge to perform actions in the context of the Intranet Zone and access functionality that is not typically available to the browser when browsing in the context of th",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists when Microsoft Edge renders a domain-less page in the URL, which could allow Microsoft Edge to perform actions in the context of the Intranet Zone and access functionality that is not typically available to the browser when browsing in the context of th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists when Microsoft Edge renders a domain-less page in the URL, which could allow Microsoft Edge to perform actions in the context of the Intranet Zone and access functionality that is not typically available to the browser when browsing in the context of th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-05-12T14:29:03.537,,,nvd,an elevation of privilege vulnerability exists when microsoft edge renders a domainless page in the url which could allow microsoft edge to perform actions in the context of the intranet zone and access functionality that is not typically available to the browser when browsing in the context of th,"An elevation of privilege vulnerability exists when Microsoft Edge renders a domain-less page in the URL, which could allow Microsoft Edge to perform actions in the context of the Intranet Zone and access functionality that is not typically available to the browser when browsing in the context of th",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8498,"Microsoft Edge in Windows 10 1607 and 1703, and Windows Server 2016 allows an attacker to read data not intended to be disclosed when Edge allows JavaScript XML DOM objects to detect installed browser extensions, aka ""Microsoft Edge Information Disclosure Vulnerability"". This CVE ID is unique from C",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1607 and 1703, and Windows Server 2016 allows an attacker to read data not intended to be disclosed when Edge allows JavaScript XML DOM objects to detect installed browser extensions, aka ""Microsoft Edge Information Disclosure Vulnerability"". This CVE ID is unique from C  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1607 and 1703, and Windows Server 2016 allows an attacker to read data not intended to be disclosed when Edge allows JavaScript XML DOM objects to detect installed browser extensions, aka ""Microsoft Edge Information Disclosure Vulnerability"". This CVE ID is unique from C  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005",2017-06-15T01:29:03.633,,,nvd,microsoft edge in windows 10 1607 and 1703 and windows server 2016 allows an attacker to read data not intended to be disclosed when edge allows javascript xml dom objects to detect installed browser extensions aka microsoft edge information disclosure vulnerability this cve id is unique from c,"Microsoft Edge in Windows 10 1607 and 1703, and Windows Server 2016 allows an attacker to read data not intended to be disclosed when Edge allows JavaScript XML DOM objects to detect installed browser extensions, aka ""Microsoft Edge Information Disclosure Vulnerability"". This CVE ID is unique from C",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005
CVE-2017-8523,"Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, and 1703, and Windows Server 2016 allows an attacker to trick a user into loading a page with malicious content when Microsoft Edge fails to correctly apply Same Origin Policy for HTML elements present in other browser windows, aka ""Microsoft ",Microsoft Edge Browser,CWE-2005,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, and 1703, and Windows Server 2016 allows an attacker to trick a user into loading a page with malicious content when Microsoft Edge fails to correctly apply Same Origin Policy for HTML elements present in other browser windows, aka ""Microsoft  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, and 1703, and Windows Server 2016 allows an attacker to trick a user into loading a page with malicious content when Microsoft Edge fails to correctly apply Same Origin Policy for HTML elements present in other browser windows, aka ""Microsoft  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005",2017-06-15T01:29:04.193,,,nvd,microsoft edge in microsoft windows 10 gold 1511 1607 and 1703 and windows server 2016 allows an attacker to trick a user into loading a page with malicious content when microsoft edge fails to correctly apply same origin policy for html elements present in other browser windows aka microsoft,"Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, and 1703, and Windows Server 2016 allows an attacker to trick a user into loading a page with malicious content when Microsoft Edge fails to correctly apply Same Origin Policy for HTML elements present in other browser windows, aka ""Microsoft ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005
CVE-2017-8634,"Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is ",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:00.893,,,nvd,microsoft edge in microsoft windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption vulnerability this cve id is,"Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8638,"Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is ",Microsoft Edge Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code by exploiting a memory corruption vulnerability in the JavaScript engine when handling objects. This could lead to a complete compromise of the affected system. Vendor: Microsoft Cause: Flaw in the way the JavaScript engine in Microsoft Edge renders content and handles objects in memory. Impact: Arbitrary code execution with the privileges of the current user, potentially leading to complete system compromise.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code by exploiting a memory corruption vulnerability in the JavaScript engine when handling objects. This could lead to a complete compromise of the affected system. Vendor: Microsoft Cause: Flaw in the way the JavaScript engine in Microsoft Edge renders content and handles objects in memory. Impact: Arbitrary code execution with the privileges of the current user, potentially leading to complete system compromise.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code by exploiting a memory corruption vulnerability in the JavaScript engine when handling objects. This could lead to a complete compromise of the affected system. Vendor: Microsoft Cause: Flaw in the way the JavaScript engine in Microsoft Edge renders content and handles objects in memory. Impact: Arbitrary code execution with the privileges of the current user, potentially leading to complete system compromise.",2017-08-08T21:29:01.063,,,nvd,microsoft edge in microsoft windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption vulnerability this cve id is,"Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is ","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code by exploiting a memory corruption vulnerability in the JavaScript engine when handling objects. This could lead to a complete compromise of the affected system. Vendor: Microsoft Cause: Flaw in the way the JavaScript engine in Microsoft Edge renders content and handles objects in memory. Impact: Arbitrary code execution with the privileges of the current user, potentially leading to complete system compromise."
CVE-2017-8639,"Microsoft Edge in Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerabil",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerabil  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerabil  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.097,,,nvd,microsoft edge in windows 10 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption vulnerabil,"Microsoft Edge in Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerabil",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8640,"Microsoft Edge in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruptio",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruptio  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruptio  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.127,,,nvd,microsoft edge in windows 10 gold 1511 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruptio,"Microsoft Edge in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruptio",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8645,"Microsoft Edge in Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vuln",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vuln  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vuln  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.267,,,nvd,microsoft edge in windows 10 1511 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption vuln,"Microsoft Edge in Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vuln",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8646,"Microsoft Edge in Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vuln",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vuln  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vuln  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.297,,,nvd,microsoft edge in windows 10 1511 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption vuln,"Microsoft Edge in Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vuln",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8647,"Microsoft Edge in Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is unique fro",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is unique fro  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is unique fro  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.330,,,nvd,microsoft edge in windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption vulnerability this cve id is unique fro,"Microsoft Edge in Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is unique fro",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8655,"Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.517,,,nvd,microsoft edge in microsoft windows 10 gold 1511 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory,"Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8656,"Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption ",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.547,,,nvd,microsoft edge in microsoft windows 10 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption,"Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8657,"Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.580,,,nvd,microsoft edge in microsoft windows 10 1511 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corru,"Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8670,"Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption ",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.813,,,nvd,microsoft edge in microsoft windows 10 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption,"Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8671,"Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2017-08-08T21:29:01.860,,,nvd,microsoft edge in microsoft windows 10 1511 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corru,"Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2017-8672,"Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-08T21:29:01.893,,,nvd,microsoft edge in microsoft windows 10 1511 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corru,"Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corru",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8674,"Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is ",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CVE-2017-11826,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CVE-2017-11826","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CVE-2017-11826",2017-08-08T21:29:01.953,,,nvd,microsoft edge in microsoft windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption vulnerability this cve id is,"Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to execute arbitrary code in the context of the current user due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption Vulnerability"". This CVE ID is ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CVE-2017-11826
CVE-2017-8649,"Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user, due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user, due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user, due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-09-13T01:29:09.787,,,nvd,microsoft edge in microsoft windows 10 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corruption,"Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user, due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corruption",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8660,"Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user, due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corr",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user, due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corr  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user, due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corr  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-09-13T01:29:09.833,,,nvd,microsoft edge in microsoft windows 10 1511 1607 1703 and windows server 2016 allows an attacker to execute arbitrary code in the context of the current user due to the way that microsoft browser javascript engines render content when handling objects in memory aka scripting engine memory corr,"Microsoft Edge in Microsoft Windows 10 1511, 1607, 1703, and Windows Server 2016 allows an attacker to execute arbitrary code in the context of the current user, due to the way that Microsoft browser JavaScript engines render content when handling objects in memory, aka ""Scripting Engine Memory Corr",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-8736,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to obtain specific information used in the parent",Microsoft Edge Browser,CWE-200,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to obtain specific information used in the parent  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to obtain specific information used in the parent  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200",2017-09-13T01:29:11.397,,,nvd,internet explorer in microsoft windows 7 sp1 windows server 2008 r2 sp1 windows 81 and windows rt 81 windows server 2012 r2 and microsoft edge and internet explorer in windows 10 gold 1511 1607 1703 and windows server 2016 allow an attacker to obtain specific information used in the parent,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to obtain specific information used in the parent",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-200
CVE-2017-8741,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 SP2 and R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Internet Explorer and Microsoft Edge in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the cont",Microsoft Edge Browser,CWE-79,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Cross-site scripting (XSS) vulnerability allows an attacker to execute arbitrary code in the context of the user's browser. Vendor: Microsoft Cause: Improper neutralization of special elements used in an OS Command (CWE-79) in the handling of user-supplied input. Impact: Successful exploitation could allow an attacker to execute arbitrary code in the context of the user's browser, leading to potential compromise of the user's system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 SP2 and R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Internet Explorer and Microsoft Edge in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the cont  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Cross-site scripting (XSS) vulnerability allows an attacker to execute arbitrary code in the context of the user's browser. Vendor: Microsoft Cause: Improper neutralization of special elements used in an OS Command (CWE-79) in the handling of user-supplied input. Impact: Successful exploitation could allow an attacker to execute arbitrary code in the context of the user's browser, leading to potential compromise of the user's system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 SP2 and R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Internet Explorer and Microsoft Edge in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the cont  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Cross-site scripting (XSS) vulnerability allows an attacker to execute arbitrary code in the context of the user's browser. Vendor: Microsoft Cause: Improper neutralization of special elements used in an OS Command (CWE-79) in the handling of user-supplied input. Impact: Successful exploitation could allow an attacker to execute arbitrary code in the context of the user's browser, leading to potential compromise of the user's system.",2017-09-13T01:29:11.597,,,nvd,internet explorer in microsoft windows 7 sp1 windows server 2008 sp2 and r2 sp1 windows 81 and windows rt 81 windows server 2012 and r2 and internet explorer and microsoft edge in windows 10 gold 1511 1607 1703 and windows server 2016 allow an attacker to execute arbitrary code in the cont,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 SP2 and R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Internet Explorer and Microsoft Edge in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the cont","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Cross-site scripting (XSS) vulnerability allows an attacker to execute arbitrary code in the context of the user's browser. Vendor: Microsoft Cause: Improper neutralization of special elements used in an OS Command (CWE-79) in the handling of user-supplied input. Impact: Successful exploitation could allow an attacker to execute arbitrary code in the context of the user's browser, leading to potential compromise of the user's system."
CVE-2017-8748,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the context of the c",Microsoft Edge Browser,CWE-79,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Cross-Site Scripting (XSS) vulnerabilities allow an attacker to inject malicious scripts into web pages viewed by other users. Vendor: Microsoft Cause: Microsoft Edge and Internet Explorer did not properly sanitize user input, allowing an attacker to inject malicious scripts into web pages. Impact: An attacker could execute arbitrary code in the context of the current user, potentially leading to a complete system compromise.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the context of the c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Cross-Site Scripting (XSS) vulnerabilities allow an attacker to inject malicious scripts into web pages viewed by other users. Vendor: Microsoft Cause: Microsoft Edge and Internet Explorer did not properly sanitize user input, allowing an attacker to inject malicious scripts into web pages. Impact: An attacker could execute arbitrary code in the context of the current user, potentially leading to a complete system compromise.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the context of the c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Cross-Site Scripting (XSS) vulnerabilities allow an attacker to inject malicious scripts into web pages viewed by other users. Vendor: Microsoft Cause: Microsoft Edge and Internet Explorer did not properly sanitize user input, allowing an attacker to inject malicious scripts into web pages. Impact: An attacker could execute arbitrary code in the context of the current user, potentially leading to a complete system compromise.",2017-09-13T01:29:11.833,,,nvd,internet explorer in microsoft windows 7 sp1 windows server 2008 r2 sp1 windows 81 and windows rt 81 windows server 2012 r2 and microsoft edge and internet explorer in windows 10 gold 1511 1607 1703 and windows server 2016 allow an attacker to execute arbitrary code in the context of the c,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the context of the c","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79 Explanation: Cross-Site Scripting (XSS) vulnerabilities allow an attacker to inject malicious scripts into web pages viewed by other users. Vendor: Microsoft Cause: Microsoft Edge and Internet Explorer did not properly sanitize user input, allowing an attacker to inject malicious scripts into web pages. Impact: An attacker could execute arbitrary code in the context of the current user, potentially leading to a complete system compromise."
CVE-2017-8750,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the context of the c",Microsoft Edge Browser,CWE-264,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264 Explanation: Improper Access Control Vendor: Microsoft Cause: The vulnerability allows an attacker to execute arbitrary code in the context of the current user Impact: Arbitrary code execution can lead to full system compromise,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the context of the c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264 Explanation: Improper Access Control Vendor: Microsoft Cause: The vulnerability allows an attacker to execute arbitrary code in the context of the current user Impact: Arbitrary code execution can lead to full system compromise","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the context of the c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264 Explanation: Improper Access Control Vendor: Microsoft Cause: The vulnerability allows an attacker to execute arbitrary code in the context of the current user Impact: Arbitrary code execution can lead to full system compromise",2017-09-13T01:29:11.897,,,nvd,internet explorer in microsoft windows 7 sp1 windows server 2008 r2 sp1 windows 81 and windows rt 81 windows server 2012 r2 and microsoft edge and internet explorer in windows 10 gold 1511 1607 1703 and windows server 2016 allow an attacker to execute arbitrary code in the context of the c,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, and Windows Server 2016 allow an attacker to execute arbitrary code in the context of the c",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264 Explanation: Improper Access Control Vendor: Microsoft Cause: The vulnerability allows an attacker to execute arbitrary code in the context of the current user Impact: Arbitrary code execution can lead to full system compromise
CVE-2017-11827,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an attacker to gain t",Microsoft Edge Browser,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an attacker to gain t  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an attacker to gain t  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2017-11-15T03:29:00.390,,,nvd,internet explorer in microsoft windows 7 sp1 windows server 2008 r2 sp1 windows 81 and windows rt 81 windows server 2012 and r2 and microsoft edge and internet explorer in windows 10 gold 1511 1607 1703 1709 windows server 2016 and windows server version 1709 allows an attacker to gain t,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an attacker to gain t",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2017-11833,"Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an attacker to determine the origin of all webpages in the affected browser, due to how Microsoft Edge handles cross-origin requests, aka ""Microsoft Edge Information Discl",Microsoft Edge Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Insecure handling of cross-origin requests in Microsoft Edge allows an attacker to determine the origin of all webpages, leading to information disclosure. Vendor: Microsoft Cause: Microsoft Edge mishandles cross-origin requests, allowing attackers to determine the origin of webpages. Impact: Information disclosure of webpage origins","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an attacker to determine the origin of all webpages in the affected browser, due to how Microsoft Edge handles cross-origin requests, aka ""Microsoft Edge Information Discl  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Insecure handling of cross-origin requests in Microsoft Edge allows an attacker to determine the origin of all webpages, leading to information disclosure. Vendor: Microsoft Cause: Microsoft Edge mishandles cross-origin requests, allowing attackers to determine the origin of webpages. Impact: Information disclosure of webpage origins","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an attacker to determine the origin of all webpages in the affected browser, due to how Microsoft Edge handles cross-origin requests, aka ""Microsoft Edge Information Discl  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Insecure handling of cross-origin requests in Microsoft Edge allows an attacker to determine the origin of all webpages, leading to information disclosure. Vendor: Microsoft Cause: Microsoft Edge mishandles cross-origin requests, allowing attackers to determine the origin of webpages. Impact: Information disclosure of webpage origins",2017-11-15T03:29:00.513,,,nvd,microsoft edge in microsoft windows 10 gold 1511 1607 1703 1709 windows server 2016 and windows server version 1709 allows an attacker to determine the origin of all webpages in the affected browser due to how microsoft edge handles crossorigin requests aka microsoft edge information discl,"Microsoft Edge in Microsoft Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an attacker to determine the origin of all webpages in the affected browser, due to how Microsoft Edge handles cross-origin requests, aka ""Microsoft Edge Information Discl","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Insecure handling of cross-origin requests in Microsoft Edge allows an attacker to determine the origin of all webpages, leading to information disclosure. Vendor: Microsoft Cause: Microsoft Edge mishandles cross-origin requests, allowing attackers to determine the origin of webpages. Impact: Information disclosure of webpage origins"
CVE-2017-11858,"ChakraCore and Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 and R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ChakraCore and Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 and R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ChakraCore and Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 and R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2017-11-15T03:29:01.357,,,nvd,chakracore and internet explorer in microsoft windows 7 sp1 windows server 2008 and r2 sp1 windows 81 and windows rt 81 windows server 2012 and r2 and microsoft edge and internet explorer in windows 10 gold 1511 1607 1703 1709 windows server 2016 and windows server version 1709 allows an,"ChakraCore and Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 and R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows an",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2017-11872,"Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to force the browser to send data that would otherwise be restricted to a destination website of the attacker's choice, due to how Microsoft Edge handles redirect requests, aka ""Microsoft Edge Security Feat",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to force the browser to send data that would otherwise be restricted to a destination website of the attacker's choice, due to how Microsoft Edge handles redirect requests, aka ""Microsoft Edge Security Feat  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to force the browser to send data that would otherwise be restricted to a destination website of the attacker's choice, due to how Microsoft Edge handles redirect requests, aka ""Microsoft Edge Security Feat  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2017-11-15T03:29:01.623,,,nvd,microsoft edge in microsoft windows 10 1607 1703 and windows server 2016 allows an attacker to force the browser to send data that would otherwise be restricted to a destination website of the attackers choice due to how microsoft edge handles redirect requests aka microsoft edge security feat,"Microsoft Edge in Microsoft Windows 10 1607, 1703, and Windows Server 2016 allows an attacker to force the browser to send data that would otherwise be restricted to a destination website of the attacker's choice, due to how Microsoft Edge handles redirect requests, aka ""Microsoft Edge Security Feat",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2018-0927,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows information disclosur",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows information disclosur  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows information disclosur  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2018-03-14T17:29:03.230,,,nvd,internet explorer in microsoft windows 7 sp1 windows server 2008 r2 sp1 windows 81 and windows rt 81 windows server 2012 and r2 and microsoft edge and internet explorer in windows 10 gold 1511 1607 1703 1709 windows server 2016 and windows server version 1709 allows information disclosur,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows information disclosur",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2018-0932,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows information disclosur",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows information disclosur  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows information disclosur  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2018-03-14T17:29:03.450,,,nvd,internet explorer in microsoft windows 7 sp1 windows server 2008 r2 sp1 windows 81 and windows rt 81 windows server 2012 and r2 and microsoft edge and internet explorer in windows 10 gold 1511 1607 1703 1709 windows server 2016 and windows server version 1709 allows information disclosur,"Internet Explorer in Microsoft Windows 7 SP1, Windows Server 2008 R2 SP1, Windows 8.1 and Windows RT 8.1, Windows Server 2012 and R2, and Microsoft Edge and Internet Explorer in Windows 10 Gold, 1511, 1607, 1703, 1709, Windows Server 2016 and Windows Server, version 1709 allows information disclosur",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2018-1023,"A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects Microsoft Edge, ChakraCore.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects Microsoft Edge, ChakraCore.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects Microsoft Edge, ChakraCore.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254",2018-04-12T01:29:10.003,,,nvd,a remote code execution vulnerability exists in the way that microsoft browsers access objects in memory aka microsoft browser memory corruption vulnerability this affects microsoft edge chakracore,"A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects Microsoft Edge, ChakraCore.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254
CVE-2018-0954,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 9, ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID ",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation leading to remote code execution Vendor: Microsoft Cause: The scripting engine mishandles objects in memory Impact: Remote code execution,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 9, ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation leading to remote code execution Vendor: Microsoft Cause: The scripting engine mishandles objects in memory Impact: Remote code execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 9, ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation leading to remote code execution Vendor: Microsoft Cause: The scripting engine mishandles objects in memory Impact: Remote code execution",2018-05-09T19:29:00.713,,,nvd,a remote code execution vulnerability exists in the way the scripting engine handles objects in memory in microsoft browsers aka scripting engine memory corruption vulnerability this affects internet explorer 9 chakracore internet explorer 11 microsoft edge internet explorer 10 this cve id,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 9, ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation leading to remote code execution Vendor: Microsoft Cause: The scripting engine mishandles objects in memory Impact: Remote code execution
CVE-2018-1022,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-0945, CVE-2018-0946",Microsoft Edge Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-0945, CVE-2018-0946  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-0945, CVE-2018-0946  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2018-05-09T19:29:00.963,,,nvd,a remote code execution vulnerability exists in the way the scripting engine handles objects in memory in microsoft browsers aka scripting engine memory corruption vulnerability this affects chakracore internet explorer 11 microsoft edge this cve id is unique from cve20180945 cve20180946,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-0945, CVE-2018-0946",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2018-1025,"An information disclosure vulnerability exists when affected Microsoft browsers improperly handle objects in memory, aka ""Microsoft Browser Information Disclosure Vulnerability."" This affects Internet Explorer 11, Microsoft Edge.",Microsoft Edge Browser,CWE-125,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a type of memory corruption vulnerability where an application improperly handles objects in memory, potentially leading to information disclosure. Vendor: Microsoft Cause: Microsoft browsers, including Internet Explorer 11 and Microsoft Edge, mishandle objects in memory. Impact: Information disclosure vulnerability that could allow an attacker to access sensitive information.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An information disclosure vulnerability exists when affected Microsoft browsers improperly handle objects in memory, aka ""Microsoft Browser Information Disclosure Vulnerability."" This affects Internet Explorer 11, Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a type of memory corruption vulnerability where an application improperly handles objects in memory, potentially leading to information disclosure. Vendor: Microsoft Cause: Microsoft browsers, including Internet Explorer 11 and Microsoft Edge, mishandle objects in memory. Impact: Information disclosure vulnerability that could allow an attacker to access sensitive information.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An information disclosure vulnerability exists when affected Microsoft browsers improperly handle objects in memory, aka ""Microsoft Browser Information Disclosure Vulnerability."" This affects Internet Explorer 11, Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a type of memory corruption vulnerability where an application improperly handles objects in memory, potentially leading to information disclosure. Vendor: Microsoft Cause: Microsoft browsers, including Internet Explorer 11 and Microsoft Edge, mishandle objects in memory. Impact: Information disclosure vulnerability that could allow an attacker to access sensitive information.",2018-05-09T19:29:01.010,,,nvd,an information disclosure vulnerability exists when affected microsoft browsers improperly handle objects in memory aka microsoft browser information disclosure vulnerability this affects internet explorer 11 microsoft edge,"An information disclosure vulnerability exists when affected Microsoft browsers improperly handle objects in memory, aka ""Microsoft Browser Information Disclosure Vulnerability."" This affects Internet Explorer 11, Microsoft Edge.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: CWE-125 is a type of memory corruption vulnerability where an application improperly handles objects in memory, potentially leading to information disclosure. Vendor: Microsoft Cause: Microsoft browsers, including Internet Explorer 11 and Microsoft Edge, mishandle objects in memory. Impact: Information disclosure vulnerability that could allow an attacker to access sensitive information."
CVE-2018-8178,"A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge.",Microsoft Edge Browser,CWE-1254,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254",2018-05-09T19:29:02.980,,,nvd,a remote code execution vulnerability exists in the way that microsoft browsers access objects in memory aka microsoft browser memory corruption vulnerability this affects chakracore internet explorer 11 microsoft edge,"A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254
CVE-2018-8287,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID is unique from CVE-20",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID is unique from CVE-20  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID is unique from CVE-20  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2018-07-11T00:29:01.303,,,nvd,a remote code execution vulnerability exists in the way the scripting engine handles objects in memory in microsoft browsers aka scripting engine memory corruption vulnerability this affects chakracore internet explorer 11 microsoft edge internet explorer 10 this cve id is unique from cve20,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID is unique from CVE-20",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2018-8288,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8242, CVE-2018-8283",Microsoft Edge Browser,CWE-20,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target machine by exploiting a memory corruption vulnerability in the scripting engine. This is a classic example of a CWE-20 issue, where improper input handling leads to remote code execution. Vendor: Microsoft Cause: The vulnerability is due to improper handling of objects in memory by the scripting engine in Microsoft browsers. Impact: An attacker could execute arbitrary code on the target machine, potentially leading to a complete compromise of the system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8242, CVE-2018-8283  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target machine by exploiting a memory corruption vulnerability in the scripting engine. This is a classic example of a CWE-20 issue, where improper input handling leads to remote code execution. Vendor: Microsoft Cause: The vulnerability is due to improper handling of objects in memory by the scripting engine in Microsoft browsers. Impact: An attacker could execute arbitrary code on the target machine, potentially leading to a complete compromise of the system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8242, CVE-2018-8283  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target machine by exploiting a memory corruption vulnerability in the scripting engine. This is a classic example of a CWE-20 issue, where improper input handling leads to remote code execution. Vendor: Microsoft Cause: The vulnerability is due to improper handling of objects in memory by the scripting engine in Microsoft browsers. Impact: An attacker could execute arbitrary code on the target machine, potentially leading to a complete compromise of the system.",2018-07-11T00:29:01.350,,,nvd,a remote code execution vulnerability exists in the way the scripting engine handles objects in memory in microsoft browsers aka scripting engine memory corruption vulnerability this affects chakracore internet explorer 11 microsoft edge this cve id is unique from cve20188242 cve20188283,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8242, CVE-2018-8283","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target machine by exploiting a memory corruption vulnerability in the scripting engine. This is a classic example of a CWE-20 issue, where improper input handling leads to remote code execution. Vendor: Microsoft Cause: The vulnerability is due to improper handling of objects in memory by the scripting engine in Microsoft browsers. Impact: An attacker could execute arbitrary code on the target machine, potentially leading to a complete compromise of the system."
CVE-2018-8291,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8242, CVE-2018-8283",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution through memory corruption in the scripting engine. Vendor: Microsoft Cause: The way the scripting engine handles objects in memory. Impact: A remote attacker could execute arbitrary code on the affected system.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8242, CVE-2018-8283  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution through memory corruption in the scripting engine. Vendor: Microsoft Cause: The way the scripting engine handles objects in memory. Impact: A remote attacker could execute arbitrary code on the affected system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8242, CVE-2018-8283  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution through memory corruption in the scripting engine. Vendor: Microsoft Cause: The way the scripting engine handles objects in memory. Impact: A remote attacker could execute arbitrary code on the affected system.",2018-07-11T00:29:01.493,,,nvd,a remote code execution vulnerability exists in the way the scripting engine handles objects in memory in microsoft browsers aka scripting engine memory corruption vulnerability this affects chakracore internet explorer 11 microsoft edge this cve id is unique from cve20188242 cve20188283,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8242, CVE-2018-8283",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote code execution through memory corruption in the scripting engine. Vendor: Microsoft Cause: The way the scripting engine handles objects in memory. Impact: A remote attacker could execute arbitrary code on the affected system.
CVE-2018-8351,"An information disclosure vulnerability exists when affected Microsoft browsers improperly allow cross-frame interaction, aka ""Microsoft Browser Information Disclosure Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10.",Microsoft Edge Browser,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An information disclosure vulnerability exists when affected Microsoft browsers improperly allow cross-frame interaction, aka ""Microsoft Browser Information Disclosure Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An information disclosure vulnerability exists when affected Microsoft browsers improperly allow cross-frame interaction, aka ""Microsoft Browser Information Disclosure Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2018-08-15T17:29:05.487,,,nvd,an information disclosure vulnerability exists when affected microsoft browsers improperly allow crossframe interaction aka microsoft browser information disclosure vulnerability this affects internet explorer 11 microsoft edge internet explorer 10,"An information disclosure vulnerability exists when affected Microsoft browsers improperly allow cross-frame interaction, aka ""Microsoft Browser Information Disclosure Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2018-8355,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8353, CVE-2018-8359",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8353, CVE-2018-8359  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8353, CVE-2018-8359  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2018-08-15T17:29:05.737,,,nvd,a remote code execution vulnerability exists in the way the scripting engine handles objects in memory in microsoft browsers aka scripting engine memory corruption vulnerability this affects chakracore internet explorer 11 microsoft edge this cve id is unique from cve20188353 cve20188359,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8353, CVE-2018-8359",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2018-8357,"An elevation of privilege vulnerability exists in Microsoft browsers allowing sandbox escape, aka ""Microsoft Browser Elevation of Privilege Vulnerability."" This affects Internet Explorer 11, Microsoft Edge.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft browsers allowing sandbox escape, aka ""Microsoft Browser Elevation of Privilege Vulnerability."" This affects Internet Explorer 11, Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft browsers allowing sandbox escape, aka ""Microsoft Browser Elevation of Privilege Vulnerability."" This affects Internet Explorer 11, Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264",2018-08-15T17:29:05.847,,,nvd,an elevation of privilege vulnerability exists in microsoft browsers allowing sandbox escape aka microsoft browser elevation of privilege vulnerability this affects internet explorer 11 microsoft edge,"An elevation of privilege vulnerability exists in Microsoft browsers allowing sandbox escape, aka ""Microsoft Browser Elevation of Privilege Vulnerability."" This affects Internet Explorer 11, Microsoft Edge.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264
CVE-2018-8372,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8353, CVE-2018-8355",Microsoft Edge Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target system by exploiting a memory corruption vulnerability in the way the scripting engine handles objects in memory. This could lead to remote code execution. Vendor: Microsoft Cause: The vulnerability is due to how the ChakraCore scripting engine and Microsoft Edge and Internet Explorer 11 handle objects in memory. Impact: Successful exploitation could allow remote attackers to execute arbitrary code on the target system, leading to a complete compromise of the system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8353, CVE-2018-8355  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target system by exploiting a memory corruption vulnerability in the way the scripting engine handles objects in memory. This could lead to remote code execution. Vendor: Microsoft Cause: The vulnerability is due to how the ChakraCore scripting engine and Microsoft Edge and Internet Explorer 11 handle objects in memory. Impact: Successful exploitation could allow remote attackers to execute arbitrary code on the target system, leading to a complete compromise of the system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8353, CVE-2018-8355  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target system by exploiting a memory corruption vulnerability in the way the scripting engine handles objects in memory. This could lead to remote code execution. Vendor: Microsoft Cause: The vulnerability is due to how the ChakraCore scripting engine and Microsoft Edge and Internet Explorer 11 handle objects in memory. Impact: Successful exploitation could allow remote attackers to execute arbitrary code on the target system, leading to a complete compromise of the system.",2018-08-15T17:29:06.550,,,nvd,a remote code execution vulnerability exists in the way the scripting engine handles objects in memory in microsoft browsers aka scripting engine memory corruption vulnerability this affects chakracore internet explorer 11 microsoft edge this cve id is unique from cve20188353 cve20188355,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge. This CVE ID is unique from CVE-2018-8353, CVE-2018-8355","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target system by exploiting a memory corruption vulnerability in the way the scripting engine handles objects in memory. This could lead to remote code execution. Vendor: Microsoft Cause: The vulnerability is due to how the ChakraCore scripting engine and Microsoft Edge and Internet Explorer 11 handle objects in memory. Impact: Successful exploitation could allow remote attackers to execute arbitrary code on the target system, leading to a complete compromise of the system."
CVE-2018-8385,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 9, ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID ",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 9, ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 9, ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2018-08-15T17:29:08.080,,,nvd,a remote code execution vulnerability exists in the way the scripting engine handles objects in memory in microsoft browsers aka scripting engine memory corruption vulnerability this affects internet explorer 9 chakracore internet explorer 11 microsoft edge internet explorer 10 this cve id,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 9, ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2018-8403,"A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2018-08-15T17:29:09.830,,,nvd,a remote code execution vulnerability exists in the way that microsoft browsers access objects in memory aka microsoft browser memory corruption vulnerability this affects internet explorer 11 microsoft edge internet explorer 10,"A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory, aka ""Microsoft Browser Memory Corruption Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2018-8315,"An information disclosure vulnerability exists when the browser scripting engine improperly handle object types, aka ""Microsoft Scripting Engine Information Disclosure Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An information disclosure vulnerability exists when the browser scripting engine improperly handle object types, aka ""Microsoft Scripting Engine Information Disclosure Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An information disclosure vulnerability exists when the browser scripting engine improperly handle object types, aka ""Microsoft Scripting Engine Information Disclosure Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2018-09-13T00:29:00.630,,,nvd,an information disclosure vulnerability exists when the browser scripting engine improperly handle object types aka microsoft scripting engine information disclosure vulnerability this affects chakracore internet explorer 11 microsoft edge internet explorer 10,"An information disclosure vulnerability exists when the browser scripting engine improperly handle object types, aka ""Microsoft Scripting Engine Information Disclosure Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge, Internet Explorer 10.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2018-8452,"An information disclosure vulnerability exists when the scripting engine does not properly handle objects in memory in Microsoft browsers, aka ""Scripting Engine Information Disclosure Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: Improper restriction of operations within the bounds of a memory buffer Vendor: Microsoft Cause: The scripting engine does not properly handle objects in memory Impact: Information disclosure vulnerability,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An information disclosure vulnerability exists when the scripting engine does not properly handle objects in memory in Microsoft browsers, aka ""Scripting Engine Information Disclosure Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: Improper restriction of operations within the bounds of a memory buffer Vendor: Microsoft Cause: The scripting engine does not properly handle objects in memory Impact: Information disclosure vulnerability","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An information disclosure vulnerability exists when the scripting engine does not properly handle objects in memory in Microsoft browsers, aka ""Scripting Engine Information Disclosure Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: Improper restriction of operations within the bounds of a memory buffer Vendor: Microsoft Cause: The scripting engine does not properly handle objects in memory Impact: Information disclosure vulnerability",2018-09-13T00:29:05.397,,,nvd,an information disclosure vulnerability exists when the scripting engine does not properly handle objects in memory in microsoft browsers aka scripting engine information disclosure vulnerability this affects chakracore internet explorer 11 microsoft edge,"An information disclosure vulnerability exists when the scripting engine does not properly handle objects in memory in Microsoft browsers, aka ""Scripting Engine Information Disclosure Vulnerability."" This affects ChakraCore, Internet Explorer 11, Microsoft Edge.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: Improper restriction of operations within the bounds of a memory buffer Vendor: Microsoft Cause: The scripting engine does not properly handle objects in memory Impact: Information disclosure vulnerability
CVE-2018-8457,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID is unique from CVE-2018-8354, CVE",Microsoft Edge Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target system by exploiting a memory corruption vulnerability in the scripting engine of Microsoft browsers. This can lead to remote code execution. Vendor: Microsoft Cause: The scripting engine mishandles objects in memory, leading to memory corruption. Impact: Remote code execution, allowing attackers to take control of the affected system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID is unique from CVE-2018-8354, CVE  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target system by exploiting a memory corruption vulnerability in the scripting engine of Microsoft browsers. This can lead to remote code execution. Vendor: Microsoft Cause: The scripting engine mishandles objects in memory, leading to memory corruption. Impact: Remote code execution, allowing attackers to take control of the affected system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID is unique from CVE-2018-8354, CVE  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target system by exploiting a memory corruption vulnerability in the scripting engine of Microsoft browsers. This can lead to remote code execution. Vendor: Microsoft Cause: The scripting engine mishandles objects in memory, leading to memory corruption. Impact: Remote code execution, allowing attackers to take control of the affected system.",2018-09-13T00:29:05.723,,,nvd,a remote code execution vulnerability exists in the way the scripting engine handles objects in memory in microsoft browsers aka scripting engine memory corruption vulnerability this affects internet explorer 11 microsoft edge internet explorer 10 this cve id is unique from cve20188354 cve,"A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka ""Scripting Engine Memory Corruption Vulnerability."" This affects Internet Explorer 11, Microsoft Edge, Internet Explorer 10. This CVE ID is unique from CVE-2018-8354, CVE","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows an attacker to execute arbitrary code on the target system by exploiting a memory corruption vulnerability in the scripting engine of Microsoft browsers. This can lead to remote code execution. Vendor: Microsoft Cause: The scripting engine mishandles objects in memory, leading to memory corruption. Impact: Remote code execution, allowing attackers to take control of the affected system."
CVE-2018-8463,"An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge. This CVE ID is unique from CVE-2018-8469.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge. This CVE ID is unique from CVE-2018-8469.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge. This CVE ID is unique from CVE-2018-8469.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264",2018-09-13T00:29:06.160,,,nvd,an elevation of privilege vulnerability exists in microsoft edge that could allow an attacker to escape from the appcontainer sandbox in the browser aka microsoft edge elevation of privilege vulnerability this affects microsoft edge this cve id is unique from cve20188469,"An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge. This CVE ID is unique from CVE-2018-8469.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264
CVE-2018-8469,"An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge. This CVE ID is unique from CVE-2018-8463.",Microsoft Edge Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: The vulnerability allows an attacker to escape from the AppContainer sandbox in the browser, which could lead to privilege escalation. Vendor: Microsoft Cause: A vulnerability in Microsoft Edge that allows an attacker to escape the AppContainer sandbox. Impact: An attacker could gain elevated privileges within the system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge. This CVE ID is unique from CVE-2018-8463.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: The vulnerability allows an attacker to escape from the AppContainer sandbox in the browser, which could lead to privilege escalation. Vendor: Microsoft Cause: A vulnerability in Microsoft Edge that allows an attacker to escape the AppContainer sandbox. Impact: An attacker could gain elevated privileges within the system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge. This CVE ID is unique from CVE-2018-8463.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: The vulnerability allows an attacker to escape from the AppContainer sandbox in the browser, which could lead to privilege escalation. Vendor: Microsoft Cause: A vulnerability in Microsoft Edge that allows an attacker to escape the AppContainer sandbox. Impact: An attacker could gain elevated privileges within the system.",2018-09-13T00:29:06.850,,,nvd,an elevation of privilege vulnerability exists in microsoft edge that could allow an attacker to escape from the appcontainer sandbox in the browser aka microsoft edge elevation of privilege vulnerability this affects microsoft edge this cve id is unique from cve20188463,"An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge. This CVE ID is unique from CVE-2018-8463.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: The vulnerability allows an attacker to escape from the AppContainer sandbox in the browser, which could lead to privilege escalation. Vendor: Microsoft Cause: A vulnerability in Microsoft Edge that allows an attacker to escape the AppContainer sandbox. Impact: An attacker could gain elevated privileges within the system."
CVE-2019-0566,"An elevation of privilege vulnerability exists in Microsoft Edge Browser Broker COM object, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge Browser Broker COM object, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge Browser Broker COM object, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264",2019-01-08T21:29:01.393,,,nvd,an elevation of privilege vulnerability exists in microsoft edge browser broker com object aka microsoft edge elevation of privilege vulnerability this affects microsoft edge,"An elevation of privilege vulnerability exists in Microsoft Edge Browser Broker COM object, aka ""Microsoft Edge Elevation of Privilege Vulnerability."" This affects Microsoft Edge.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264
CVE-2019-0938,"An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka 'Microsoft Edge Elevation of Privilege Vulnerability'.",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka 'Microsoft Edge Elevation of Privilege Vulnerability'.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka 'Microsoft Edge Elevation of Privilege Vulnerability'.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264",2019-05-16T19:29:03.757,,,nvd,an elevation of privilege vulnerability exists in microsoft edge that could allow an attacker to escape from the appcontainer sandbox in the browser aka microsoft edge elevation of privilege vulnerability,"An elevation of privilege vulnerability exists in Microsoft Edge that could allow an attacker to escape from the AppContainer sandbox in the browser, aka 'Microsoft Edge Elevation of Privilege Vulnerability'.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264
CVE-2019-18652,"A DOM based XSS vulnerability has been identified on the WatchGuard XMT515 through 12.1.3, allowing a remote attacker to execute JavaScript in the victim's browser by tricking the victim into clicking on a crafted link. The payload was tested in Microsoft Internet Explorer 11.418.18362.0 and Microso",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A DOM based XSS vulnerability has been identified on the WatchGuard XMT515 through 12.1.3, allowing a remote attacker to execute JavaScript in the victim's browser by tricking the victim into clicking on a crafted link. The payload was tested in Microsoft Internet Explorer 11.418.18362.0 and Microso  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A DOM based XSS vulnerability has been identified on the WatchGuard XMT515 through 12.1.3, allowing a remote attacker to execute JavaScript in the victim's browser by tricking the victim into clicking on a crafted link. The payload was tested in Microsoft Internet Explorer 11.418.18362.0 and Microso  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2020-01-07T22:15:12.427,6.1,MEDIUM,nvd,a dom based xss vulnerability has been identified on the watchguard xmt515 through 1213 allowing a remote attacker to execute javascript in the victims browser by tricking the victim into clicking on a crafted link the payload was tested in microsoft internet explorer 11418183620 and microso,"A DOM based XSS vulnerability has been identified on the WatchGuard XMT515 through 12.1.3, allowing a remote attacker to execute JavaScript in the victim's browser by tricking the victim into clicking on a crafted link. The payload was tested in Microsoft Internet Explorer 11.418.18362.0 and Microso",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2024-22125,"Under certain conditions the Microsoft Edge browser extension (SAP GUI connector for Microsoft Edge)��- version 1.0, allows an attacker to access highly sensitive information which would otherwise be restricted causing high impact on confidentiality.

",Microsoft Edge Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 521,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Under certain conditions the Microsoft Edge browser extension (SAP GUI connector for Microsoft Edge) - version 1.0, allows an attacker to access highly sensitive information which would otherwise be restricted causing high impact on confidentiality.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Under certain conditions the Microsoft Edge browser extension (SAP GUI connector for Microsoft Edge) - version 1.0, allows an attacker to access highly sensitive information which would otherwise be restricted causing high impact on confidentiality.",2024-01-09T02:15:46.413,7.4,HIGH,nvd,"under certain conditions the microsoft edge browser extension sap gui connector for microsoft edge�� version 10 allows an attacker to access highly sensitive information which would otherwise be restricted causing high impact on confidentiality

","Under certain conditions the Microsoft Edge browser extension (SAP GUI connector for Microsoft Edge)��- version 1.0, allows an attacker to access highly sensitive information which would otherwise be restricted causing high impact on confidentiality.

",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 521
CVE-2004-0718,"The (1) Mozilla 1.6, (2) Firebird 0.7, (3) Firefox 0.8, and (4) Netscape 7.1 web browsers do not properly prevent a frame in one domain from injecting content into a frame that belongs to another domain, which facilitates web site spoofing and other attacks, aka the frame injection vulnerability.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The (1) Mozilla 1.6, (2) Firebird 0.7, (3) Firefox 0.8, and (4) Netscape 7.1 web browsers do not properly prevent a frame in one domain from injecting content into a frame that belongs to another domain, which facilitates web site spoofing and other attacks, aka the frame injection vulnerability.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The (1) Mozilla 1.6, (2) Firebird 0.7, (3) Firefox 0.8, and (4) Netscape 7.1 web browsers do not properly prevent a frame in one domain from injecting content into a frame that belongs to another domain, which facilitates web site spoofing and other attacks, aka the frame injection vulnerability.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2004-07-27T04:00:00.000,,,nvd,the 1 mozilla 16 2 firebird 07 3 firefox 08 and 4 netscape 71 web browsers do not properly prevent a frame in one domain from injecting content into a frame that belongs to another domain which facilitates web site spoofing and other attacks aka the frame injection vulnerability,"The (1) Mozilla 1.6, (2) Firebird 0.7, (3) Firefox 0.8, and (4) Netscape 7.1 web browsers do not properly prevent a frame in one domain from injecting content into a frame that belongs to another domain, which facilitates web site spoofing and other attacks, aka the frame injection vulnerability.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2004-0779,"The (1) Mozilla 1.6, (2) Firebird 0.7 and (3) Firefox 0.8 web browsers do not properly verify that cached passwords for SSL encrypted sites are only sent via SSL encrypted sessions to the site, which allows a remote attacker to cause a cached password to be sent in cleartext to a spoofed site.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The (1) Mozilla 1.6, (2) Firebird 0.7 and (3) Firefox 0.8 web browsers do not properly verify that cached passwords for SSL encrypted sites are only sent via SSL encrypted sessions to the site, which allows a remote attacker to cause a cached password to be sent in cleartext to a spoofed site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The (1) Mozilla 1.6, (2) Firebird 0.7 and (3) Firefox 0.8 web browsers do not properly verify that cached passwords for SSL encrypted sites are only sent via SSL encrypted sessions to the site, which allows a remote attacker to cause a cached password to be sent in cleartext to a spoofed site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310",2004-08-18T04:00:00.000,,,nvd,the 1 mozilla 16 2 firebird 07 and 3 firefox 08 web browsers do not properly verify that cached passwords for ssl encrypted sites are only sent via ssl encrypted sessions to the site which allows a remote attacker to cause a cached password to be sent in cleartext to a spoofed site,"The (1) Mozilla 1.6, (2) Firebird 0.7 and (3) Firefox 0.8 web browsers do not properly verify that cached passwords for SSL encrypted sites are only sent via SSL encrypted sessions to the site, which allows a remote attacker to cause a cached password to be sent in cleartext to a spoofed site.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 310
CVE-2005-2260,"The browser user interface in Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 and 7.2 does not properly distinguish between user-generated events and untrusted synthetic events, which makes it easier for remote attackers to perform dangerous actions that normally could only be perform",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser user interface in Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 and 7.2 does not properly distinguish between user-generated events and untrusted synthetic events, which makes it easier for remote attackers to perform dangerous actions that normally could only be perform  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser user interface in Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 and 7.2 does not properly distinguish between user-generated events and untrusted synthetic events, which makes it easier for remote attackers to perform dangerous actions that normally could only be perform  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2005-07-13T04:00:00.000,,,nvd,the browser user interface in firefox before 105 mozilla before 179 and netscape 802 and 72 does not properly distinguish between usergenerated events and untrusted synthetic events which makes it easier for remote attackers to perform dangerous actions that normally could only be perform,"The browser user interface in Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 and 7.2 does not properly distinguish between user-generated events and untrusted synthetic events, which makes it easier for remote attackers to perform dangerous actions that normally could only be perform",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2005-2414,"Race condition in the xpcom library, as used by web browsers such as Firefox, Mozilla, Netscape, and Galeon, allows remote attackers to cause a denial of service (application crash) via a large HTML file that loads a DOM call from within nested DIV tags, which causes part of the currently rendering ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Race condition in the xpcom library, as used by web browsers such as Firefox, Mozilla, Netscape, and Galeon, allows remote attackers to cause a denial of service (application crash) via a large HTML file that loads a DOM call from within nested DIV tags, which causes part of the currently rendering  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Race condition in the xpcom library, as used by web browsers such as Firefox, Mozilla, Netscape, and Galeon, allows remote attackers to cause a denial of service (application crash) via a large HTML file that loads a DOM call from within nested DIV tags, which causes part of the currently rendering  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2005-08-03T04:00:00.000,,,nvd,race condition in the xpcom library as used by web browsers such as firefox mozilla netscape and galeon allows remote attackers to cause a denial of service application crash via a large html file that loads a dom call from within nested div tags which causes part of the currently rendering,"Race condition in the xpcom library, as used by web browsers such as Firefox, Mozilla, Netscape, and Galeon, allows remote attackers to cause a denial of service (application crash) via a large HTML file that loads a DOM call from within nested DIV tags, which causes part of the currently rendering ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2005-2968,"Firefox 1.0.6 and Mozilla 1.7.10 allows attackers to execute arbitrary commands via shell metacharacters in a URL that is provided to the browser on the command line, which is sent unfiltered to bash.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Firefox 1.0.6 and Mozilla 1.7.10 allows attackers to execute arbitrary commands via shell metacharacters in a URL that is provided to the browser on the command line, which is sent unfiltered to bash.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Firefox 1.0.6 and Mozilla 1.7.10 allows attackers to execute arbitrary commands via shell metacharacters in a URL that is provided to the browser on the command line, which is sent unfiltered to bash.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78",2005-09-20T22:03:00.000,,,nvd,firefox 106 and mozilla 1710 allows attackers to execute arbitrary commands via shell metacharacters in a url that is provided to the browser on the command line which is sent unfiltered to bash,"Firefox 1.0.6 and Mozilla 1.7.10 allows attackers to execute arbitrary commands via shell metacharacters in a URL that is provided to the browser on the command line, which is sent unfiltered to bash.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78
CVE-2006-2332,Mozilla Firefox 1.5.0.3 allows remote attackers to cause a denial of service via a web page with a large number of IMG elements in which the SRC attribute is a mailto URI.  NOTE: another researcher found that the web page caused a temporary browser slowdown instead of a crash.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 1.5.0.3 allows remote attackers to cause a denial of service via a web page with a large number of IMG elements in which the SRC attribute is a mailto URI. NOTE: another researcher found that the web page caused a temporary browser slowdown instead of a crash.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 1.5.0.3 allows remote attackers to cause a denial of service via a web page with a large number of IMG elements in which the SRC attribute is a mailto URI. NOTE: another researcher found that the web page caused a temporary browser slowdown instead of a crash.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2006-05-12T00:02:00.000,,,nvd,mozilla firefox 1503 allows remote attackers to cause a denial of service via a web page with a large number of img elements in which the src attribute is a mailto uri  note another researcher found that the web page caused a temporary browser slowdown instead of a crash,Mozilla Firefox 1.5.0.3 allows remote attackers to cause a denial of service via a web page with a large number of IMG elements in which the SRC attribute is a mailto URI.  NOTE: another researcher found that the web page caused a temporary browser slowdown instead of a crash.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2006-3227,"Interpretation conflict between Internet Explorer and other web browsers such as Mozilla, Opera, and Firefox might allow remote attackers to modify the visual presentation of web pages and possibly bypass protection mechanisms such as content filters via ASCII characters with the 8th bit set, which ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 189,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Interpretation conflict between Internet Explorer and other web browsers such as Mozilla, Opera, and Firefox might allow remote attackers to modify the visual presentation of web pages and possibly bypass protection mechanisms such as content filters via ASCII characters with the 8th bit set, which  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 189","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Interpretation conflict between Internet Explorer and other web browsers such as Mozilla, Opera, and Firefox might allow remote attackers to modify the visual presentation of web pages and possibly bypass protection mechanisms such as content filters via ASCII characters with the 8th bit set, which  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 189",2006-06-26T16:05:00.000,,,nvd,interpretation conflict between internet explorer and other web browsers such as mozilla opera and firefox might allow remote attackers to modify the visual presentation of web pages and possibly bypass protection mechanisms such as content filters via ascii characters with the 8th bit set which,"Interpretation conflict between Internet Explorer and other web browsers such as Mozilla, Opera, and Firefox might allow remote attackers to modify the visual presentation of web pages and possibly bypass protection mechanisms such as content filters via ASCII characters with the 8th bit set, which ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 189
CVE-2006-4253,"Concurrency vulnerability in Mozilla Firefox 1.5.0.6 and earlier allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via multiple Javascript timed events that load a deeply nested XML file, followed by redirecting the browser to another page, which leads ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Concurrency vulnerability in Mozilla Firefox 1.5.0.6 and earlier allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via multiple Javascript timed events that load a deeply nested XML file, followed by redirecting the browser to another page, which leads  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Concurrency vulnerability in Mozilla Firefox 1.5.0.6 and earlier allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via multiple Javascript timed events that load a deeply nested XML file, followed by redirecting the browser to another page, which leads  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2006-08-21T20:04:00.000,,,nvd,concurrency vulnerability in mozilla firefox 1506 and earlier allows remote attackers to cause a denial of service crash and possibly execute arbitrary code via multiple javascript timed events that load a deeply nested xml file followed by redirecting the browser to another page which leads,"Concurrency vulnerability in Mozilla Firefox 1.5.0.6 and earlier allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via multiple Javascript timed events that load a deeply nested XML file, followed by redirecting the browser to another page, which leads ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2006-4561,"Mozilla Firefox 1.5.0.6 allows remote attackers to execute arbitrary JavaScript in the context of the browser's session with an arbitrary intranet web server, by hosting script on an Internet web server that can be made inaccessible by the attacker and that has a domain name under the attacker's con",Mozilla Firefox Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 1.5.0.6 allows remote attackers to execute arbitrary JavaScript in the context of the browser's session with an arbitrary intranet web server, by hosting script on an Internet web server that can be made inaccessible by the attacker and that has a domain name under the attacker's con  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 1.5.0.6 allows remote attackers to execute arbitrary JavaScript in the context of the browser's session with an arbitrary intranet web server, by hosting script on an Internet web server that can be made inaccessible by the attacker and that has a domain name under the attacker's con  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2006-09-06T00:04:00.000,,,nvd,mozilla firefox 1506 allows remote attackers to execute arbitrary javascript in the context of the browsers session with an arbitrary intranet web server by hosting script on an internet web server that can be made inaccessible by the attacker and that has a domain name under the attackers con,"Mozilla Firefox 1.5.0.6 allows remote attackers to execute arbitrary JavaScript in the context of the browser's session with an arbitrary intranet web server, by hosting script on an Internet web server that can be made inaccessible by the attacker and that has a domain name under the attacker's con",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2007-0981,"Mozilla based browsers, including Firefox before 1.5.0.10 and 2.x before 2.0.0.2, and SeaMonkey before 1.0.8, allow remote attackers to bypass the same origin policy, steal cookies, and conduct other attacks by writing a URI with a null byte to the hostname (location.hostname) DOM property, due to i",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla based browsers, including Firefox before 1.5.0.10 and 2.x before 2.0.0.2, and SeaMonkey before 1.0.8, allow remote attackers to bypass the same origin policy, steal cookies, and conduct other attacks by writing a URI with a null byte to the hostname (location.hostname) DOM property, due to i  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla based browsers, including Firefox before 1.5.0.10 and 2.x before 2.0.0.2, and SeaMonkey before 1.0.8, allow remote attackers to bypass the same origin policy, steal cookies, and conduct other attacks by writing a URI with a null byte to the hostname (location.hostname) DOM property, due to i  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2007-02-16T01:28:00.000,,,nvd,mozilla based browsers including firefox before 15010 and 2x before 2002 and seamonkey before 108 allow remote attackers to bypass the same origin policy steal cookies and conduct other attacks by writing a uri with a null byte to the hostname locationhostname dom property due to i,"Mozilla based browsers, including Firefox before 1.5.0.10 and 2.x before 2.0.0.2, and SeaMonkey before 1.0.8, allow remote attackers to bypass the same origin policy, steal cookies, and conduct other attacks by writing a URI with a null byte to the hostname (location.hostname) DOM property, due to i",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2007-0780,"browser.js in Mozilla Firefox 1.5.x before 1.5.0.10 and 2.x before 2.0.0.2, and SeaMonkey before 1.0.8 uses the requesting URI to identify child windows, which allows remote attackers to conduct cross-site scripting (XSS) attacks by opening a blocked popup originating from a javascript: URI in combi",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser.js in Mozilla Firefox 1.5.x before 1.5.0.10 and 2.x before 2.0.0.2, and SeaMonkey before 1.0.8 uses the requesting URI to identify child windows, which allows remote attackers to conduct cross-site scripting (XSS) attacks by opening a blocked popup originating from a javascript: URI in combi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser.js in Mozilla Firefox 1.5.x before 1.5.0.10 and 2.x before 2.0.0.2, and SeaMonkey before 1.0.8 uses the requesting URI to identify child windows, which allows remote attackers to conduct cross-site scripting (XSS) attacks by opening a blocked popup originating from a javascript: URI in combi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2007-02-26T20:28:00.000,,,nvd,browserjs in mozilla firefox 15x before 15010 and 2x before 2002 and seamonkey before 108 uses the requesting uri to identify child windows which allows remote attackers to conduct crosssite scripting xss attacks by opening a blocked popup originating from a javascript uri in combi,"browser.js in Mozilla Firefox 1.5.x before 1.5.0.10 and 2.x before 2.0.0.2, and SeaMonkey before 1.0.8 uses the requesting URI to identify child windows, which allows remote attackers to conduct cross-site scripting (XSS) attacks by opening a blocked popup originating from a javascript: URI in combi",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2007-1116,"The CheckLoadURI function in Mozilla Firefox 1.8 lists the about: URI as a ChromeProtocol and can be loaded via JavaScript, which allows remote attackers to obtain sensitive information by querying the browser's session history.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The CheckLoadURI function in Mozilla Firefox 1.8 lists the about: URI as a ChromeProtocol and can be loaded via JavaScript, which allows remote attackers to obtain sensitive information by querying the browser's session history.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The CheckLoadURI function in Mozilla Firefox 1.8 lists the about: URI as a ChromeProtocol and can be loaded via JavaScript, which allows remote attackers to obtain sensitive information by querying the browser's session history.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94",2007-02-26T23:28:00.000,,,nvd,the checkloaduri function in mozilla firefox 18 lists the about uri as a chromeprotocol and can be loaded via javascript which allows remote attackers to obtain sensitive information by querying the browsers session history,"The CheckLoadURI function in Mozilla Firefox 1.8 lists the about: URI as a ChromeProtocol and can be loaded via JavaScript, which allows remote attackers to obtain sensitive information by querying the browser's session history.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94
CVE-2007-1878,"Cross-zone scripting vulnerability in the DOM templates (domplates) used by the console.log function in the Firebug extension before 1.03 for Mozilla Firefox allows remote attackers to bypass zone restrictions, read arbitrary file:// URIs, or execute arbitrary code in the browser chrome, as demonstr",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-zone scripting vulnerability in the DOM templates (domplates) used by the console.log function in the Firebug extension before 1.03 for Mozilla Firefox allows remote attackers to bypass zone restrictions, read arbitrary file:// URIs, or execute arbitrary code in the browser chrome, as demonstr  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-zone scripting vulnerability in the DOM templates (domplates) used by the console.log function in the Firebug extension before 1.03 for Mozilla Firefox allows remote attackers to bypass zone restrictions, read arbitrary file:// URIs, or execute arbitrary code in the browser chrome, as demonstr  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2007-04-06T00:19:00.000,,,nvd,crosszone scripting vulnerability in the dom templates domplates used by the consolelog function in the firebug extension before 103 for mozilla firefox allows remote attackers to bypass zone restrictions read arbitrary file uris or execute arbitrary code in the browser chrome as demonstr,"Cross-zone scripting vulnerability in the DOM templates (domplates) used by the console.log function in the Firebug extension before 1.03 for Mozilla Firefox allows remote attackers to bypass zone restrictions, read arbitrary file:// URIs, or execute arbitrary code in the browser chrome, as demonstr",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2007-1947,"Cross-zone scripting vulnerability in the DOM templates (domplates) used by the console.log function in the Firebug extension before 1.04 for Mozilla Firefox allows remote attackers to bypass zone restrictions, read arbitrary file:// URIs, or execute arbitrary code in the browser chrome by overwriti",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-zone scripting vulnerability in the DOM templates (domplates) used by the console.log function in the Firebug extension before 1.04 for Mozilla Firefox allows remote attackers to bypass zone restrictions, read arbitrary file:// URIs, or execute arbitrary code in the browser chrome by overwriti  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-zone scripting vulnerability in the DOM templates (domplates) used by the console.log function in the Firebug extension before 1.04 for Mozilla Firefox allows remote attackers to bypass zone restrictions, read arbitrary file:// URIs, or execute arbitrary code in the browser chrome by overwriti  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2007-04-11T01:19:00.000,,,nvd,crosszone scripting vulnerability in the dom templates domplates used by the consolelog function in the firebug extension before 104 for mozilla firefox allows remote attackers to bypass zone restrictions read arbitrary file uris or execute arbitrary code in the browser chrome by overwriti,"Cross-zone scripting vulnerability in the DOM templates (domplates) used by the console.log function in the Firebug extension before 1.04 for Mozilla Firefox allows remote attackers to bypass zone restrictions, read arbitrary file:// URIs, or execute arbitrary code in the browser chrome by overwriti",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2007-2060,Cross-zone scripting vulnerability in the Wizz RSS Reader before 2.1.9 extension to Mozilla Firefox allows remote attackers to execute arbitrary Javascript in the browser chrome via the RSS feed DOM.,Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper neutralization of script-related HTML tags in a web page or newswiring format. This vulnerability allows the execution of arbitrary JavaScript code in the browser's context. Vendor: Mozilla Cause: The Wizz RSS Reader extension for Mozilla Firefox did not properly sanitize the RSS feed content, allowing malicious JavaScript to be executed in the browser's chrome context. Impact: Successful exploitation could allow remote attackers to execute arbitrary JavaScript code in the browser context, potentially leading to a wide range of attacks, including stealing sensitive information, performing unauthorized actions, and compromising user data.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-zone scripting vulnerability in the Wizz RSS Reader before 2.1.9 extension to Mozilla Firefox allows remote attackers to execute arbitrary Javascript in the browser chrome via the RSS feed DOM.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper neutralization of script-related HTML tags in a web page or newswiring format. This vulnerability allows the execution of arbitrary JavaScript code in the browser's context. Vendor: Mozilla Cause: The Wizz RSS Reader extension for Mozilla Firefox did not properly sanitize the RSS feed content, allowing malicious JavaScript to be executed in the browser's chrome context. Impact: Successful exploitation could allow remote attackers to execute arbitrary JavaScript code in the browser context, potentially leading to a wide range of attacks, including stealing sensitive information, performing unauthorized actions, and compromising user data.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-zone scripting vulnerability in the Wizz RSS Reader before 2.1.9 extension to Mozilla Firefox allows remote attackers to execute arbitrary Javascript in the browser chrome via the RSS feed DOM.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper neutralization of script-related HTML tags in a web page or newswiring format. This vulnerability allows the execution of arbitrary JavaScript code in the browser's context. Vendor: Mozilla Cause: The Wizz RSS Reader extension for Mozilla Firefox did not properly sanitize the RSS feed content, allowing malicious JavaScript to be executed in the browser's chrome context. Impact: Successful exploitation could allow remote attackers to execute arbitrary JavaScript code in the browser context, potentially leading to a wide range of attacks, including stealing sensitive information, performing unauthorized actions, and compromising user data.",2007-04-18T03:19:00.000,,,nvd,crosszone scripting vulnerability in the wizz rss reader before 219 extension to mozilla firefox allows remote attackers to execute arbitrary javascript in the browser chrome via the rss feed dom,Cross-zone scripting vulnerability in the Wizz RSS Reader before 2.1.9 extension to Mozilla Firefox allows remote attackers to execute arbitrary Javascript in the browser chrome via the RSS feed DOM.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper neutralization of script-related HTML tags in a web page or newswiring format. This vulnerability allows the execution of arbitrary JavaScript code in the browser's context. Vendor: Mozilla Cause: The Wizz RSS Reader extension for Mozilla Firefox did not properly sanitize the RSS feed content, allowing malicious JavaScript to be executed in the browser's chrome context. Impact: Successful exploitation could allow remote attackers to execute arbitrary JavaScript code in the browser context, potentially leading to a wide range of attacks, including stealing sensitive information, performing unauthorized actions, and compromising user data."
CVE-2007-2871,"Mozilla Firefox 1.5.x before 1.5.0.12 and 2.x before 2.0.0.4, and SeaMonkey 1.0.9 and 1.1.2, allows remote attackers to spoof or hide the browser chrome, such as the location bar, by placing XUL popups outside of the browser's content pane.  NOTE: this issue can be leveraged for phishing and other a",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 1.5.x before 1.5.0.12 and 2.x before 2.0.0.4, and SeaMonkey 1.0.9 and 1.1.2, allows remote attackers to spoof or hide the browser chrome, such as the location bar, by placing XUL popups outside of the browser's content pane. NOTE: this issue can be leveraged for phishing and other a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 1.5.x before 1.5.0.12 and 2.x before 2.0.0.4, and SeaMonkey 1.0.9 and 1.1.2, allows remote attackers to spoof or hide the browser chrome, such as the location bar, by placing XUL popups outside of the browser's content pane. NOTE: this issue can be leveraged for phishing and other a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345",2007-06-01T00:30:00.000,,,nvd,mozilla firefox 15x before 15012 and 2x before 2004 and seamonkey 109 and 112 allows remote attackers to spoof or hide the browser chrome such as the location bar by placing xul popups outside of the browsers content pane  note this issue can be leveraged for phishing and other a,"Mozilla Firefox 1.5.x before 1.5.0.12 and 2.x before 2.0.0.4, and SeaMonkey 1.0.9 and 1.1.2, allows remote attackers to spoof or hide the browser chrome, such as the location bar, by placing XUL popups outside of the browser's content pane.  NOTE: this issue can be leveraged for phishing and other a",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345
CVE-2007-3656,"Mozilla Firefox before 1.8.0.13 and 1.8.1.x before 1.8.1.5 does not perform a security zone check when processing a wyciwyg URI, which allows remote attackers to obtain sensitive information, poison the browser cache, and possibly enable further attack vectors via (1) HTTP 302 redirect controls, (2)",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 1.8.0.13 and 1.8.1.x before 1.8.1.5 does not perform a security zone check when processing a wyciwyg URI, which allows remote attackers to obtain sensitive information, poison the browser cache, and possibly enable further attack vectors via (1) HTTP 302 redirect controls, (2)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 1.8.0.13 and 1.8.1.x before 1.8.1.5 does not perform a security zone check when processing a wyciwyg URI, which allows remote attackers to obtain sensitive information, poison the browser cache, and possibly enable further attack vectors via (1) HTTP 302 redirect controls, (2)  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352",2007-07-10T19:30:00.000,,,nvd,mozilla firefox before 18013 and 181x before 1815 does not perform a security zone check when processing a wyciwyg uri which allows remote attackers to obtain sensitive information poison the browser cache and possibly enable further attack vectors via 1 http 302 redirect controls 2,"Mozilla Firefox before 1.8.0.13 and 1.8.1.x before 1.8.1.5 does not perform a security zone check when processing a wyciwyg URI, which allows remote attackers to obtain sensitive information, poison the browser cache, and possibly enable further attack vectors via (1) HTTP 302 redirect controls, (2)",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352
CVE-2007-3734,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 2.0.0.5 and Thunderbird before 2.0.0.5 allow remote attackers to cause a denial of service (crash) via unspecified vectors that trigger memory corruption.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to cause a denial of service (crash) by triggering memory corruption in the browser engine. This is an out-of-bounds read vulnerability. Vendor: Mozilla Cause: Unspecified vectors triggering memory corruption in the browser engine Impact: Denial of Service,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 2.0.0.5 and Thunderbird before 2.0.0.5 allow remote attackers to cause a denial of service (crash) via unspecified vectors that trigger memory corruption.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to cause a denial of service (crash) by triggering memory corruption in the browser engine. This is an out-of-bounds read vulnerability. Vendor: Mozilla Cause: Unspecified vectors triggering memory corruption in the browser engine Impact: Denial of Service","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 2.0.0.5 and Thunderbird before 2.0.0.5 allow remote attackers to cause a denial of service (crash) via unspecified vectors that trigger memory corruption.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to cause a denial of service (crash) by triggering memory corruption in the browser engine. This is an out-of-bounds read vulnerability. Vendor: Mozilla Cause: Unspecified vectors triggering memory corruption in the browser engine Impact: Denial of Service",2007-07-18T17:30:00.000,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 2005 and thunderbird before 2005 allow remote attackers to cause a denial of service crash via unspecified vectors that trigger memory corruption,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 2.0.0.5 and Thunderbird before 2.0.0.5 allow remote attackers to cause a denial of service (crash) via unspecified vectors that trigger memory corruption.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows an attacker to cause a denial of service (crash) by triggering memory corruption in the browser engine. This is an out-of-bounds read vulnerability. Vendor: Mozilla Cause: Unspecified vectors triggering memory corruption in the browser engine Impact: Denial of Service
CVE-2008-0412,"The browser engine in Mozilla Firefox before 2.0.0.12, Thunderbird before 2.0.0.12, and SeaMonkey before 1.1.8 allows remote attackers to cause a denial of service (crash) and possibly trigger memory corruption via vectors related to the (1) nsTableFrame::GetFrameAtOrBefore, (2) nsAccessibilityServi",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 2.0.0.12, Thunderbird before 2.0.0.12, and SeaMonkey before 1.1.8 allows remote attackers to cause a denial of service (crash) and possibly trigger memory corruption via vectors related to the (1) nsTableFrame::GetFrameAtOrBefore, (2) nsAccessibilityServi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 2.0.0.12, Thunderbird before 2.0.0.12, and SeaMonkey before 1.1.8 allows remote attackers to cause a denial of service (crash) and possibly trigger memory corruption via vectors related to the (1) nsTableFrame::GetFrameAtOrBefore, (2) nsAccessibilityServi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2008-02-08T22:00:00.000,,,nvd,the browser engine in mozilla firefox before 20012 thunderbird before 20012 and seamonkey before 118 allows remote attackers to cause a denial of service crash and possibly trigger memory corruption via vectors related to the 1 nstableframegetframeatorbefore 2 nsaccessibilityservi,"The browser engine in Mozilla Firefox before 2.0.0.12, Thunderbird before 2.0.0.12, and SeaMonkey before 1.1.8 allows remote attackers to cause a denial of service (crash) and possibly trigger memory corruption via vectors related to the (1) nsTableFrame::GetFrameAtOrBefore, (2) nsAccessibilityServi",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2008-0592,"Mozilla Firefox before 2.0.0.12 and SeaMonkey before 1.1.8 allows user-assisted remote attackers to cause a denial of service via a plain .txt file with a ""Content-Disposition: attachment"" and an invalid ""Content-Type: plain/text,"" which prevents Firefox from rendering future plain text files within",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 2.0.0.12 and SeaMonkey before 1.1.8 allows user-assisted remote attackers to cause a denial of service via a plain .txt file with a ""Content-Disposition: attachment"" and an invalid ""Content-Type: plain/text,"" which prevents Firefox from rendering future plain text files within  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 2.0.0.12 and SeaMonkey before 1.1.8 allows user-assisted remote attackers to cause a denial of service via a plain .txt file with a ""Content-Disposition: attachment"" and an invalid ""Content-Type: plain/text,"" which prevents Firefox from rendering future plain text files within  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22",2008-02-09T00:00:00.000,,,nvd,mozilla firefox before 20012 and seamonkey before 118 allows userassisted remote attackers to cause a denial of service via a plain txt file with a contentdisposition attachment and an invalid contenttype plaintext which prevents firefox from rendering future plain text files within,"Mozilla Firefox before 2.0.0.12 and SeaMonkey before 1.1.8 allows user-assisted remote attackers to cause a denial of service via a plain .txt file with a ""Content-Disposition: attachment"" and an invalid ""Content-Type: plain/text,"" which prevents Firefox from rendering future plain text files within",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 22
CVE-2008-0593,"Gecko-based browsers, including Mozilla Firefox before 2.0.0.12 and SeaMonkey before 1.1.8, modify the .href property of stylesheet DOM nodes to the final URI of a 302 redirect, which might allow remote attackers to bypass the Same Origin Policy and read sensitive information from the original URL, ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Gecko-based browsers, including Mozilla Firefox before 2.0.0.12 and SeaMonkey before 1.1.8, modify the .href property of stylesheet DOM nodes to the final URI of a 302 redirect, which might allow remote attackers to bypass the Same Origin Policy and read sensitive information from the original URL,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Gecko-based browsers, including Mozilla Firefox before 2.0.0.12 and SeaMonkey before 1.1.8, modify the .href property of stylesheet DOM nodes to the final URI of a 302 redirect, which might allow remote attackers to bypass the Same Origin Policy and read sensitive information from the original URL,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2008-02-09T01:00:00.000,,,nvd,geckobased browsers including mozilla firefox before 20012 and seamonkey before 118 modify the href property of stylesheet dom nodes to the final uri of a 302 redirect which might allow remote attackers to bypass the same origin policy and read sensitive information from the original url,"Gecko-based browsers, including Mozilla Firefox before 2.0.0.12 and SeaMonkey before 1.1.8, modify the .href property of stylesheet DOM nodes to the final URI of a 302 redirect, which might allow remote attackers to bypass the Same Origin Policy and read sensitive information from the original URL, ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2008-2027,"Open redirect vulnerability in WebID/IISWebAgentIF.dll in RSA Authentication Agent 5.3.0.258 for Web for IIS, when accessed via certain browsers such as Mozilla Firefox, allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via an ftp URL in the url parameter ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Open redirect vulnerability in WebID/IISWebAgentIF.dll in RSA Authentication Agent 5.3.0.258 for Web for IIS, when accessed via certain browsers such as Mozilla Firefox, allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via an ftp URL in the url parameter  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Open redirect vulnerability in WebID/IISWebAgentIF.dll in RSA Authentication Agent 5.3.0.258 for Web for IIS, when accessed via certain browsers such as Mozilla Firefox, allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via an ftp URL in the url parameter  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2008-04-30T14:10:00.000,,,nvd,open redirect vulnerability in webidiiswebagentifdll in rsa authentication agent 530258 for web for iis when accessed via certain browsers such as mozilla firefox allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via an ftp url in the url parameter,"Open redirect vulnerability in WebID/IISWebAgentIF.dll in RSA Authentication Agent 5.3.0.258 for Web for IIS, when accessed via certain browsers such as Mozilla Firefox, allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via an ftp URL in the url parameter ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2008-2809,"Mozilla 1.9 M8 and earlier, Mozilla Firefox 2 before 2.0.0.15, SeaMonkey 1.1.5 and other versions before 1.1.10, Netscape 9.0, and other Mozilla-based web browsers, when a user accepts an SSL server certificate on the basis of the CN domain name in the DN field, regard the certificate as also accept",Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295 Explanation: This vulnerability allows an attacker to bypass the certificate validation by manipulating the Common Name (CN) field in the certificate's Distinguished Name (DN) field. This allows the browser to accept a certificate that does not match the domain name. Vendor: Mozilla Cause: The browser accepts SSL certificates based on the CN field in the certificate's DN without proper validation. Impact: This vulnerability allows man-in-the-middle attacks, where an attacker can intercept and modify traffic between the client and server.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla 1.9 M8 and earlier, Mozilla Firefox 2 before 2.0.0.15, SeaMonkey 1.1.5 and other versions before 1.1.10, Netscape 9.0, and other Mozilla-based web browsers, when a user accepts an SSL server certificate on the basis of the CN domain name in the DN field, regard the certificate as also accept  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295 Explanation: This vulnerability allows an attacker to bypass the certificate validation by manipulating the Common Name (CN) field in the certificate's Distinguished Name (DN) field. This allows the browser to accept a certificate that does not match the domain name. Vendor: Mozilla Cause: The browser accepts SSL certificates based on the CN field in the certificate's DN without proper validation. Impact: This vulnerability allows man-in-the-middle attacks, where an attacker can intercept and modify traffic between the client and server.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla 1.9 M8 and earlier, Mozilla Firefox 2 before 2.0.0.15, SeaMonkey 1.1.5 and other versions before 1.1.10, Netscape 9.0, and other Mozilla-based web browsers, when a user accepts an SSL server certificate on the basis of the CN domain name in the DN field, regard the certificate as also accept  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295 Explanation: This vulnerability allows an attacker to bypass the certificate validation by manipulating the Common Name (CN) field in the certificate's Distinguished Name (DN) field. This allows the browser to accept a certificate that does not match the domain name. Vendor: Mozilla Cause: The browser accepts SSL certificates based on the CN field in the certificate's DN without proper validation. Impact: This vulnerability allows man-in-the-middle attacks, where an attacker can intercept and modify traffic between the client and server.",2008-07-08T23:41:00.000,,,nvd,mozilla 19 m8 and earlier mozilla firefox 2 before 20015 seamonkey 115 and other versions before 1110 netscape 90 and other mozillabased web browsers when a user accepts an ssl server certificate on the basis of the cn domain name in the dn field regard the certificate as also accept,"Mozilla 1.9 M8 and earlier, Mozilla Firefox 2 before 2.0.0.15, SeaMonkey 1.1.5 and other versions before 1.1.10, Netscape 9.0, and other Mozilla-based web browsers, when a user accepts an SSL server certificate on the basis of the CN domain name in the DN field, regard the certificate as also accept","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 295 Explanation: This vulnerability allows an attacker to bypass the certificate validation by manipulating the Common Name (CN) field in the certificate's Distinguished Name (DN) field. This allows the browser to accept a certificate that does not match the domain name. Vendor: Mozilla Cause: The browser accepts SSL certificates based on the CN field in the certificate's DN without proper validation. Impact: This vulnerability allows man-in-the-middle attacks, where an attacker can intercept and modify traffic between the client and server."
CVE-2008-5017,"Integer overflow in xpcom/io/nsEscape.cpp in the browser engine in Mozilla Firefox 3.x before 3.0.4, Firefox 2.x before 2.0.0.18, Thunderbird 2.x before 2.0.0.18, and SeaMonkey 1.x before 1.1.13 allows remote attackers to cause a denial of service (crash) via unknown vectors.",Mozilla Firefox Browser,CWE-190,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Integer overflow in xpcom/io/nsEscape.cpp in the browser engine in Mozilla Firefox 3.x before 3.0.4, Firefox 2.x before 2.0.0.18, Thunderbird 2.x before 2.0.0.18, and SeaMonkey 1.x before 1.1.13 allows remote attackers to cause a denial of service (crash) via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Integer overflow in xpcom/io/nsEscape.cpp in the browser engine in Mozilla Firefox 3.x before 3.0.4, Firefox 2.x before 2.0.0.18, Thunderbird 2.x before 2.0.0.18, and SeaMonkey 1.x before 1.1.13 allows remote attackers to cause a denial of service (crash) via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190",2008-11-13T11:30:01.313,,,nvd,integer overflow in xpcomionsescapecpp in the browser engine in mozilla firefox 3x before 304 firefox 2x before 20018 thunderbird 2x before 20018 and seamonkey 1x before 1113 allows remote attackers to cause a denial of service crash via unknown vectors,"Integer overflow in xpcom/io/nsEscape.cpp in the browser engine in Mozilla Firefox 3.x before 3.0.4, Firefox 2.x before 2.0.0.18, Thunderbird 2.x before 2.0.0.18, and SeaMonkey 1.x before 1.1.13 allows remote attackers to cause a denial of service (crash) via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 190
CVE-2008-5506,"Mozilla Firefox 3.x before 3.0.5 and 2.x before 2.0.0.19, Thunderbird 2.x before 2.0.0.19, and SeaMonkey 1.x before 1.1.14 allows remote attackers to bypass the same origin policy by causing the browser to issue an XMLHttpRequest to an attacker-controlled resource that uses a 302 redirect to a resou",Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: The vulnerability allows an attacker to bypass the same-origin policy by exploiting a flaw in how the browser handles 302 redirects in XMLHttpRequest requests. Vendor: Mozilla Cause: Inadequate handling of HTTP 302 redirects in XMLHttpRequest requests. Impact: Remote attackers can bypass same-origin policy restrictions, potentially leading to information disclosure or cross-site scripting attacks.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 3.x before 3.0.5 and 2.x before 2.0.0.19, Thunderbird 2.x before 2.0.0.19, and SeaMonkey 1.x before 1.1.14 allows remote attackers to bypass the same origin policy by causing the browser to issue an XMLHttpRequest to an attacker-controlled resource that uses a 302 redirect to a resou  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: The vulnerability allows an attacker to bypass the same-origin policy by exploiting a flaw in how the browser handles 302 redirects in XMLHttpRequest requests. Vendor: Mozilla Cause: Inadequate handling of HTTP 302 redirects in XMLHttpRequest requests. Impact: Remote attackers can bypass same-origin policy restrictions, potentially leading to information disclosure or cross-site scripting attacks.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 3.x before 3.0.5 and 2.x before 2.0.0.19, Thunderbird 2.x before 2.0.0.19, and SeaMonkey 1.x before 1.1.14 allows remote attackers to bypass the same origin policy by causing the browser to issue an XMLHttpRequest to an attacker-controlled resource that uses a 302 redirect to a resou  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: The vulnerability allows an attacker to bypass the same-origin policy by exploiting a flaw in how the browser handles 302 redirects in XMLHttpRequest requests. Vendor: Mozilla Cause: Inadequate handling of HTTP 302 redirects in XMLHttpRequest requests. Impact: Remote attackers can bypass same-origin policy restrictions, potentially leading to information disclosure or cross-site scripting attacks.",2008-12-17T23:30:00.563,,,nvd,mozilla firefox 3x before 305 and 2x before 20019 thunderbird 2x before 20019 and seamonkey 1x before 1114 allows remote attackers to bypass the same origin policy by causing the browser to issue an xmlhttprequest to an attackercontrolled resource that uses a 302 redirect to a resou,"Mozilla Firefox 3.x before 3.0.5 and 2.x before 2.0.0.19, Thunderbird 2.x before 2.0.0.19, and SeaMonkey 1.x before 1.1.14 allows remote attackers to bypass the same origin policy by causing the browser to issue an XMLHttpRequest to an attacker-controlled resource that uses a 302 redirect to a resou","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: The vulnerability allows an attacker to bypass the same-origin policy by exploiting a flaw in how the browser handles 302 redirects in XMLHttpRequest requests. Vendor: Mozilla Cause: Inadequate handling of HTTP 302 redirects in XMLHttpRequest requests. Impact: Remote attackers can bypass same-origin policy restrictions, potentially leading to information disclosure or cross-site scripting attacks."
CVE-2008-5822,"Memory leak in Libxul, as used in Mozilla Firefox 3.0.5 and other products, allows remote attackers to cause a denial of service (memory consumption and browser hang) via a long CLASS attribute in an HR element in an HTML document.",Mozilla Firefox Browser,CWE-400,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Memory leak in Libxul, as used in Mozilla Firefox 3.0.5 and other products, allows remote attackers to cause a denial of service (memory consumption and browser hang) via a long CLASS attribute in an HR element in an HTML document.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Memory leak in Libxul, as used in Mozilla Firefox 3.0.5 and other products, allows remote attackers to cause a denial of service (memory consumption and browser hang) via a long CLASS attribute in an HR element in an HTML document.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2009-01-02T19:30:01.733,,,nvd,memory leak in libxul as used in mozilla firefox 305 and other products allows remote attackers to cause a denial of service memory consumption and browser hang via a long class attribute in an hr element in an html document,"Memory leak in Libxul, as used in Mozilla Firefox 3.0.5 and other products, allows remote attackers to cause a denial of service (memory consumption and browser hang) via a long CLASS attribute in an HR element in an HTML document.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2008-5913,"The Math.random function in the JavaScript implementation in Mozilla Firefox 3.5.x before 3.5.10 and 3.6.x before 3.6.4, and SeaMonkey before 2.0.5, uses a random number generator that is seeded only once per browser session, which makes it easier for remote attackers to track a user, or trick a use",Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330 Explanation: The vulnerability arises from using a predictable random number generator, allowing attackers to track users or trick them. Vendor: Mozilla Cause: The Math.random function in Mozilla Firefox and SeaMonkey uses a random number generator that is seeded only once per browser session. Impact: Allows attackers to track users or trick them.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Math.random function in the JavaScript implementation in Mozilla Firefox 3.5.x before 3.5.10 and 3.6.x before 3.6.4, and SeaMonkey before 2.0.5, uses a random number generator that is seeded only once per browser session, which makes it easier for remote attackers to track a user, or trick a use  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330 Explanation: The vulnerability arises from using a predictable random number generator, allowing attackers to track users or trick them. Vendor: Mozilla Cause: The Math.random function in Mozilla Firefox and SeaMonkey uses a random number generator that is seeded only once per browser session. Impact: Allows attackers to track users or trick them.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Math.random function in the JavaScript implementation in Mozilla Firefox 3.5.x before 3.5.10 and 3.6.x before 3.6.4, and SeaMonkey before 2.0.5, uses a random number generator that is seeded only once per browser session, which makes it easier for remote attackers to track a user, or trick a use  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330 Explanation: The vulnerability arises from using a predictable random number generator, allowing attackers to track users or trick them. Vendor: Mozilla Cause: The Math.random function in Mozilla Firefox and SeaMonkey uses a random number generator that is seeded only once per browser session. Impact: Allows attackers to track users or trick them.",2009-01-20T16:30:00.360,,,nvd,the mathrandom function in the javascript implementation in mozilla firefox 35x before 3510 and 36x before 364 and seamonkey before 205 uses a random number generator that is seeded only once per browser session which makes it easier for remote attackers to track a user or trick a use,"The Math.random function in the JavaScript implementation in Mozilla Firefox 3.5.x before 3.5.10 and 3.6.x before 3.6.4, and SeaMonkey before 2.0.5, uses a random number generator that is seeded only once per browser session, which makes it easier for remote attackers to track a user, or trick a use","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 330 Explanation: The vulnerability arises from using a predictable random number generator, allowing attackers to track users or trick them. Vendor: Mozilla Cause: The Math.random function in Mozilla Firefox and SeaMonkey uses a random number generator that is seeded only once per browser session. Impact: Allows attackers to track users or trick them."
CVE-2009-0358,"Mozilla Firefox 3.x before 3.0.6 does not properly implement the (1) no-store and (2) no-cache Cache-Control directives, which allows local users to obtain sensitive information by using the (a) back button or (b) history list of the victim's browser, as demonstrated by reading the response page of ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 3.x before 3.0.6 does not properly implement the (1) no-store and (2) no-cache Cache-Control directives, which allows local users to obtain sensitive information by using the (a) back button or (b) history list of the victim's browser, as demonstrated by reading the response page of  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 3.x before 3.0.6 does not properly implement the (1) no-store and (2) no-cache Cache-Control directives, which allows local users to obtain sensitive information by using the (a) back button or (b) history list of the victim's browser, as demonstrated by reading the response page of  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312",2009-02-04T19:30:00.517,,,nvd,mozilla firefox 3x before 306 does not properly implement the 1 nostore and 2 nocache cachecontrol directives which allows local users to obtain sensitive information by using the a back button or b history list of the victims browser as demonstrated by reading the response page of,"Mozilla Firefox 3.x before 3.0.6 does not properly implement the (1) no-store and (2) no-cache Cache-Control directives, which allows local users to obtain sensitive information by using the (a) back button or (b) history list of the victim's browser, as demonstrated by reading the response page of ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 312
CVE-2009-1302,"The browser engine in Mozilla Firefox 3.x before 3.0.9, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.16 allows remote attackers to cause a denial of service (application crash) and possibly trigger memory corruption via vectors related to (1) nsAsyncInstantiateEvent::Run, (2) nsStyleContext",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3.x before 3.0.9, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.16 allows remote attackers to cause a denial of service (application crash) and possibly trigger memory corruption via vectors related to (1) nsAsyncInstantiateEvent::Run, (2) nsStyleContext  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3.x before 3.0.9, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.16 allows remote attackers to cause a denial of service (application crash) and possibly trigger memory corruption via vectors related to (1) nsAsyncInstantiateEvent::Run, (2) nsStyleContext  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122",2009-04-22T18:30:00.203,,,nvd,the browser engine in mozilla firefox 3x before 309 thunderbird before 20022 and seamonkey before 1116 allows remote attackers to cause a denial of service application crash and possibly trigger memory corruption via vectors related to 1 nsasyncinstantiateeventrun 2 nsstylecontext,"The browser engine in Mozilla Firefox 3.x before 3.0.9, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.16 allows remote attackers to cause a denial of service (application crash) and possibly trigger memory corruption via vectors related to (1) nsAsyncInstantiateEvent::Run, (2) nsStyleContext",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122
CVE-2009-1303,"The browser engine in Mozilla Firefox before 3.0.9, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.16 allows remote attackers to cause a denial of service (application crash) and possibly trigger memory corruption via vectors related to nsSVGElement::BindToTree.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 3.0.9, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.16 allows remote attackers to cause a denial of service (application crash) and possibly trigger memory corruption via vectors related to nsSVGElement::BindToTree.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 3.0.9, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.16 allows remote attackers to cause a denial of service (application crash) and possibly trigger memory corruption via vectors related to nsSVGElement::BindToTree.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2009-04-22T18:30:00.217,,,nvd,the browser engine in mozilla firefox before 309 thunderbird before 20022 and seamonkey before 1116 allows remote attackers to cause a denial of service application crash and possibly trigger memory corruption via vectors related to nssvgelementbindtotree,"The browser engine in Mozilla Firefox before 3.0.9, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.16 allows remote attackers to cause a denial of service (application crash) and possibly trigger memory corruption via vectors related to nsSVGElement::BindToTree.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2009-1392,"The browser engine in Mozilla Firefox 3 before 3.0.11, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.17 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) nsEventStateManager::GetContent",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3 before 3.0.11, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.17 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) nsEventStateManager::GetContent  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3 before 3.0.11, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.17 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) nsEventStateManager::GetContent  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2009-06-12T21:30:00.187,,,nvd,the browser engine in mozilla firefox 3 before 3011 thunderbird before 20022 and seamonkey before 1117 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to 1 nseventstatemanagergetcontent,"The browser engine in Mozilla Firefox 3 before 3.0.11, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.17 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) nsEventStateManager::GetContent",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2009-1841,"js/src/xpconnect/src/xpcwrappedjsclass.cpp in Mozilla Firefox before 3.0.11, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.17 allows remote attackers to execute arbitrary web script with the privileges of a chrome object, as demonstrated by the browser sidebar and the FeedWriter.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  js/src/xpconnect/src/xpcwrappedjsclass.cpp in Mozilla Firefox before 3.0.11, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.17 allows remote attackers to execute arbitrary web script with the privileges of a chrome object, as demonstrated by the browser sidebar and the FeedWriter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  js/src/xpconnect/src/xpcwrappedjsclass.cpp in Mozilla Firefox before 3.0.11, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.17 allows remote attackers to execute arbitrary web script with the privileges of a chrome object, as demonstrated by the browser sidebar and the FeedWriter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2009-06-12T21:30:00.437,,,nvd,jssrcxpconnectsrcxpcwrappedjsclasscpp in mozilla firefox before 3011 thunderbird before 20022 and seamonkey before 1117 allows remote attackers to execute arbitrary web script with the privileges of a chrome object as demonstrated by the browser sidebar and the feedwriter,"js/src/xpconnect/src/xpcwrappedjsclass.cpp in Mozilla Firefox before 3.0.11, Thunderbird before 2.0.0.22, and SeaMonkey before 1.1.17 allows remote attackers to execute arbitrary web script with the privileges of a chrome object, as demonstrated by the browser sidebar and the FeedWriter.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2009-2462,"The browser engine in Mozilla Firefox before 3.0.12 and Thunderbird allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) the frame chain and synchronous events, (2) a SetMayHaveFrame assertion and",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 3.0.12 and Thunderbird allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) the frame chain and synchronous events, (2) a SetMayHaveFrame assertion and  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 3.0.12 and Thunderbird allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) the frame chain and synchronous events, (2) a SetMayHaveFrame assertion and  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2009-07-22T18:30:00.187,,,nvd,the browser engine in mozilla firefox before 3012 and thunderbird allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to 1 the frame chain and synchronous events 2 a setmayhaveframe assertion and,"The browser engine in Mozilla Firefox before 3.0.12 and Thunderbird allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) the frame chain and synchronous events, (2) a SetMayHaveFrame assertion and",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2009-2662,"The browser engine in Mozilla Firefox 3.5.x before 3.5.2 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the TraceRecorder::snapshot function in js/src/jstracer.cpp, and unspecified other vectors",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3.5.x before 3.5.2 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the TraceRecorder::snapshot function in js/src/jstracer.cpp, and unspecified other vectors  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3.5.x before 3.5.2 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the TraceRecorder::snapshot function in js/src/jstracer.cpp, and unspecified other vectors  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2009-08-04T16:30:00.517,,,nvd,the browser engine in mozilla firefox 35x before 352 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to the tracerecordersnapshot function in jssrcjstracercpp and unspecified other vectors,"The browser engine in Mozilla Firefox 3.5.x before 3.5.2 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the TraceRecorder::snapshot function in js/src/jstracer.cpp, and unspecified other vectors",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2009-3069,Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.3 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.3 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.3 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2009-09-10T21:30:01.327,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 353 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.3 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2009-3070,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2009-09-10T21:30:01.360,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3014 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2009-3071,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14, and 3.5.x before 3.5.2, allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14, and 3.5.x before 3.5.2, allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14, and 3.5.x before 3.5.2, allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2009-09-10T21:30:01.390,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3014 and 35x before 352 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14, and 3.5.x before 3.5.2, allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2009-3072,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14 and 3.5.x before 3.5.3, Thunderbird before 2.0.0.24, and SeaMonkey before 1.1.19 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary cod",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14 and 3.5.x before 3.5.3, Thunderbird before 2.0.0.24, and SeaMonkey before 1.1.19 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary cod  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14 and 3.5.x before 3.5.3, Thunderbird before 2.0.0.24, and SeaMonkey before 1.1.19 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary cod  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2009-09-10T21:30:01.420,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3014 and 35x before 353 thunderbird before 20024 and seamonkey before 1119 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary cod,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.14 and 3.5.x before 3.5.3, Thunderbird before 2.0.0.24, and SeaMonkey before 1.1.19 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary cod",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2009-3079,"Unspecified vulnerability in Mozilla Firefox before 3.0.14, and 3.5.x before 3.5.3, allows remote attackers to execute arbitrary JavaScript with chrome privileges via vectors involving an object, the FeedWriter, and the BrowserFeedWriter.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in Mozilla Firefox before 3.0.14, and 3.5.x before 3.5.3, allows remote attackers to execute arbitrary JavaScript with chrome privileges via vectors involving an object, the FeedWriter, and the BrowserFeedWriter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in Mozilla Firefox before 3.0.14, and 3.5.x before 3.5.3, allows remote attackers to execute arbitrary JavaScript with chrome privileges via vectors involving an object, the FeedWriter, and the BrowserFeedWriter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2009-09-10T21:30:01.593,,,nvd,unspecified vulnerability in mozilla firefox before 3014 and 35x before 353 allows remote attackers to execute arbitrary javascript with chrome privileges via vectors involving an object the feedwriter and the browserfeedwriter,"Unspecified vulnerability in Mozilla Firefox before 3.0.14, and 3.5.x before 3.5.3, allows remote attackers to execute arbitrary JavaScript with chrome privileges via vectors involving an object, the FeedWriter, and the BrowserFeedWriter.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2009-3380,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.0.x before 3.0.15 and 3.5.x before 3.5.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: This vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine in Mozilla Firefox versions 3.0.x before 3.0.15 and 3.5.x before 3.5.4. Vendor: Mozilla Cause: Unspecified vulnerability in the browser engine allows remote attackers to cause a denial of service or possibly execute code. Impact: Denial of service (memory corruption and application crash) or arbitrary code execution,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.0.x before 3.0.15 and 3.5.x before 3.5.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: This vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine in Mozilla Firefox versions 3.0.x before 3.0.15 and 3.5.x before 3.5.4. Vendor: Mozilla Cause: Unspecified vulnerability in the browser engine allows remote attackers to cause a denial of service or possibly execute code. Impact: Denial of service (memory corruption and application crash) or arbitrary code execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.0.x before 3.0.15 and 3.5.x before 3.5.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: This vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine in Mozilla Firefox versions 3.0.x before 3.0.15 and 3.5.x before 3.5.4. Vendor: Mozilla Cause: Unspecified vulnerability in the browser engine allows remote attackers to cause a denial of service or possibly execute code. Impact: Denial of service (memory corruption and application crash) or arbitrary code execution",2009-10-29T14:30:01.077,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 30x before 3015 and 35x before 354 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.0.x before 3.0.15 and 3.5.x before 3.5.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: This vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine in Mozilla Firefox versions 3.0.x before 3.0.15 and 3.5.x before 3.5.4. Vendor: Mozilla Cause: Unspecified vulnerability in the browser engine allows remote attackers to cause a denial of service or possibly execute code. Impact: Denial of service (memory corruption and application crash) or arbitrary code execution
CVE-2009-3381,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2009-10-29T14:30:01.093,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 35x before 354 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2009-3382,"layout/base/nsCSSFrameConstructor.cpp in the browser engine in Mozilla Firefox 3.0.x before 3.0.15 does not properly handle first-letter frames, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vec",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  layout/base/nsCSSFrameConstructor.cpp in the browser engine in Mozilla Firefox 3.0.x before 3.0.15 does not properly handle first-letter frames, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  layout/base/nsCSSFrameConstructor.cpp in the browser engine in Mozilla Firefox 3.0.x before 3.0.15 does not properly handle first-letter frames, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122",2009-10-29T14:30:01.127,,,nvd,layoutbasenscssframeconstructorcpp in the browser engine in mozilla firefox 30x before 3015 does not properly handle firstletter frames which allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unspecified vec,"layout/base/nsCSSFrameConstructor.cpp in the browser engine in Mozilla Firefox 3.0.x before 3.0.15 does not properly handle first-letter frames, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vec",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122
CVE-2009-3979,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.16 and 3.5.x before 3.5.6, SeaMonkey before 2.0.1, and Thunderbird allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vec",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.16 and 3.5.x before 3.5.6, SeaMonkey before 2.0.1, and Thunderbird allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.16 and 3.5.x before 3.5.6, SeaMonkey before 2.0.1, and Thunderbird allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2009-12-17T17:30:00.327,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3016 and 35x before 356 seamonkey before 201 and thunderbird allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vec,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.16 and 3.5.x before 3.5.6, SeaMonkey before 2.0.1, and Thunderbird allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vec",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2009-3980,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.6, SeaMonkey before 2.0.1, and Thunderbird allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.6, SeaMonkey before 2.0.1, and Thunderbird allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.6, SeaMonkey before 2.0.1, and Thunderbird allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2009-12-17T17:30:00.360,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 35x before 356 seamonkey before 201 and thunderbird allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.6, SeaMonkey before 2.0.1, and Thunderbird allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2009-3981,"Unspecified vulnerability in the browser engine in Mozilla Firefox before 3.0.16, SeaMonkey before 2.0.1, and Thunderbird allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox before 3.0.16, SeaMonkey before 2.0.1, and Thunderbird allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox before 3.0.16, SeaMonkey before 2.0.1, and Thunderbird allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2009-12-17T17:30:00.407,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox before 3016 seamonkey before 201 and thunderbird allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Unspecified vulnerability in the browser engine in Mozilla Firefox before 3.0.16, SeaMonkey before 2.0.1, and Thunderbird allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2009-3983,"Mozilla Firefox before 3.0.16 and 3.5.x before 3.5.6, and SeaMonkey before 2.0.1, allows remote attackers to send authenticated requests to arbitrary applications by replaying the NTLM credentials of a browser user.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 3.0.16 and 3.5.x before 3.5.6, and SeaMonkey before 2.0.1, allows remote attackers to send authenticated requests to arbitrary applications by replaying the NTLM credentials of a browser user.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 3.0.16 and 3.5.x before 3.5.6, and SeaMonkey before 2.0.1, allows remote attackers to send authenticated requests to arbitrary applications by replaying the NTLM credentials of a browser user.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287",2009-12-17T17:30:00.467,,,nvd,mozilla firefox before 3016 and 35x before 356 and seamonkey before 201 allows remote attackers to send authenticated requests to arbitrary applications by replaying the ntlm credentials of a browser user,"Mozilla Firefox before 3.0.16 and 3.5.x before 3.5.6, and SeaMonkey before 2.0.1, allows remote attackers to send authenticated requests to arbitrary applications by replaying the NTLM credentials of a browser user.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287
CVE-2010-0159,"The browser engine in Mozilla Firefox 3.0.x before 3.0.18 and 3.5.x before 3.5.8, Thunderbird before 3.0.2, and SeaMonkey before 2.0.3 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the nsBlockF",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3.0.x before 3.0.18 and 3.5.x before 3.5.8, Thunderbird before 3.0.2, and SeaMonkey before 2.0.3 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the nsBlockF  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3.0.x before 3.0.18 and 3.5.x before 3.5.8, Thunderbird before 3.0.2, and SeaMonkey before 2.0.3 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the nsBlockF  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122",2010-02-22T13:00:02.000,,,nvd,the browser engine in mozilla firefox 30x before 3018 and 35x before 358 thunderbird before 302 and seamonkey before 203 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to the nsblockf,"The browser engine in Mozilla Firefox 3.0.x before 3.0.18 and 3.5.x before 3.5.8, Thunderbird before 3.0.2, and SeaMonkey before 2.0.3 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the nsBlockF",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 122
CVE-2010-0165,The TraceRecorder::traverseScopeChain function in js/src/jstracer.cpp in the browser engine in Mozilla Firefox 3.6 before 3.6.2 allows remote attackers to cause a denial of service (memory corruption and application crash) and possibly execute arbitrary code via vectors involving certain indirect ca,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The TraceRecorder::traverseScopeChain function in js/src/jstracer.cpp in the browser engine in Mozilla Firefox 3.6 before 3.6.2 allows remote attackers to cause a denial of service (memory corruption and application crash) and possibly execute arbitrary code via vectors involving certain indirect ca  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The TraceRecorder::traverseScopeChain function in js/src/jstracer.cpp in the browser engine in Mozilla Firefox 3.6 before 3.6.2 allows remote attackers to cause a denial of service (memory corruption and application crash) and possibly execute arbitrary code via vectors involving certain indirect ca  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2010-03-25T21:00:00.360,,,nvd,the tracerecordertraversescopechain function in jssrcjstracercpp in the browser engine in mozilla firefox 36 before 362 allows remote attackers to cause a denial of service memory corruption and application crash and possibly execute arbitrary code via vectors involving certain indirect ca,The TraceRecorder::traverseScopeChain function in js/src/jstracer.cpp in the browser engine in Mozilla Firefox 3.6 before 3.6.2 allows remote attackers to cause a denial of service (memory corruption and application crash) and possibly execute arbitrary code via vectors involving certain indirect ca,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2010-0166,"The gfxTextRun::SanitizeGlyphRuns function in gfx/thebes/src/gfxFont.cpp in the browser engine in Mozilla Firefox 3.6 before 3.6.2 on Mac OS X, when the Core Text API is used, does not properly perform certain deletions, which allows remote attackers to cause a denial of service (memory corruption a",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The gfxTextRun::SanitizeGlyphRuns function in gfx/thebes/src/gfxFont.cpp in the browser engine in Mozilla Firefox 3.6 before 3.6.2 on Mac OS X, when the Core Text API is used, does not properly perform certain deletions, which allows remote attackers to cause a denial of service (memory corruption a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The gfxTextRun::SanitizeGlyphRuns function in gfx/thebes/src/gfxFont.cpp in the browser engine in Mozilla Firefox 3.6 before 3.6.2 on Mac OS X, when the Core Text API is used, does not properly perform certain deletions, which allows remote attackers to cause a denial of service (memory corruption a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2010-03-25T21:00:00.407,,,nvd,the gfxtextrunsanitizeglyphruns function in gfxthebessrcgfxfontcpp in the browser engine in mozilla firefox 36 before 362 on mac os x when the core text api is used does not properly perform certain deletions which allows remote attackers to cause a denial of service memory corruption a,"The gfxTextRun::SanitizeGlyphRuns function in gfx/thebes/src/gfxFont.cpp in the browser engine in Mozilla Firefox 3.6 before 3.6.2 on Mac OS X, when the Core Text API is used, does not properly perform certain deletions, which allows remote attackers to cause a denial of service (memory corruption a",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2010-0167,"The browser engine in Mozilla Firefox 3.0.x before 3.0.18, 3.5.x before 3.5.8, and 3.6.x before 3.6.2; Thunderbird before 3.0.2; and SeaMonkey before 2.0.3 allows remote attackers to cause a denial of service (memory corruption and application crash) and possibly execute arbitrary code via vectors r",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3.0.x before 3.0.18, 3.5.x before 3.5.8, and 3.6.x before 3.6.2; Thunderbird before 3.0.2; and SeaMonkey before 2.0.3 allows remote attackers to cause a denial of service (memory corruption and application crash) and possibly execute arbitrary code via vectors r  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 3.0.x before 3.0.18, 3.5.x before 3.5.8, and 3.6.x before 3.6.2; Thunderbird before 3.0.2; and SeaMonkey before 2.0.3 allows remote attackers to cause a denial of service (memory corruption and application crash) and possibly execute arbitrary code via vectors r  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2010-03-25T21:00:00.437,,,nvd,the browser engine in mozilla firefox 30x before 3018 35x before 358 and 36x before 362 thunderbird before 302 and seamonkey before 203 allows remote attackers to cause a denial of service memory corruption and application crash and possibly execute arbitrary code via vectors r,"The browser engine in Mozilla Firefox 3.0.x before 3.0.18, 3.5.x before 3.5.8, and 3.6.x before 3.6.2; Thunderbird before 3.0.2; and SeaMonkey before 2.0.3 allows remote attackers to cause a denial of service (memory corruption and application crash) and possibly execute arbitrary code via vectors r",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2010-0168,"The nsDocument::MaybePreLoadImage function in content/base/src/nsDocument.cpp in the image-preloading implementation in Mozilla Firefox 3.6 before 3.6.2 does not apply scheme restrictions and policy restrictions to the image's URL, which might allow remote attackers to cause a denial of service (app",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The nsDocument::MaybePreLoadImage function in content/base/src/nsDocument.cpp in the image-preloading implementation in Mozilla Firefox 3.6 before 3.6.2 does not apply scheme restrictions and policy restrictions to the image's URL, which might allow remote attackers to cause a denial of service (app  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The nsDocument::MaybePreLoadImage function in content/base/src/nsDocument.cpp in the image-preloading implementation in Mozilla Firefox 3.6 before 3.6.2 does not apply scheme restrictions and policy restrictions to the image's URL, which might allow remote attackers to cause a denial of service (app  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2010-03-25T21:00:00.483,,,nvd,the nsdocumentmaybepreloadimage function in contentbasesrcnsdocumentcpp in the imagepreloading implementation in mozilla firefox 36 before 362 does not apply scheme restrictions and policy restrictions to the images url which might allow remote attackers to cause a denial of service app,"The nsDocument::MaybePreLoadImage function in content/base/src/nsDocument.cpp in the image-preloading implementation in Mozilla Firefox 3.6 before 3.6.2 does not apply scheme restrictions and policy restrictions to the image's URL, which might allow remote attackers to cause a denial of service (app",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2010-0169,"The CSSLoaderImpl::DoSheetComplete function in layout/style/nsCSSLoader.cpp in Mozilla Firefox 3.0.x before 3.0.18, 3.5.x before 3.5.8, and 3.6.x before 3.6.2; Thunderbird before 3.0.2; and SeaMonkey before 2.0.3 changes the case of certain strings in a stylesheet before adding this stylesheet to th",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The CSSLoaderImpl::DoSheetComplete function in layout/style/nsCSSLoader.cpp in Mozilla Firefox 3.0.x before 3.0.18, 3.5.x before 3.5.8, and 3.6.x before 3.6.2; Thunderbird before 3.0.2; and SeaMonkey before 2.0.3 changes the case of certain strings in a stylesheet before adding this stylesheet to th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The CSSLoaderImpl::DoSheetComplete function in layout/style/nsCSSLoader.cpp in Mozilla Firefox 3.0.x before 3.0.18, 3.5.x before 3.5.8, and 3.6.x before 3.6.2; Thunderbird before 3.0.2; and SeaMonkey before 2.0.3 changes the case of certain strings in a stylesheet before adding this stylesheet to th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2010-03-25T21:00:00.517,,,nvd,the cssloaderimpldosheetcomplete function in layoutstylenscssloadercpp in mozilla firefox 30x before 3018 35x before 358 and 36x before 362 thunderbird before 302 and seamonkey before 203 changes the case of certain strings in a stylesheet before adding this stylesheet to th,"The CSSLoaderImpl::DoSheetComplete function in layout/style/nsCSSLoader.cpp in Mozilla Firefox 3.0.x before 3.0.18, 3.5.x before 3.5.8, and 3.6.x before 3.6.2; Thunderbird before 3.0.2; and SeaMonkey before 2.0.3 changes the case of certain strings in a stylesheet before adding this stylesheet to th",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2010-0173,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.9 and 3.6.x before 3.6.2, Thunderbird before 3.0.4, and SeaMonkey before 2.0.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.9 and 3.6.x before 3.6.2, Thunderbird before 3.0.4, and SeaMonkey before 2.0.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.9 and 3.6.x before 3.6.2, Thunderbird before 3.0.4, and SeaMonkey before 2.0.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2010-04-05T17:30:00.297,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 359 and 36x before 362 thunderbird before 304 and seamonkey before 204 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.9 and 3.6.x before 3.6.2, Thunderbird before 3.0.4, and SeaMonkey before 2.0.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2010-0174,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.19, 3.5.x before 3.5.9, and 3.6.x before 3.6.2; Thunderbird before 3.0.4; and SeaMonkey before 2.0.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly exec",Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: The vulnerability allows an attacker to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code through memory corruption. Vendor: Mozilla Cause: Multiple unspecified vulnerabilities in the browser engine of Mozilla Firefox, Thunderbird, and SeaMonkey. Impact: Denial of service (memory corruption and application crash) or possibly arbitrary code execution.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.19, 3.5.x before 3.5.9, and 3.6.x before 3.6.2; Thunderbird before 3.0.4; and SeaMonkey before 2.0.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly exec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: The vulnerability allows an attacker to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code through memory corruption. Vendor: Mozilla Cause: Multiple unspecified vulnerabilities in the browser engine of Mozilla Firefox, Thunderbird, and SeaMonkey. Impact: Denial of service (memory corruption and application crash) or possibly arbitrary code execution.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.19, 3.5.x before 3.5.9, and 3.6.x before 3.6.2; Thunderbird before 3.0.4; and SeaMonkey before 2.0.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly exec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: The vulnerability allows an attacker to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code through memory corruption. Vendor: Mozilla Cause: Multiple unspecified vulnerabilities in the browser engine of Mozilla Firefox, Thunderbird, and SeaMonkey. Impact: Denial of service (memory corruption and application crash) or possibly arbitrary code execution.",2010-04-05T17:30:00.343,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3019 35x before 359 and 36x before 362 thunderbird before 304 and seamonkey before 204 allow remote attackers to cause a denial of service memory corruption and application crash or possibly exec,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.0.19, 3.5.x before 3.5.9, and 3.6.x before 3.6.2; Thunderbird before 3.0.4; and SeaMonkey before 2.0.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly exec","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: The vulnerability allows an attacker to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code through memory corruption. Vendor: Mozilla Cause: Multiple unspecified vulnerabilities in the browser engine of Mozilla Firefox, Thunderbird, and SeaMonkey. Impact: Denial of service (memory corruption and application crash) or possibly arbitrary code execution."
CVE-2010-1200,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.10 and 3.6.x before 3.6.4, Thunderbird before 3.0.5, and SeaMonkey before 2.0.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary c",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.10 and 3.6.x before 3.6.4, Thunderbird before 3.0.5, and SeaMonkey before 2.0.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.10 and 3.6.x before 3.6.4, Thunderbird before 3.0.5, and SeaMonkey before 2.0.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2010-06-24T12:30:01.610,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 35x before 3510 and 36x before 364 thunderbird before 305 and seamonkey before 205 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary c,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.10 and 3.6.x before 3.6.4, Thunderbird before 3.0.5, and SeaMonkey before 2.0.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary c",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2010-1201,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.10, Thunderbird before 3.0.5, and SeaMonkey before 2.0.5 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.10, Thunderbird before 3.0.5, and SeaMonkey before 2.0.5 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.10, Thunderbird before 3.0.5, and SeaMonkey before 2.0.5 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2010-06-24T12:30:01.640,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 3510 thunderbird before 305 and seamonkey before 205 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.10, Thunderbird before 3.0.5, and SeaMonkey before 2.0.5 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2010-1206,"The startDocumentLoad function in browser/base/content/browser.js in Mozilla Firefox 3.5.x before 3.5.11 and 3.6.x before 3.6.7, and SeaMonkey before 2.0.6, does not properly implement the Same Origin Policy in certain circumstances related to the about:blank document and a document that is currentl",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The startDocumentLoad function in browser/base/content/browser.js in Mozilla Firefox 3.5.x before 3.5.11 and 3.6.x before 3.6.7, and SeaMonkey before 2.0.6, does not properly implement the Same Origin Policy in certain circumstances related to the about:blank document and a document that is currentl  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The startDocumentLoad function in browser/base/content/browser.js in Mozilla Firefox 3.5.x before 3.5.11 and 3.6.x before 3.6.7, and SeaMonkey before 2.0.6, does not properly implement the Same Origin Policy in certain circumstances related to the about:blank document and a document that is currentl  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2010-06-25T19:30:01.640,,,nvd,the startdocumentload function in browserbasecontentbrowserjs in mozilla firefox 35x before 3511 and 36x before 367 and seamonkey before 206 does not properly implement the same origin policy in certain circumstances related to the aboutblank document and a document that is currentl,"The startDocumentLoad function in browser/base/content/browser.js in Mozilla Firefox 3.5.x before 3.5.11 and 3.6.x before 3.6.7, and SeaMonkey before 2.0.6, does not properly implement the Same Origin Policy in certain circumstances related to the about:blank document and a document that is currentl",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2010-1211,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.11 and 3.6.x before 3.6.7, Thunderbird 3.0.x before 3.0.6 and 3.1.x before 3.1.1, and SeaMonkey before 2.0.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.11 and 3.6.x before 3.6.7, Thunderbird 3.0.x before 3.0.6 and 3.1.x before 3.1.1, and SeaMonkey before 2.0.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.11 and 3.6.x before 3.6.7, Thunderbird 3.0.x before 3.0.6 and 3.1.x before 3.1.1, and SeaMonkey before 2.0.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2010-07-30T20:30:01.503,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 35x before 3511 and 36x before 367 thunderbird 30x before 306 and 31x before 311 and seamonkey before 206 allow remote attackers to cause a denial of service memory corruption and application crash or,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.11 and 3.6.x before 3.6.7, Thunderbird 3.0.x before 3.0.6 and 3.1.x before 3.1.1, and SeaMonkey before 2.0.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2010-1212,js/src/jstracer.cpp in the browser engine in Mozilla Firefox 3.6.x before 3.6.7 and Thunderbird 3.1.x before 3.1.1 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) propagation of deep aborts i,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  js/src/jstracer.cpp in the browser engine in Mozilla Firefox 3.6.x before 3.6.7 and Thunderbird 3.1.x before 3.1.1 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) propagation of deep aborts i  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  js/src/jstracer.cpp in the browser engine in Mozilla Firefox 3.6.x before 3.6.7 and Thunderbird 3.1.x before 3.1.1 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) propagation of deep aborts i  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2010-07-30T20:30:01.550,,,nvd,jssrcjstracercpp in the browser engine in mozilla firefox 36x before 367 and thunderbird 31x before 311 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to 1 propagation of deep aborts i,js/src/jstracer.cpp in the browser engine in Mozilla Firefox 3.6.x before 3.6.7 and Thunderbird 3.1.x before 3.1.1 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) propagation of deep aborts i,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2010-3169,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.12 and 3.6.x before 3.6.9, Thunderbird before 3.0.7 and 3.1.x before 3.1.3, and SeaMonkey before 2.0.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly ex",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.12 and 3.6.x before 3.6.9, Thunderbird before 3.0.7 and 3.1.x before 3.1.3, and SeaMonkey before 2.0.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly ex  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.12 and 3.6.x before 3.6.9, Thunderbird before 3.0.7 and 3.1.x before 3.1.3, and SeaMonkey before 2.0.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly ex  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2010-09-09T19:00:02.750,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3512 and 36x before 369 thunderbird before 307 and 31x before 313 and seamonkey before 207 allow remote attackers to cause a denial of service memory corruption and application crash or possibly ex,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.12 and 3.6.x before 3.6.9, Thunderbird before 3.0.7 and 3.1.x before 3.1.3, and SeaMonkey before 2.0.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly ex",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2010-3174,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.14, Thunderbird before 3.0.9, and SeaMonkey before 2.0.9 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.14, Thunderbird before 3.0.9, and SeaMonkey before 2.0.9 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.14, Thunderbird before 3.0.9, and SeaMonkey before 2.0.9 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2010-10-21T19:00:02.660,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 3514 thunderbird before 309 and seamonkey before 209 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.14, Thunderbird before 3.0.9, and SeaMonkey before 2.0.9 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2010-3175,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.6.x before 3.6.11 and Thunderbird 3.1.x before 3.1.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.6.x before 3.6.11 and Thunderbird 3.1.x before 3.1.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.6.x before 3.6.11 and Thunderbird 3.1.x before 3.1.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2010-10-21T19:00:02.770,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 36x before 3611 and thunderbird 31x before 315 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.6.x before 3.6.11 and Thunderbird 3.1.x before 3.1.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2010-3176,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.14 and 3.6.x before 3.6.11, Thunderbird before 3.0.9 and 3.1.x before 3.1.5, and SeaMonkey before 2.0.9 allow remote attackers to cause a denial of service (memory corruption and application crash) or poss",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.14 and 3.6.x before 3.6.11, Thunderbird before 3.0.9 and 3.1.x before 3.1.5, and SeaMonkey before 2.0.9 allow remote attackers to cause a denial of service (memory corruption and application crash) or poss  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.14 and 3.6.x before 3.6.11, Thunderbird before 3.0.9 and 3.1.x before 3.1.5, and SeaMonkey before 2.0.9 allow remote attackers to cause a denial of service (memory corruption and application crash) or poss  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119",2010-10-21T19:00:02.897,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 35x before 3514 and 36x before 3611 thunderbird before 309 and 31x before 315 and seamonkey before 209 allow remote attackers to cause a denial of service memory corruption and application crash or poss,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.14 and 3.6.x before 3.6.11, Thunderbird before 3.0.9 and 3.1.x before 3.1.5, and SeaMonkey before 2.0.9 allow remote attackers to cause a denial of service (memory corruption and application crash) or poss",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119
CVE-2010-3776,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.16 and 3.6.x before 3.6.13, Thunderbird before 3.0.11 and 3.1.x before 3.1.7, and SeaMonkey before 2.0.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.16 and 3.6.x before 3.6.13, Thunderbird before 3.0.11 and 3.1.x before 3.1.7, and SeaMonkey before 2.0.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.16 and 3.6.x before 3.6.13, Thunderbird before 3.0.11 and 3.1.x before 3.1.7, and SeaMonkey before 2.0.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119",2010-12-10T19:00:02.720,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3516 and 36x before 3613 thunderbird before 3011 and 31x before 317 and seamonkey before 2011 allow remote attackers to cause a denial of service memory corruption and application crash or possibly,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.16 and 3.6.x before 3.6.13, Thunderbird before 3.0.11 and 3.1.x before 3.1.7, and SeaMonkey before 2.0.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119
CVE-2011-0053,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.17 and 3.6.x before 3.6.14, Thunderbird before 3.1.8, and SeaMonkey before 2.0.12 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.17 and 3.6.x before 3.6.14, Thunderbird before 3.1.8, and SeaMonkey before 2.0.12 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.17 and 3.6.x before 3.6.14, Thunderbird before 3.1.8, and SeaMonkey before 2.0.12 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2011-03-02T20:00:01.410,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3517 and 36x before 3614 thunderbird before 318 and seamonkey before 2012 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.5.17 and 3.6.x before 3.6.14, Thunderbird before 3.1.8, and SeaMonkey before 2.0.12 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2011-0062,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.6.x before 3.6.14 and Thunderbird 3.1.x before 3.1.8 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.6.x before 3.6.14 and Thunderbird 3.1.x before 3.1.8 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.6.x before 3.6.14 and Thunderbird 3.1.x before 3.1.8 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2011-03-02T20:00:01.630,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 36x before 3614 and thunderbird 31x before 318 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.6.x before 3.6.14 and Thunderbird 3.1.x before 3.1.8 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2011-0069,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19, 3.6.x before 3.6.17, and 4.x before 4.0.1; Thunderbird before 3.1.10; and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19, 3.6.x before 3.6.17, and 4.x before 4.0.1; Thunderbird before 3.1.10; and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19, 3.6.x before 3.6.17, and 4.x before 4.0.1; Thunderbird before 3.1.10; and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2011-05-07T18:55:01.120,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 3519 36x before 3617 and 4x before 401 thunderbird before 3110 and seamonkey before 2014 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19, 3.6.x before 3.6.17, and 4.x before 4.0.1; Thunderbird before 3.1.10; and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2011-0070,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19, 3.6.x before 3.6.17, and 4.x before 4.0.1; Thunderbird before 3.1.10; and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19, 3.6.x before 3.6.17, and 4.x before 4.0.1; Thunderbird before 3.1.10; and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19, 3.6.x before 3.6.17, and 4.x before 4.0.1; Thunderbird before 3.1.10; and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2011-05-07T18:55:01.167,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 3519 36x before 3617 and 4x before 401 thunderbird before 3110 and seamonkey before 2014 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19, 3.6.x before 3.6.17, and 4.x before 4.0.1; Thunderbird before 3.1.10; and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2011-0072,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2011-05-07T18:55:01.247,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 3519 and 36x before 3617 thunderbird before 3110 and seamonkey before 2014 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2011-0074,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2011-05-07T18:55:01.323,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 3519 and 36x before 3617 thunderbird before 3110 and seamonkey before 2014 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2011-0075,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2011-05-07T18:55:01.357,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 3519 and 36x before 3617 thunderbird before 3110 and seamonkey before 2014 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2011-0077,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2011-05-07T18:55:01.433,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 3519 and 36x before 3617 thunderbird before 3110 and seamonkey before 2014 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2011-0078,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121",2011-05-07T18:55:01.463,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 35x before 3519 and 36x before 3617 thunderbird before 3110 and seamonkey before 2014 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121
CVE-2011-0079,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x before 4.0.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to gfx/layers/d3d10/ReadbackManagerD3D10.cpp and unknown,Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors related to the browser engine in Mozilla Firefox. Vendor: Mozilla Cause: Memory corruption in the browser engine's graphics rendering component. Impact: Denial of service, arbitrary code execution","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x before 4.0.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to gfx/layers/d3d10/ReadbackManagerD3D10.cpp and unknown  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors related to the browser engine in Mozilla Firefox. Vendor: Mozilla Cause: Memory corruption in the browser engine's graphics rendering component. Impact: Denial of service, arbitrary code execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x before 4.0.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to gfx/layers/d3d10/ReadbackManagerD3D10.cpp and unknown  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors related to the browser engine in Mozilla Firefox. Vendor: Mozilla Cause: Memory corruption in the browser engine's graphics rendering component. Impact: Denial of service, arbitrary code execution",2011-05-07T18:55:01.497,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 4x before 401 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to gfxlayersd3d10readbackmanagerd3d10cpp and unknown,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x before 4.0.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to gfx/layers/d3d10/ReadbackManagerD3D10.cpp and unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors related to the browser engine in Mozilla Firefox. Vendor: Mozilla Cause: Memory corruption in the browser engine's graphics rendering component. Impact: Denial of service, arbitrary code execution"
CVE-2011-0080,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrar",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrar  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrar  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2011-05-07T18:55:01.543,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 35x before 3519 and 36x before 3617 thunderbird before 3110 and seamonkey before 2014 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrar,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 3.5.x before 3.5.19 and 3.6.x before 3.6.17, Thunderbird before 3.1.10, and SeaMonkey before 2.0.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrar",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2011-0081,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.17 and 4.x before 4.0.1, and Thunderbird 3.1.x before 3.1.10, allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.17 and 4.x before 4.0.1, and Thunderbird 3.1.x before 3.1.10, allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.17 and 4.x before 4.0.1, and Thunderbird 3.1.x before 3.1.10, allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2011-05-07T18:55:01.573,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 36x before 3617 and 4x before 401 and thunderbird 31x before 3110 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.17 and 4.x before 4.0.1, and Thunderbird 3.1.x before 3.1.10, allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2011-2364,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.18 and Thunderbird before 3.1.11 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors, a different vulnerability than C",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: A vulnerability in the browser engine in Mozilla Firefox and Thunderbird. Impact: Denial of service and potential arbitrary code execution.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.18 and Thunderbird before 3.1.11 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors, a different vulnerability than C  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: A vulnerability in the browser engine in Mozilla Firefox and Thunderbird. Impact: Denial of service and potential arbitrary code execution.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.18 and Thunderbird before 3.1.11 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors, a different vulnerability than C  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: A vulnerability in the browser engine in Mozilla Firefox and Thunderbird. Impact: Denial of service and potential arbitrary code execution.",2011-06-30T16:55:05.097,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 36x before 3618 and thunderbird before 3111 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors a different vulnerability than c,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.18 and Thunderbird before 3.1.11 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors, a different vulnerability than C",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: A vulnerability in the browser engine in Mozilla Firefox and Thunderbird. Impact: Denial of service and potential arbitrary code execution.
CVE-2011-2365,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.18 and Thunderbird before 3.1.11 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors, a different vulnerability than C",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.18 and Thunderbird before 3.1.11 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors, a different vulnerability than C  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.18 and Thunderbird before 3.1.11 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors, a different vulnerability than C  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2011-06-30T16:55:05.130,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox 36x before 3618 and thunderbird before 3111 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors a different vulnerability than c,"Unspecified vulnerability in the browser engine in Mozilla Firefox 3.6.x before 3.6.18 and Thunderbird before 3.1.11 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors, a different vulnerability than C",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2011-2374,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.18 and 4.x through 4.0.1, and Thunderbird before 3.1.11, allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.18 and 4.x through 4.0.1, and Thunderbird before 3.1.11, allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.18 and 4.x through 4.0.1, and Thunderbird before 3.1.11, allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2011-06-30T16:55:05.397,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3618 and 4x through 401 and thunderbird before 3111 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.18 and 4.x through 4.0.1, and Thunderbird before 3.1.11, allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2011-2375,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 5.0 and Thunderbird through 3.1.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 5.0 and Thunderbird through 3.1.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 5.0 and Thunderbird through 3.1.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2011-06-30T16:55:05.440,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 50 and thunderbird through 3111 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 5.0 and Thunderbird through 3.1.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2011-2376,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.18 and Thunderbird before 3.1.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.18 and Thunderbird before 3.1.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.18 and Thunderbird before 3.1.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2011-06-30T16:55:05.473,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3618 and thunderbird before 3111 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.18 and Thunderbird before 3.1.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2011-2982,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.20, Thunderbird 2.x and 3.x before 3.1.12, SeaMonkey 1.x and 2.x, and possibly other products allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arb",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.20, Thunderbird 2.x and 3.x before 3.1.12, SeaMonkey 1.x and 2.x, and possibly other products allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arb  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.20, Thunderbird 2.x and 3.x before 3.1.12, SeaMonkey 1.x and 2.x, and possibly other products allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arb  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2011-08-18T18:55:01.600,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3620 thunderbird 2x and 3x before 3112 seamonkey 1x and 2x and possibly other products allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arb,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.20, Thunderbird 2.x and 3.x before 3.1.12, SeaMonkey 1.x and 2.x, and possibly other products allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arb",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2011-2985,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 5, Thunderbird before 6, SeaMonkey 2.x before 2.3, and possibly other products allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code vi",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 5, Thunderbird before 6, SeaMonkey 2.x before 2.3, and possibly other products allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code vi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 5, Thunderbird before 6, SeaMonkey 2.x before 2.3, and possibly other products allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code vi  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2011-08-18T18:55:01.727,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 4x through 5 thunderbird before 6 seamonkey 2x before 23 and possibly other products allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code vi,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 5, Thunderbird before 6, SeaMonkey 2.x before 2.3, and possibly other products allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code vi",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2011-2989,"The browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products does not properly implement WebGL, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products does not properly implement WebGL, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products does not properly implement WebGL, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2011-08-18T18:55:01.880,,,nvd,the browser engine in mozilla firefox 4x through 5 seamonkey 2x before 23 thunderbird before 6 and possibly other products does not properly implement webgl which allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code,"The browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products does not properly implement WebGL, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2011-2991,"The browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products does not properly implement JavaScript, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products does not properly implement JavaScript, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products does not properly implement JavaScript, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2011-08-18T18:55:01.960,,,nvd,the browser engine in mozilla firefox 4x through 5 seamonkey 2x before 23 thunderbird before 6 and possibly other products does not properly implement javascript which allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary,"The browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products does not properly implement JavaScript, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2011-2992,"The Ogg reader in the browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Ogg reader in the browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Ogg reader in the browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121",2011-08-18T18:55:01.990,,,nvd,the ogg reader in the browser engine in mozilla firefox 4x through 5 seamonkey 2x before 23 thunderbird before 6 and possibly other products allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unspecified vectors,"The Ogg reader in the browser engine in Mozilla Firefox 4.x through 5, SeaMonkey 2.x before 2.3, Thunderbird before 6, and possibly other products allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121
CVE-2011-2995,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.23 and 4.x through 6, Thunderbird before 7.0, and SeaMonkey before 2.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.23 and 4.x through 6, Thunderbird before 7.0, and SeaMonkey before 2.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.23 and 4.x through 6, Thunderbird before 7.0, and SeaMonkey before 2.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2011-09-29T00:55:01.093,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3623 and 4x through 6 thunderbird before 70 and seamonkey before 24 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.23 and 4.x through 6, Thunderbird before 7.0, and SeaMonkey before 2.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2011-2997,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 6, Thunderbird before 7.0, and SeaMonkey before 2.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine. Vendor: Mozilla Cause: Memory corruption and application crash via unknown vectors in the browser engine Impact: Denial of Service, Arbitrary Code Execution","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 6, Thunderbird before 7.0, and SeaMonkey before 2.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine. Vendor: Mozilla Cause: Memory corruption and application crash via unknown vectors in the browser engine Impact: Denial of Service, Arbitrary Code Execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 6, Thunderbird before 7.0, and SeaMonkey before 2.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine. Vendor: Mozilla Cause: Memory corruption and application crash via unknown vectors in the browser engine Impact: Denial of Service, Arbitrary Code Execution",2011-09-29T00:55:01.200,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 6 thunderbird before 70 and seamonkey before 24 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 6, Thunderbird before 7.0, and SeaMonkey before 2.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine. Vendor: Mozilla Cause: Memory corruption and application crash via unknown vectors in the browser engine Impact: Denial of Service, Arbitrary Code Execution"
CVE-2011-3651,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 7.0 and Thunderbird 7.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 7.0 and Thunderbird 7.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 7.0 and Thunderbird 7.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2011-11-09T11:55:03.787,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 70 and thunderbird 70 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 7.0 and Thunderbird 7.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2011-3652,"The browser engine in Mozilla Firefox before 8.0 and Thunderbird before 8.0 does not properly allocate memory, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 8.0 and Thunderbird before 8.0 does not properly allocate memory, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 8.0 and Thunderbird before 8.0 does not properly allocate memory, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2011-11-09T11:55:03.847,,,nvd,the browser engine in mozilla firefox before 80 and thunderbird before 80 does not properly allocate memory which allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unspecified vectors,"The browser engine in Mozilla Firefox before 8.0 and Thunderbird before 8.0 does not properly allocate memory, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecified vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2011-3654,"The browser engine in Mozilla Firefox before 8.0 and Thunderbird before 8.0 does not properly handle links from SVG mpath elements to non-SVG elements, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecif",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1222,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 8.0 and Thunderbird before 8.0 does not properly handle links from SVG mpath elements to non-SVG elements, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecif  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1222","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox before 8.0 and Thunderbird before 8.0 does not properly handle links from SVG mpath elements to non-SVG elements, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecif  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1222",2011-11-09T11:55:03.957,,,nvd,the browser engine in mozilla firefox before 80 and thunderbird before 80 does not properly handle links from svg mpath elements to nonsvg elements which allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unspecif,"The browser engine in Mozilla Firefox before 8.0 and Thunderbird before 8.0 does not properly handle links from SVG mpath elements to non-SVG elements, which allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unspecif",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1222
CVE-2011-4688,"Mozilla Firefox 8.0.1 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.",Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: This vulnerability allows an attacker to determine if a specific document exists in the browser cache by monitoring Same Origin Policy violations during IFRAME loading attempts. This information leakage could be used to track user behavior or perform cache-based timing attacks. Vendor: Mozilla Cause: Mozilla Firefox did not properly prevent the capture of timing information related to Same Origin Policy violations during IFRAME loading. Impact: Attackers can determine whether a document exists in the browser cache, potentially allowing them to track user behavior or perform cache-based timing attacks.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 8.0.1 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: This vulnerability allows an attacker to determine if a specific document exists in the browser cache by monitoring Same Origin Policy violations during IFRAME loading attempts. This information leakage could be used to track user behavior or perform cache-based timing attacks. Vendor: Mozilla Cause: Mozilla Firefox did not properly prevent the capture of timing information related to Same Origin Policy violations during IFRAME loading. Impact: Attackers can determine whether a document exists in the browser cache, potentially allowing them to track user behavior or perform cache-based timing attacks.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox 8.0.1 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: This vulnerability allows an attacker to determine if a specific document exists in the browser cache by monitoring Same Origin Policy violations during IFRAME loading attempts. This information leakage could be used to track user behavior or perform cache-based timing attacks. Vendor: Mozilla Cause: Mozilla Firefox did not properly prevent the capture of timing information related to Same Origin Policy violations during IFRAME loading. Impact: Attackers can determine whether a document exists in the browser cache, potentially allowing them to track user behavior or perform cache-based timing attacks.",2011-12-07T19:55:03.050,,,nvd,mozilla firefox 801 and earlier does not prevent capture of data about the times of same origin policy violations during iframe loading attempts which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted javascript code,"Mozilla Firefox 8.0.1 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: This vulnerability allows an attacker to determine if a specific document exists in the browser cache by monitoring Same Origin Policy violations during IFRAME loading attempts. This information leakage could be used to track user behavior or perform cache-based timing attacks. Vendor: Mozilla Cause: Mozilla Firefox did not properly prevent the capture of timing information related to Same Origin Policy violations during IFRAME loading. Impact: Attackers can determine whether a document exists in the browser cache, potentially allowing them to track user behavior or perform cache-based timing attacks."
CVE-2011-3660,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 8.0, Thunderbird 5.0 through 8.0, and SeaMonkey before 2.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors that trigg",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 8.0, Thunderbird 5.0 through 8.0, and SeaMonkey before 2.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors that trigg  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 8.0, Thunderbird 5.0 through 8.0, and SeaMonkey before 2.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors that trigg  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2011-12-21T04:02:00.927,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 4x through 80 thunderbird 50 through 80 and seamonkey before 26 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors that trigg,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 8.0, Thunderbird 5.0 through 8.0, and SeaMonkey before 2.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors that trigg",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2012-0442,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.26 and 4.x through 9.0, Thunderbird before 3.1.18 and 5.0 through 9.0, and SeaMonkey before 2.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute a",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.26 and 4.x through 9.0, Thunderbird before 3.1.18 and 5.0 through 9.0, and SeaMonkey before 2.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.26 and 4.x through 9.0, Thunderbird before 3.1.18 and 5.0 through 9.0, and SeaMonkey before 2.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2012-02-01T16:55:00.913,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3626 and 4x through 90 thunderbird before 3118 and 50 through 90 and seamonkey before 27 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute a,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.26 and 4.x through 9.0, Thunderbird before 3.1.18 and 5.0 through 9.0, and SeaMonkey before 2.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute a",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2012-0443,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 9.0, Thunderbird 5.0 through 9.0, and SeaMonkey before 2.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 9.0, Thunderbird 5.0 through 9.0, and SeaMonkey before 2.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 9.0, Thunderbird 5.0 through 9.0, and SeaMonkey before 2.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2012-02-01T16:55:00.960,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 4x through 90 thunderbird 50 through 90 and seamonkey before 27 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 9.0, Thunderbird 5.0 through 9.0, and SeaMonkey before 2.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2012-0461,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allow remote attackers to cause a denial of s",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allow remote attackers to cause a denial of s  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allow remote attackers to cause a denial of s  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2012-03-14T19:55:02.193,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 3628 and 4x through 100 firefox esr 10x before 1003 thunderbird before 3120 and 50 through 100 thunderbird esr 10x before 1003 and seamonkey before 28 allow remote attackers to cause a denial of s,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allow remote attackers to cause a denial of s",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2012-0462,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allow remote attackers to cause a denial of service (memory corruption and applic",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allow remote attackers to cause a denial of service (memory corruption and applic  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allow remote attackers to cause a denial of service (memory corruption and applic  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2012-03-14T19:55:02.240,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 4x through 100 firefox esr 10x before 1003 thunderbird 50 through 100 thunderbird esr 10x before 1003 and seamonkey before 28 allow remote attackers to cause a denial of service memory corruption and applic,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allow remote attackers to cause a denial of service (memory corruption and applic",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2012-0463,"The nsWindow implementation in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 does not check the validity of an instance after event",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The nsWindow implementation in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 does not check the validity of an instance after event  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The nsWindow implementation in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 does not check the validity of an instance after event  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2012-03-14T19:55:02.287,,,nvd,the nswindow implementation in the browser engine in mozilla firefox before 3628 and 4x through 100 firefox esr 10x before 1003 thunderbird before 3120 and 50 through 100 thunderbird esr 10x before 1003 and seamonkey before 28 does not check the validity of an instance after event,"The nsWindow implementation in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 does not check the validity of an instance after event",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2012-0464,"Use-after-free vulnerability in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allows remote attackers to execute arbitrary code via",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allows remote attackers to execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Use-after-free vulnerability in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allows remote attackers to execute arbitrary code via  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2012-03-14T19:55:02.337,,,nvd,useafterfree vulnerability in the browser engine in mozilla firefox before 3628 and 4x through 100 firefox esr 10x before 1003 thunderbird before 3120 and 50 through 100 thunderbird esr 10x before 1003 and seamonkey before 28 allows remote attackers to execute arbitrary code via,"Use-after-free vulnerability in the browser engine in Mozilla Firefox before 3.6.28 and 4.x through 10.0, Firefox ESR 10.x before 10.0.3, Thunderbird before 3.1.20 and 5.0 through 10.0, Thunderbird ESR 10.x before 10.0.3, and SeaMonkey before 2.8 allows remote attackers to execute arbitrary code via",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2012-0467,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 11.0, Firefox ESR 10.x before 10.0.4, Thunderbird 5.0 through 11.0, Thunderbird ESR 10.x before 10.0.4, and SeaMonkey before 2.9 allow remote attackers to cause a denial of service (memory corruption and applic",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 11.0, Firefox ESR 10.x before 10.0.4, Thunderbird 5.0 through 11.0, Thunderbird ESR 10.x before 10.0.4, and SeaMonkey before 2.9 allow remote attackers to cause a denial of service (memory corruption and applic  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 11.0, Firefox ESR 10.x before 10.0.4, Thunderbird 5.0 through 11.0, Thunderbird ESR 10.x before 10.0.4, and SeaMonkey before 2.9 allow remote attackers to cause a denial of service (memory corruption and applic  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2012-04-25T10:10:17.150,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 4x through 110 firefox esr 10x before 1004 thunderbird 50 through 110 thunderbird esr 10x before 1004 and seamonkey before 29 allow remote attackers to cause a denial of service memory corruption and applic,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 11.0, Firefox ESR 10.x before 10.0.4, Thunderbird 5.0 through 11.0, Thunderbird ESR 10.x before 10.0.4, and SeaMonkey before 2.9 allow remote attackers to cause a denial of service (memory corruption and applic",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2012-0468,"The browser engine in Mozilla Firefox 4.x through 11.0, Thunderbird 5.0 through 11.0, and SeaMonkey before 2.9 allows remote attackers to cause a denial of service (assertion failure and memory corruption) or possibly execute arbitrary code via vectors related to jsval.h and the js::array_shift func",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 4.x through 11.0, Thunderbird 5.0 through 11.0, and SeaMonkey before 2.9 allows remote attackers to cause a denial of service (assertion failure and memory corruption) or possibly execute arbitrary code via vectors related to jsval.h and the js::array_shift func  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The browser engine in Mozilla Firefox 4.x through 11.0, Thunderbird 5.0 through 11.0, and SeaMonkey before 2.9 allows remote attackers to cause a denial of service (assertion failure and memory corruption) or possibly execute arbitrary code via vectors related to jsval.h and the js::array_shift func  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2012-04-25T10:10:17.387,,,nvd,the browser engine in mozilla firefox 4x through 110 thunderbird 50 through 110 and seamonkey before 29 allows remote attackers to cause a denial of service assertion failure and memory corruption or possibly execute arbitrary code via vectors related to jsvalh and the jsarray_shift func,"The browser engine in Mozilla Firefox 4.x through 11.0, Thunderbird 5.0 through 11.0, and SeaMonkey before 2.9 allows remote attackers to cause a denial of service (assertion failure and memory corruption) or possibly execute arbitrary code via vectors related to jsval.h and the js::array_shift func",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2012-1937,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 12.0, Firefox ESR 10.x before 10.0.5, Thunderbird 5.0 through 12.0, Thunderbird ESR 10.x before 10.0.5, and SeaMonkey before 2.10 allow remote attackers to cause a denial of service (memory corruption and appli",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 12.0, Firefox ESR 10.x before 10.0.5, Thunderbird 5.0 through 12.0, Thunderbird ESR 10.x before 10.0.5, and SeaMonkey before 2.10 allow remote attackers to cause a denial of service (memory corruption and appli  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 12.0, Firefox ESR 10.x before 10.0.5, Thunderbird 5.0 through 12.0, Thunderbird ESR 10.x before 10.0.5, and SeaMonkey before 2.10 allow remote attackers to cause a denial of service (memory corruption and appli  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2012-06-05T23:55:01.467,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 4x through 120 firefox esr 10x before 1005 thunderbird 50 through 120 thunderbird esr 10x before 1005 and seamonkey before 210 allow remote attackers to cause a denial of service memory corruption and appli,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 12.0, Firefox ESR 10.x before 10.0.5, Thunderbird 5.0 through 12.0, Thunderbird ESR 10.x before 10.0.5, and SeaMonkey before 2.10 allow remote attackers to cause a denial of service (memory corruption and appli",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2012-1938,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 13.0, Thunderbird before 13.0, and SeaMonkey before 2.10 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) me",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 13.0, Thunderbird before 13.0, and SeaMonkey before 2.10 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) me  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 13.0, Thunderbird before 13.0, and SeaMonkey before 2.10 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) me  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2012-06-05T23:55:01.513,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 130 thunderbird before 130 and seamonkey before 210 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to 1 me,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 13.0, Thunderbird before 13.0, and SeaMonkey before 2.10 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to (1) me",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2012-1948,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 13.0, Firefox ESR 10.x before 10.0.6, Thunderbird 5.0 through 13.0, Thunderbird ESR 10.x before 10.0.6, and SeaMonkey before 2.11 allow remote attackers to cause a denial of service (memory corruption and appli",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 13.0, Firefox ESR 10.x before 10.0.6, Thunderbird 5.0 through 13.0, Thunderbird ESR 10.x before 10.0.6, and SeaMonkey before 2.11 allow remote attackers to cause a denial of service (memory corruption and appli  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 13.0, Firefox ESR 10.x before 10.0.6, Thunderbird 5.0 through 13.0, Thunderbird ESR 10.x before 10.0.6, and SeaMonkey before 2.11 allow remote attackers to cause a denial of service (memory corruption and appli  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2012-07-18T10:26:48.470,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 4x through 130 firefox esr 10x before 1006 thunderbird 50 through 130 thunderbird esr 10x before 1006 and seamonkey before 211 allow remote attackers to cause a denial of service memory corruption and appli,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 13.0, Firefox ESR 10.x before 10.0.6, Thunderbird 5.0 through 13.0, Thunderbird ESR 10.x before 10.0.6, and SeaMonkey before 2.11 allow remote attackers to cause a denial of service (memory corruption and appli",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2012-1949,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 13.0, Thunderbird 5.0 through 13.0, and SeaMonkey before 2.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 13.0, Thunderbird 5.0 through 13.0, and SeaMonkey before 2.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 13.0, Thunderbird 5.0 through 13.0, and SeaMonkey before 2.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2012-07-18T10:26:48.533,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox 4x through 130 thunderbird 50 through 130 and seamonkey before 211 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox 4.x through 13.0, Thunderbird 5.0 through 13.0, and SeaMonkey before 2.11 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2012-1964,"The certificate-warning functionality in browser/components/certerror/content/aboutCertError.xhtml in Mozilla Firefox 4.x through 12.0, Firefox ESR 10.x before 10.0.6, Thunderbird 5.0 through 12.0, Thunderbird ESR 10.x before 10.0.6, and SeaMonkey before 2.10 does not properly handle attempted click",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The certificate-warning functionality in browser/components/certerror/content/aboutCertError.xhtml in Mozilla Firefox 4.x through 12.0, Firefox ESR 10.x before 10.0.6, Thunderbird 5.0 through 12.0, Thunderbird ESR 10.x before 10.0.6, and SeaMonkey before 2.10 does not properly handle attempted click  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The certificate-warning functionality in browser/components/certerror/content/aboutCertError.xhtml in Mozilla Firefox 4.x through 12.0, Firefox ESR 10.x before 10.0.6, Thunderbird 5.0 through 12.0, Thunderbird ESR 10.x before 10.0.6, and SeaMonkey before 2.10 does not properly handle attempted click  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2012-07-18T10:26:49.127,,,nvd,the certificatewarning functionality in browsercomponentscerterrorcontentaboutcerterrorxhtml in mozilla firefox 4x through 120 firefox esr 10x before 1006 thunderbird 50 through 120 thunderbird esr 10x before 1006 and seamonkey before 210 does not properly handle attempted click,"The certificate-warning functionality in browser/components/certerror/content/aboutCertError.xhtml in Mozilla Firefox 4.x through 12.0, Firefox ESR 10.x before 10.0.6, Thunderbird 5.0 through 12.0, Thunderbird ESR 10.x before 10.0.6, and SeaMonkey before 2.10 does not properly handle attempted click",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2012-3301,Multiple CRLF injection vulnerabilities in the HTTP server in IBM Lotus Domino 8.5.x before 8.5.4 allow remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input involving (1) Mozilla Firefox 3.0.9 and earlier or (2) unspecified browsers.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple CRLF injection vulnerabilities in the HTTP server in IBM Lotus Domino 8.5.x before 8.5.4 allow remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input involving (1) Mozilla Firefox 3.0.9 and earlier or (2) unspecified browsers.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple CRLF injection vulnerabilities in the HTTP server in IBM Lotus Domino 8.5.x before 8.5.4 allow remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input involving (1) Mozilla Firefox 3.0.9 and earlier or (2) unspecified browsers.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94",2012-08-21T10:46:10.700,,,nvd,multiple crlf injection vulnerabilities in the http server in ibm lotus domino 85x before 854 allow remote attackers to inject arbitrary http headers and conduct http response splitting attacks via crafted input involving 1 mozilla firefox 309 and earlier or 2 unspecified browsers,Multiple CRLF injection vulnerabilities in the HTTP server in IBM Lotus Domino 8.5.x before 8.5.4 allow remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input involving (1) Mozilla Firefox 3.0.9 and earlier or (2) unspecified browsers.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 94
CVE-2012-1970,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 15.0, Firefox ESR 10.x before 10.0.7, Thunderbird before 15.0, Thunderbird ESR 10.x before 10.0.7, and SeaMonkey before 2.12 allow remote attackers to cause a denial of service (memory corruption and application cra",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 15.0, Firefox ESR 10.x before 10.0.7, Thunderbird before 15.0, Thunderbird ESR 10.x before 10.0.7, and SeaMonkey before 2.12 allow remote attackers to cause a denial of service (memory corruption and application cra  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 15.0, Firefox ESR 10.x before 10.0.7, Thunderbird before 15.0, Thunderbird ESR 10.x before 10.0.7, and SeaMonkey before 2.12 allow remote attackers to cause a denial of service (memory corruption and application cra  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2012-08-29T10:56:39.787,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 150 firefox esr 10x before 1007 thunderbird before 150 thunderbird esr 10x before 1007 and seamonkey before 212 allow remote attackers to cause a denial of service memory corruption and application cra,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 15.0, Firefox ESR 10.x before 10.0.7, Thunderbird before 15.0, Thunderbird ESR 10.x before 10.0.7, and SeaMonkey before 2.12 allow remote attackers to cause a denial of service (memory corruption and application cra",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2012-1971,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 15.0, Thunderbird before 15.0, and SeaMonkey before 2.12 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to garbag",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 15.0, Thunderbird before 15.0, and SeaMonkey before 2.12 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to garbag  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 15.0, Thunderbird before 15.0, and SeaMonkey before 2.12 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to garbag  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2012-08-29T10:56:39.847,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 150 thunderbird before 150 and seamonkey before 212 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to garbag,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 15.0, Thunderbird before 15.0, and SeaMonkey before 2.12 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to garbag",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2012-3982,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 16.0, Firefox ESR 10.x before 10.0.8, Thunderbird before 16.0, Thunderbird ESR 10.x before 10.0.8, and SeaMonkey before 2.13 allow remote attackers to cause a denial of service (memory corruption and application cra",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 16.0, Firefox ESR 10.x before 10.0.8, Thunderbird before 16.0, Thunderbird ESR 10.x before 10.0.8, and SeaMonkey before 2.13 allow remote attackers to cause a denial of service (memory corruption and application cra  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 16.0, Firefox ESR 10.x before 10.0.8, Thunderbird before 16.0, Thunderbird ESR 10.x before 10.0.8, and SeaMonkey before 2.13 allow remote attackers to cause a denial of service (memory corruption and application cra  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2012-10-10T17:55:01.360,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 160 firefox esr 10x before 1008 thunderbird before 160 thunderbird esr 10x before 1008 and seamonkey before 213 allow remote attackers to cause a denial of service memory corruption and application cra,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 16.0, Firefox ESR 10.x before 10.0.8, Thunderbird before 16.0, Thunderbird ESR 10.x before 10.0.8, and SeaMonkey before 2.13 allow remote attackers to cause a denial of service (memory corruption and application cra",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2012-3983,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 16.0, Thunderbird before 16.0, and SeaMonkey before 2.13 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 16.0, Thunderbird before 16.0, and SeaMonkey before 2.13 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 16.0, Thunderbird before 16.0, and SeaMonkey before 2.13 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2012-10-10T17:55:01.440,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 160 thunderbird before 160 and seamonkey before 213 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 16.0, Thunderbird before 16.0, and SeaMonkey before 2.13 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2012-5842,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 17.0, Firefox ESR 10.x before 10.0.11, Thunderbird before 17.0, Thunderbird ESR 10.x before 10.0.11, and SeaMonkey before 2.14 allow remote attackers to cause a denial of service (memory corruption and application c",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 17.0, Firefox ESR 10.x before 10.0.11, Thunderbird before 17.0, Thunderbird ESR 10.x before 10.0.11, and SeaMonkey before 2.14 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 17.0, Firefox ESR 10.x before 10.0.11, Thunderbird before 17.0, Thunderbird ESR 10.x before 10.0.11, and SeaMonkey before 2.14 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2012-11-21T12:55:03.743,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 170 firefox esr 10x before 10011 thunderbird before 170 thunderbird esr 10x before 10011 and seamonkey before 214 allow remote attackers to cause a denial of service memory corruption and application c,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 17.0, Firefox ESR 10.x before 10.0.11, Thunderbird before 17.0, Thunderbird ESR 10.x before 10.0.11, and SeaMonkey before 2.14 allow remote attackers to cause a denial of service (memory corruption and application c",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2012-5843,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 17.0, Thunderbird before 17.0, and SeaMonkey before 2.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 17.0, Thunderbird before 17.0, and SeaMonkey before 2.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 17.0, Thunderbird before 17.0, and SeaMonkey before 2.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2012-11-21T12:55:03.790,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 170 thunderbird before 170 and seamonkey before 214 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 17.0, Thunderbird before 17.0, and SeaMonkey before 2.14 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2013-0749,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Firefox ESR 17.x before 17.0.1, Thunderbird before 17.0.2, Thunderbird ESR 17.x before 17.0.1, and SeaMonkey before 2.15 allow remote attackers to cause a denial of service (memory corruption and application c",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Firefox ESR 17.x before 17.0.1, Thunderbird before 17.0.2, Thunderbird ESR 17.x before 17.0.1, and SeaMonkey before 2.15 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Firefox ESR 17.x before 17.0.1, Thunderbird before 17.0.2, Thunderbird ESR 17.x before 17.0.1, and SeaMonkey before 2.15 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2013-01-13T20:55:01.667,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 180 firefox esr 17x before 1701 thunderbird before 1702 thunderbird esr 17x before 1701 and seamonkey before 215 allow remote attackers to cause a denial of service memory corruption and application c,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Firefox ESR 17.x before 17.0.1, Thunderbird before 17.0.2, Thunderbird ESR 17.x before 17.0.1, and SeaMonkey before 2.15 allow remote attackers to cause a denial of service (memory corruption and application c",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2013-0769,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Firefox ESR 10.x before 10.0.12 and 17.x before 17.0.1, Thunderbird before 17.0.2, Thunderbird ESR 10.x before 10.0.12 and 17.x before 17.0.1, and SeaMonkey before 2.15 allow remote attackers to cause a denial",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Firefox ESR 10.x before 10.0.12 and 17.x before 17.0.1, Thunderbird before 17.0.2, Thunderbird ESR 10.x before 10.0.12 and 17.x before 17.0.1, and SeaMonkey before 2.15 allow remote attackers to cause a denial  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Firefox ESR 10.x before 10.0.12 and 17.x before 17.0.1, Thunderbird before 17.0.2, Thunderbird ESR 10.x before 10.0.12 and 17.x before 17.0.1, and SeaMonkey before 2.15 allow remote attackers to cause a denial  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2013-01-13T20:55:02.463,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 180 firefox esr 10x before 10012 and 17x before 1701 thunderbird before 1702 thunderbird esr 10x before 10012 and 17x before 1701 and seamonkey before 215 allow remote attackers to cause a denial,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Firefox ESR 10.x before 10.0.12 and 17.x before 17.0.1, Thunderbird before 17.0.2, Thunderbird ESR 10.x before 10.0.12 and 17.x before 17.0.1, and SeaMonkey before 2.15 allow remote attackers to cause a denial",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2013-0770,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Thunderbird before 17.0.2, and SeaMonkey before 2.15 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Thunderbird before 17.0.2, and SeaMonkey before 2.15 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Thunderbird before 17.0.2, and SeaMonkey before 2.15 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2013-01-13T20:55:02.510,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 180 thunderbird before 1702 and seamonkey before 215 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 18.0, Thunderbird before 17.0.2, and SeaMonkey before 2.15 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2013-0774,"Mozilla Firefox before 19.0, Firefox ESR 17.x before 17.0.3, Thunderbird before 17.0.3, Thunderbird ESR 17.x before 17.0.3, and SeaMonkey before 2.16 do not prevent JavaScript workers from reading the browser-profile directory name, which has unspecified impact and remote attack vectors.",Mozilla Firefox Browser,CWE-200,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 19.0, Firefox ESR 17.x before 17.0.3, Thunderbird before 17.0.3, Thunderbird ESR 17.x before 17.0.3, and SeaMonkey before 2.16 do not prevent JavaScript workers from reading the browser-profile directory name, which has unspecified impact and remote attack vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 19.0, Firefox ESR 17.x before 17.0.3, Thunderbird before 17.0.3, Thunderbird ESR 17.x before 17.0.3, and SeaMonkey before 2.16 do not prevent JavaScript workers from reading the browser-profile directory name, which has unspecified impact and remote attack vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2013-02-19T23:55:01.457,,,nvd,mozilla firefox before 190 firefox esr 17x before 1703 thunderbird before 1703 thunderbird esr 17x before 1703 and seamonkey before 216 do not prevent javascript workers from reading the browserprofile directory name which has unspecified impact and remote attack vectors,"Mozilla Firefox before 19.0, Firefox ESR 17.x before 17.0.3, Thunderbird before 17.0.3, Thunderbird ESR 17.x before 17.0.3, and SeaMonkey before 2.16 do not prevent JavaScript workers from reading the browser-profile directory name, which has unspecified impact and remote attack vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2013-0783,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 19.0, Firefox ESR 17.x before 17.0.3, Thunderbird before 17.0.3, Thunderbird ESR 17.x before 17.0.3, and SeaMonkey before 2.16 allow remote attackers to cause a denial of service (memory corruption and application c",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 19.0, Firefox ESR 17.x before 17.0.3, Thunderbird before 17.0.3, Thunderbird ESR 17.x before 17.0.3, and SeaMonkey before 2.16 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 19.0, Firefox ESR 17.x before 17.0.3, Thunderbird before 17.0.3, Thunderbird ESR 17.x before 17.0.3, and SeaMonkey before 2.16 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2013-02-19T23:55:01.863,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 190 firefox esr 17x before 1703 thunderbird before 1703 thunderbird esr 17x before 1703 and seamonkey before 216 allow remote attackers to cause a denial of service memory corruption and application c,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 19.0, Firefox ESR 17.x before 17.0.3, Thunderbird before 17.0.3, Thunderbird ESR 17.x before 17.0.3, and SeaMonkey before 2.16 allow remote attackers to cause a denial of service (memory corruption and application c",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2013-0784,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 19.0, Thunderbird before 17.0.3, and SeaMonkey before 2.16 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 19.0, Thunderbird before 17.0.3, and SeaMonkey before 2.16 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 19.0, Thunderbird before 17.0.3, and SeaMonkey before 2.16 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2013-02-19T23:55:01.927,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 190 thunderbird before 1703 and seamonkey before 216 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 19.0, Thunderbird before 17.0.3, and SeaMonkey before 2.16 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2013-0788,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 20.0, Firefox ESR 17.x before 17.0.5, Thunderbird before 17.0.5, Thunderbird ESR 17.x before 17.0.5, and SeaMonkey before 2.17 allow remote attackers to cause a denial of service (memory corruption and application c",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 20.0, Firefox ESR 17.x before 17.0.5, Thunderbird before 17.0.5, Thunderbird ESR 17.x before 17.0.5, and SeaMonkey before 2.17 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 20.0, Firefox ESR 17.x before 17.0.5, Thunderbird before 17.0.5, Thunderbird ESR 17.x before 17.0.5, and SeaMonkey before 2.17 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2013-04-03T11:56:21.027,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 200 firefox esr 17x before 1705 thunderbird before 1705 thunderbird esr 17x before 1705 and seamonkey before 217 allow remote attackers to cause a denial of service memory corruption and application c,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 20.0, Firefox ESR 17.x before 17.0.5, Thunderbird before 17.0.5, Thunderbird ESR 17.x before 17.0.5, and SeaMonkey before 2.17 allow remote attackers to cause a denial of service (memory corruption and application c",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2013-0789,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 20.0 and SeaMonkey before 2.17 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the nsContentUtils::HoldJSObject,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 20.0 and SeaMonkey before 2.17 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the nsContentUtils::HoldJSObject  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 20.0 and SeaMonkey before 2.17 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the nsContentUtils::HoldJSObject  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2013-04-03T11:56:21.063,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 200 and seamonkey before 217 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to the nscontentutilsholdjsobject,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 20.0 and SeaMonkey before 2.17 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the nsContentUtils::HoldJSObject,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2013-0790,Unspecified vulnerability in the browser engine in Mozilla Firefox before 20.0 on Android allows remote attackers to cause a denial of service (stack memory corruption and application crash) or possibly execute arbitrary code via unknown vectors involving a plug-in.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox before 20.0 on Android allows remote attackers to cause a denial of service (stack memory corruption and application crash) or possibly execute arbitrary code via unknown vectors involving a plug-in.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox before 20.0 on Android allows remote attackers to cause a denial of service (stack memory corruption and application crash) or possibly execute arbitrary code via unknown vectors involving a plug-in.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2013-04-03T11:56:21.097,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox before 200 on android allows remote attackers to cause a denial of service stack memory corruption and application crash or possibly execute arbitrary code via unknown vectors involving a plugin,Unspecified vulnerability in the browser engine in Mozilla Firefox before 20.0 on Android allows remote attackers to cause a denial of service (stack memory corruption and application crash) or possibly execute arbitrary code via unknown vectors involving a plug-in.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2013-0801,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 21.0, Firefox ESR 17.x before 17.0.6, Thunderbird before 17.0.6, and Thunderbird ESR 17.x before 17.0.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execu",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 21.0, Firefox ESR 17.x before 17.0.6, Thunderbird before 17.0.6, and Thunderbird ESR 17.x before 17.0.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 21.0, Firefox ESR 17.x before 17.0.6, Thunderbird before 17.0.6, and Thunderbird ESR 17.x before 17.0.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2013-05-16T11:45:30.633,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 210 firefox esr 17x before 1706 thunderbird before 1706 and thunderbird esr 17x before 1706 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execu,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 21.0, Firefox ESR 17.x before 17.0.6, Thunderbird before 17.0.6, and Thunderbird ESR 17.x before 17.0.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execu",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2013-1669,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 21.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: Flaws in the browser engine of Mozilla Firefox Impact: Denial of service and potential arbitrary code execution,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 21.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: Flaws in the browser engine of Mozilla Firefox Impact: Denial of service and potential arbitrary code execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 21.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: Flaws in the browser engine of Mozilla Firefox Impact: Denial of service and potential arbitrary code execution",2013-05-16T11:45:30.720,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 210 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 21.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: Flaws in the browser engine of Mozilla Firefox Impact: Denial of service and potential arbitrary code execution
CVE-2013-1682,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 22.0, Firefox ESR 17.x before 17.0.7, Thunderbird before 17.0.7, and Thunderbird ESR 17.x before 17.0.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execu",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 22.0, Firefox ESR 17.x before 17.0.7, Thunderbird before 17.0.7, and Thunderbird ESR 17.x before 17.0.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 22.0, Firefox ESR 17.x before 17.0.7, Thunderbird before 17.0.7, and Thunderbird ESR 17.x before 17.0.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2013-06-26T03:19:10.653,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 220 firefox esr 17x before 1707 thunderbird before 1707 and thunderbird esr 17x before 1707 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execu,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 22.0, Firefox ESR 17.x before 17.0.7, Thunderbird before 17.0.7, and Thunderbird ESR 17.x before 17.0.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execu",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2013-1683,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 22.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 22.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 22.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2013-06-26T03:19:10.677,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 220 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 22.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2013-1701,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 23.0, Firefox ESR 17.x before 17.0.8, Thunderbird before 17.0.8, Thunderbird ESR 17.x before 17.0.8, and SeaMonkey before 2.20 allow remote attackers to cause a denial of service (memory corruption and application c",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 23.0, Firefox ESR 17.x before 17.0.8, Thunderbird before 17.0.8, Thunderbird ESR 17.x before 17.0.8, and SeaMonkey before 2.20 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 23.0, Firefox ESR 17.x before 17.0.8, Thunderbird before 17.0.8, Thunderbird ESR 17.x before 17.0.8, and SeaMonkey before 2.20 allow remote attackers to cause a denial of service (memory corruption and application c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2013-08-07T01:55:04.677,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 230 firefox esr 17x before 1708 thunderbird before 1708 thunderbird esr 17x before 1708 and seamonkey before 220 allow remote attackers to cause a denial of service memory corruption and application c,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 23.0, Firefox ESR 17.x before 17.0.8, Thunderbird before 17.0.8, Thunderbird ESR 17.x before 17.0.8, and SeaMonkey before 2.20 allow remote attackers to cause a denial of service (memory corruption and application c",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2013-1702,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 23.0 and SeaMonkey before 2.20 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 23.0 and SeaMonkey before 2.20 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 23.0 and SeaMonkey before 2.20 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2013-08-07T01:55:04.707,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 230 and seamonkey before 220 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 23.0 and SeaMonkey before 2.20 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2013-1718,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 24.0, Firefox ESR 17.x before 17.0.9, Thunderbird before 24.0, Thunderbird ESR 17.x before 17.0.9, and SeaMonkey before 2.21 allow remote attackers to cause a denial of service (memory corruption and application cra",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 24.0, Firefox ESR 17.x before 17.0.9, Thunderbird before 24.0, Thunderbird ESR 17.x before 17.0.9, and SeaMonkey before 2.21 allow remote attackers to cause a denial of service (memory corruption and application cra  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 24.0, Firefox ESR 17.x before 17.0.9, Thunderbird before 24.0, Thunderbird ESR 17.x before 17.0.9, and SeaMonkey before 2.21 allow remote attackers to cause a denial of service (memory corruption and application cra  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2013-09-18T10:08:22.337,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 240 firefox esr 17x before 1709 thunderbird before 240 thunderbird esr 17x before 1709 and seamonkey before 221 allow remote attackers to cause a denial of service memory corruption and application cra,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 24.0, Firefox ESR 17.x before 17.0.9, Thunderbird before 24.0, Thunderbird ESR 17.x before 17.0.9, and SeaMonkey before 2.21 allow remote attackers to cause a denial of service (memory corruption and application cra",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2013-1719,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 24.0, Thunderbird before 24.0, and SeaMonkey before 2.21 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 24.0, Thunderbird before 24.0, and SeaMonkey before 2.21 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 24.0, Thunderbird before 24.0, and SeaMonkey before 2.21 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2013-09-18T10:08:24.303,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 240 thunderbird before 240 and seamonkey before 221 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 24.0, Thunderbird before 24.0, and SeaMonkey before 2.21 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2013-5590,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 25.0, Firefox ESR 17.x before 17.0.10 and 24.x before 24.1, Thunderbird before 24.1, Thunderbird ESR 17.x before 17.0.10, and SeaMonkey before 2.22 allow remote attackers to cause a denial of service (memory corrupt",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 25.0, Firefox ESR 17.x before 17.0.10 and 24.x before 24.1, Thunderbird before 24.1, Thunderbird ESR 17.x before 17.0.10, and SeaMonkey before 2.22 allow remote attackers to cause a denial of service (memory corrupt  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 25.0, Firefox ESR 17.x before 17.0.10 and 24.x before 24.1, Thunderbird before 24.1, Thunderbird ESR 17.x before 17.0.10, and SeaMonkey before 2.22 allow remote attackers to cause a denial of service (memory corrupt  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2013-10-30T10:55:04.380,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 250 firefox esr 17x before 17010 and 24x before 241 thunderbird before 241 thunderbird esr 17x before 17010 and seamonkey before 222 allow remote attackers to cause a denial of service memory corrupt,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 25.0, Firefox ESR 17.x before 17.0.10 and 24.x before 24.1, Thunderbird before 24.1, Thunderbird ESR 17.x before 17.0.10, and SeaMonkey before 2.22 allow remote attackers to cause a denial of service (memory corrupt",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2013-5591,"Unspecified vulnerability in the browser engine in Mozilla Firefox before 25.0, Firefox ESR 24.x before 24.1, Thunderbird before 24.1, and SeaMonkey before 2.22 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unkno",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox before 25.0, Firefox ESR 24.x before 24.1, Thunderbird before 24.1, and SeaMonkey before 2.22 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unkno  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox before 25.0, Firefox ESR 24.x before 24.1, Thunderbird before 24.1, and SeaMonkey before 2.22 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unkno  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2013-10-30T10:55:04.397,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox before 250 firefox esr 24x before 241 thunderbird before 241 and seamonkey before 222 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unkno,"Unspecified vulnerability in the browser engine in Mozilla Firefox before 25.0, Firefox ESR 24.x before 24.1, Thunderbird before 24.1, and SeaMonkey before 2.22 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unkno",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2013-5592,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 25.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 25.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 25.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2013-10-30T10:55:04.413,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 250 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 25.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2013-5609,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 26.0, Firefox ESR 24.x before 24.2, Thunderbird before 24.2, and SeaMonkey before 2.23 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",Mozilla Firefox Browser,CWE-119,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 26.0, Firefox ESR 24.x before 24.2, Thunderbird before 24.2, and SeaMonkey before 2.23 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 26.0, Firefox ESR 24.x before 24.2, Thunderbird before 24.2, and SeaMonkey before 2.23 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119",2013-12-11T15:55:07.433,9.8,CRITICAL,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 260 firefox esr 24x before 242 thunderbird before 242 and seamonkey before 223 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 26.0, Firefox ESR 24.x before 24.2, Thunderbird before 24.2, and SeaMonkey before 2.23 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119
CVE-2013-5610,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 26.0 and SeaMonkey before 2.23 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 26.0 and SeaMonkey before 2.23 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 26.0 and SeaMonkey before 2.23 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2013-12-11T15:55:07.527,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 260 and seamonkey before 223 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 26.0 and SeaMonkey before 2.23 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2014-1477,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 27.0, Firefox ESR 24.x before 24.3, Thunderbird before 24.3, and SeaMonkey before 2.24 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 27.0, Firefox ESR 24.x before 24.3, Thunderbird before 24.3, and SeaMonkey before 2.24 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 27.0, Firefox ESR 24.x before 24.3, Thunderbird before 24.3, and SeaMonkey before 2.24 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2014-02-06T05:44:24.393,9.8,CRITICAL,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 270 firefox esr 24x before 243 thunderbird before 243 and seamonkey before 224 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 27.0, Firefox ESR 24.x before 24.3, Thunderbird before 24.3, and SeaMonkey before 2.24 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2014-1478,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 27.0 and SeaMonkey before 2.24 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the MPostWriteBarrier class in j,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 27.0 and SeaMonkey before 2.24 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the MPostWriteBarrier class in j  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 27.0 and SeaMonkey before 2.24 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the MPostWriteBarrier class in j  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2014-02-06T05:44:24.783,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 270 and seamonkey before 224 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to the mpostwritebarrier class in j,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 27.0 and SeaMonkey before 2.24 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to the MPostWriteBarrier class in j,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2014-1493,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 28.0, Firefox ESR 24.x before 24.4, Thunderbird before 24.4, and SeaMonkey before 2.25 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 28.0, Firefox ESR 24.x before 24.4, Thunderbird before 24.4, and SeaMonkey before 2.25 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 28.0, Firefox ESR 24.x before 24.4, Thunderbird before 24.4, and SeaMonkey before 2.25 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2014-03-19T10:55:06.240,9.8,CRITICAL,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 280 firefox esr 24x before 244 thunderbird before 244 and seamonkey before 225 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 28.0, Firefox ESR 24.x before 24.4, Thunderbird before 24.4, and SeaMonkey before 2.25 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2014-1494,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 28.0 and SeaMonkey before 2.25 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 28.0 and SeaMonkey before 2.25 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 28.0 and SeaMonkey before 2.25 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2014-03-19T10:55:06.270,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 280 and seamonkey before 225 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 28.0 and SeaMonkey before 2.25 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2014-1504,"The session-restore feature in Mozilla Firefox before 28.0 and SeaMonkey before 2.25 does not consider the Content Security Policy of a data: URL, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via a crafted document that is accessed after a browser restart.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The session-restore feature in Mozilla Firefox before 28.0 and SeaMonkey before 2.25 does not consider the Content Security Policy of a data: URL, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via a crafted document that is accessed after a browser restart.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The session-restore feature in Mozilla Firefox before 28.0 and SeaMonkey before 2.25 does not consider the Content Security Policy of a data: URL, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via a crafted document that is accessed after a browser restart.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2014-03-19T10:55:06.473,,,nvd,the sessionrestore feature in mozilla firefox before 280 and seamonkey before 225 does not consider the content security policy of a data url which makes it easier for remote attackers to conduct crosssite scripting xss attacks via a crafted document that is accessed after a browser restart,"The session-restore feature in Mozilla Firefox before 28.0 and SeaMonkey before 2.25 does not consider the Content Security Policy of a data: URL, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via a crafted document that is accessed after a browser restart.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2014-1518,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 29.0, Firefox ESR 24.x before 24.5, Thunderbird before 24.5, and SeaMonkey before 2.26 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 29.0, Firefox ESR 24.x before 24.5, Thunderbird before 24.5, and SeaMonkey before 2.26 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 29.0, Firefox ESR 24.x before 24.5, Thunderbird before 24.5, and SeaMonkey before 2.26 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2014-04-30T10:49:04.677,8.8,HIGH,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 290 firefox esr 24x before 245 thunderbird before 245 and seamonkey before 226 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 29.0, Firefox ESR 24.x before 24.5, Thunderbird before 24.5, and SeaMonkey before 2.26 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2014-1519,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 29.0 and SeaMonkey before 2.26 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code through unspecified vectors in the browser engine. Vendor: Mozilla Cause: Unspecified vulnerabilities in the browser engine Impact: Denial of service, arbitrary code execution","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 29.0 and SeaMonkey before 2.26 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code through unspecified vectors in the browser engine. Vendor: Mozilla Cause: Unspecified vulnerabilities in the browser engine Impact: Denial of service, arbitrary code execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 29.0 and SeaMonkey before 2.26 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code through unspecified vectors in the browser engine. Vendor: Mozilla Cause: Unspecified vulnerabilities in the browser engine Impact: Denial of service, arbitrary code execution",2014-04-30T10:49:04.707,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 290 and seamonkey before 226 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 29.0 and SeaMonkey before 2.26 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code through unspecified vectors in the browser engine. Vendor: Mozilla Cause: Unspecified vulnerabilities in the browser engine Impact: Denial of service, arbitrary code execution"
CVE-2014-1533,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 30.0, Firefox ESR 24.x before 24.6, and Thunderbird before 24.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 30.0, Firefox ESR 24.x before 24.6, and Thunderbird before 24.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 30.0, Firefox ESR 24.x before 24.6, and Thunderbird before 24.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2014-06-11T10:57:17.657,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 300 firefox esr 24x before 246 and thunderbird before 246 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 30.0, Firefox ESR 24.x before 24.6, and Thunderbird before 24.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2014-1534,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 30.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 30.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 30.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2014-06-11T10:57:17.720,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 300 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 30.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2014-1547,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 31.0, Firefox ESR 24.x before 24.7, and Thunderbird before 24.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 31.0, Firefox ESR 24.x before 24.7, and Thunderbird before 24.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 31.0, Firefox ESR 24.x before 24.7, and Thunderbird before 24.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2014-07-23T11:12:42.857,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 310 firefox esr 24x before 247 and thunderbird before 247 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 31.0, Firefox ESR 24.x before 24.7, and Thunderbird before 24.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2014-1548,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 31.0 and Thunderbird before 31.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine of Mozilla Firefox and Thunderbird. Vendor: Mozilla Cause: Unspecified vulnerability in the browser engine Impact: Denial of service, arbitrary code execution","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 31.0 and Thunderbird before 31.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine of Mozilla Firefox and Thunderbird. Vendor: Mozilla Cause: Unspecified vulnerability in the browser engine Impact: Denial of service, arbitrary code execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 31.0 and Thunderbird before 31.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine of Mozilla Firefox and Thunderbird. Vendor: Mozilla Cause: Unspecified vulnerability in the browser engine Impact: Denial of service, arbitrary code execution",2014-07-23T11:12:42.903,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 310 and thunderbird before 310 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 31.0 and Thunderbird before 31.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: The vulnerability allows an attacker to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors in the browser engine of Mozilla Firefox and Thunderbird. Vendor: Mozilla Cause: Unspecified vulnerability in the browser engine Impact: Denial of service, arbitrary code execution"
CVE-2014-1553,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 32.0, Firefox ESR 31.x before 31.1, and Thunderbird 31.x before 31.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 32.0, Firefox ESR 31.x before 31.1, and Thunderbird 31.x before 31.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 32.0, Firefox ESR 31.x before 31.1, and Thunderbird 31.x before 31.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2014-09-03T10:55:06.417,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 320 firefox esr 31x before 311 and thunderbird 31x before 311 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vecto,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 32.0, Firefox ESR 31.x before 31.1, and Thunderbird 31.x before 31.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2014-1554,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 32.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 32.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 32.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2014-09-03T10:55:06.497,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 320 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 32.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2014-1562,"Unspecified vulnerability in the browser engine in Mozilla Firefox before 32.0, Firefox ESR 24.x before 24.8 and 31.x before 31.1, and Thunderbird 24.x before 24.8 and 31.x before 31.1 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox before 32.0, Firefox ESR 24.x before 24.8 and 31.x before 31.1, and Thunderbird 24.x before 24.8 and 31.x before 31.1 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox before 32.0, Firefox ESR 24.x before 24.8 and 31.x before 31.1, and Thunderbird 24.x before 24.8 and 31.x before 31.1 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254",2014-09-03T10:55:06.557,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox before 320 firefox esr 24x before 248 and 31x before 311 and thunderbird 24x before 248 and 31x before 311 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute,"Unspecified vulnerability in the browser engine in Mozilla Firefox before 32.0, Firefox ESR 24.x before 24.8 and 31.x before 31.1, and Thunderbird 24.x before 24.8 and 31.x before 31.1 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254
CVE-2014-1574,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 33.0, Firefox ESR 31.x before 31.2, and Thunderbird 31.x before 31.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 33.0, Firefox ESR 31.x before 31.2, and Thunderbird 31.x before 31.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 33.0, Firefox ESR 31.x before 31.2, and Thunderbird 31.x before 31.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2014-10-15T10:55:06.567,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 330 firefox esr 31x before 312 and thunderbird 31x before 312 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vecto,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 33.0, Firefox ESR 31.x before 31.2, and Thunderbird 31.x before 31.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2014-1575,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 33.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to improper interaction between threading and garbage collect,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 33.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to improper interaction between threading and garbage collect  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 33.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to improper interaction between threading and garbage collect  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2014-10-15T10:55:06.630,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 330 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to improper interaction between threading and garbage collect,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 33.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to improper interaction between threading and garbage collect,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2014-1587,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 34.0, Firefox ESR 31.x before 31.3, Thunderbird before 31.3, and SeaMonkey before 2.31 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 34.0, Firefox ESR 31.x before 31.3, Thunderbird before 31.3, and SeaMonkey before 2.31 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 34.0, Firefox ESR 31.x before 31.3, Thunderbird before 31.3, and SeaMonkey before 2.31 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2014-12-11T11:59:00.070,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 340 firefox esr 31x before 313 thunderbird before 313 and seamonkey before 231 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 34.0, Firefox ESR 31.x before 31.3, Thunderbird before 31.3, and SeaMonkey before 2.31 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2014-1588,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 34.0 and SeaMonkey before 2.31 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: This vulnerability allows remote attackers to cause a denial of service or potentially execute arbitrary code through memory corruption. The cause is not specified but involves vectors that trigger memory corruption. Vendor: Mozilla Cause: Memory corruption Impact: Denial of service, potential arbitrary code execution","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 34.0 and SeaMonkey before 2.31 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: This vulnerability allows remote attackers to cause a denial of service or potentially execute arbitrary code through memory corruption. The cause is not specified but involves vectors that trigger memory corruption. Vendor: Mozilla Cause: Memory corruption Impact: Denial of service, potential arbitrary code execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 34.0 and SeaMonkey before 2.31 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: This vulnerability allows remote attackers to cause a denial of service or potentially execute arbitrary code through memory corruption. The cause is not specified but involves vectors that trigger memory corruption. Vendor: Mozilla Cause: Memory corruption Impact: Denial of service, potential arbitrary code execution",2014-12-11T11:59:01.790,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 340 and seamonkey before 231 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 34.0 and SeaMonkey before 2.31 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399 Explanation: This vulnerability allows remote attackers to cause a denial of service or potentially execute arbitrary code through memory corruption. The cause is not specified but involves vectors that trigger memory corruption. Vendor: Mozilla Cause: Memory corruption Impact: Denial of service, potential arbitrary code execution"
CVE-2014-8634,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 35.0, Firefox ESR 31.x before 31.4, Thunderbird before 31.4, and SeaMonkey before 2.32 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 35.0, Firefox ESR 31.x before 31.4, Thunderbird before 31.4, and SeaMonkey before 2.32 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 35.0, Firefox ESR 31.x before 31.4, Thunderbird before 31.4, and SeaMonkey before 2.32 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2015-01-14T11:59:03.397,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 350 firefox esr 31x before 314 thunderbird before 314 and seamonkey before 232 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 35.0, Firefox ESR 31.x before 31.4, Thunderbird before 31.4, and SeaMonkey before 2.32 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2014-8635,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 35.0 and SeaMonkey before 2.32 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 35.0 and SeaMonkey before 2.32 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 35.0 and SeaMonkey before 2.32 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2015-01-14T11:59:04.680,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 350 and seamonkey before 232 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 35.0 and SeaMonkey before 2.32 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2015-0835,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 36.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 36.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 36.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119",2015-02-25T11:59:15.407,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 360 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 36.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119
CVE-2015-0836,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 36.0, Firefox ESR 31.x before 31.5, and Thunderbird before 31.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 36.0, Firefox ESR 31.x before 31.5, and Thunderbird before 31.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 36.0, Firefox ESR 31.x before 31.5, and Thunderbird before 31.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119",2015-02-25T11:59:16.297,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 360 firefox esr 31x before 315 and thunderbird before 315 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 36.0, Firefox ESR 31.x before 31.5, and Thunderbird before 31.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 119
CVE-2015-0814,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 37.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 37.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 37.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2015-04-01T10:59:13.100,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 370 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 37.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2015-0815,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 37.0, Firefox ESR 31.x before 31.6, and Thunderbird before 31.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 37.0, Firefox ESR 31.x before 31.6, and Thunderbird before 31.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 37.0, Firefox ESR 31.x before 31.6, and Thunderbird before 31.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2015-04-01T10:59:13.957,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 370 firefox esr 31x before 316 and thunderbird before 316 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 37.0, Firefox ESR 31.x before 31.6, and Thunderbird before 31.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2015-2708,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 38.0, Firefox ESR 31.x before 31.7, and Thunderbird before 31.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 38.0, Firefox ESR 31.x before 31.7, and Thunderbird before 31.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 38.0, Firefox ESR 31.x before 31.7, and Thunderbird before 31.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2015-05-14T10:59:01.367,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 380 firefox esr 31x before 317 and thunderbird before 317 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 38.0, Firefox ESR 31.x before 31.7, and Thunderbird before 31.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2015-2709,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 38.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: Memory corruption in the browser engine Impact: Denial of service, arbitrary code execution","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 38.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: Memory corruption in the browser engine Impact: Denial of service, arbitrary code execution","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 38.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: Memory corruption in the browser engine Impact: Denial of service, arbitrary code execution",2015-05-14T10:59:02.337,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 380 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 38.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125 Explanation: The vulnerability allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors. Vendor: Mozilla Cause: Memory corruption in the browser engine Impact: Denial of service, arbitrary code execution"
CVE-2015-2724,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0, Firefox ESR 31.x before 31.8 and 38.x before 38.1, and Thunderbird before 38.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code v",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0, Firefox ESR 31.x before 31.8 and 38.x before 38.1, and Thunderbird before 38.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code v  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0, Firefox ESR 31.x before 31.8 and 38.x before 38.1, and Thunderbird before 38.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code v  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2015-07-06T02:00:55.830,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 390 firefox esr 31x before 318 and 38x before 381 and thunderbird before 381 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code v,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0, Firefox ESR 31.x before 31.8 and 38.x before 38.1, and Thunderbird before 38.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code v",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2015-2725,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0, Firefox ESR 38.x before 38.1, and Thunderbird before 38.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0, Firefox ESR 38.x before 38.1, and Thunderbird before 38.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0, Firefox ESR 38.x before 38.1, and Thunderbird before 38.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2015-07-06T02:00:56.737,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 390 firefox esr 38x before 381 and thunderbird before 381 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0, Firefox ESR 38.x before 38.1, and Thunderbird before 38.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2015-2726,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2015-07-06T02:00:57.627,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 390 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 39.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2015-2744,Cross-site scripting (XSS) vulnerability in the Search app in Gaia in Mozilla Firefox OS before 2.2 allows remote attackers to inject arbitrary HTML via a crafted search link that is mishandled after re-opening the browser or opening the tab view.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site scripting (XSS) vulnerability in the Search app in Gaia in Mozilla Firefox OS before 2.2 allows remote attackers to inject arbitrary HTML via a crafted search link that is mishandled after re-opening the browser or opening the tab view.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site scripting (XSS) vulnerability in the Search app in Gaia in Mozilla Firefox OS before 2.2 allows remote attackers to inject arbitrary HTML via a crafted search link that is mishandled after re-opening the browser or opening the tab view.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2015-08-08T00:59:00.110,,,nvd,crosssite scripting xss vulnerability in the search app in gaia in mozilla firefox os before 22 allows remote attackers to inject arbitrary html via a crafted search link that is mishandled after reopening the browser or opening the tab view,Cross-site scripting (XSS) vulnerability in the Search app in Gaia in Mozilla Firefox OS before 2.2 allows remote attackers to inject arbitrary HTML via a crafted search link that is mishandled after re-opening the browser or opening the tab view.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2015-4473,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 40.0 and Firefox ESR 38.x before 38.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 40.0 and Firefox ESR 38.x before 38.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 40.0 and Firefox ESR 38.x before 38.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2015-08-16T01:59:00.080,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 400 and firefox esr 38x before 382 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 40.0 and Firefox ESR 38.x before 38.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2015-4474,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 40.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 40.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 40.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254",2015-08-16T01:59:02.143,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 400 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 40.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254
CVE-2015-4500,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 and Firefox ESR 38.x before 38.3 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 and Firefox ESR 38.x before 38.3 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 and Firefox ESR 38.x before 38.3 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2015-09-24T04:59:02.473,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 410 and firefox esr 38x before 383 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 and Firefox ESR 38.x before 38.3 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2015-4501,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2015-09-24T04:59:03.787,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 410 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2015-4513,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 42.0 and Firefox ESR 38.x before 38.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 42.0 and Firefox ESR 38.x before 38.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 42.0 and Firefox ESR 38.x before 38.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2015-11-05T05:59:00.117,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 420 and firefox esr 38x before 384 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 42.0 and Firefox ESR 38.x before 38.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2015-4514,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 42.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 42.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 42.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416",2015-11-05T05:59:01.960,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 420 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 42.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 416
CVE-2015-7201,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 43.0 and Firefox ESR 38.x before 38.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 43.0 and Firefox ESR 38.x before 38.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 43.0 and Firefox ESR 38.x before 38.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2015-12-16T11:59:00.113,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 430 and firefox esr 38x before 385 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 43.0 and Firefox ESR 38.x before 38.5 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2015-7202,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 43.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 43.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 43.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2015-12-16T11:59:01.537,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 430 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 43.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-1930,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 44.0 and Firefox ESR 38.x before 38.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 44.0 and Firefox ESR 38.x before 38.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 44.0 and Firefox ESR 38.x before 38.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2016-01-31T18:59:00.137,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 440 and firefox esr 38x before 386 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 44.0 and Firefox ESR 38.x before 38.6 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2016-1931,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 44.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to uninitialized memory encountered during brotli data compre,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 44.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to uninitialized memory encountered during brotli data compre  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 44.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to uninitialized memory encountered during brotli data compre  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2016-01-31T18:59:01.120,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 440 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to uninitialized memory encountered during brotli data compre,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 44.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to uninitialized memory encountered during brotli data compre,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-1952,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 45.0 and Firefox ESR 38.x before 38.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 45.0 and Firefox ESR 38.x before 38.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 45.0 and Firefox ESR 38.x before 38.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2016-03-13T18:59:01.317,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 450 and firefox esr 38x before 387 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 45.0 and Firefox ESR 38.x before 38.7 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2016-1953,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 45.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to js/src/jit/arm/Assembler-arm.cpp, and unknown other vector",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 45.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to js/src/jit/arm/Assembler-arm.cpp, and unknown other vector  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 45.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to js/src/jit/arm/Assembler-arm.cpp, and unknown other vector  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2016-03-13T18:59:02.490,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 450 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to jssrcjitarmassemblerarmcpp and unknown other vector,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 45.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to js/src/jit/arm/Assembler-arm.cpp, and unknown other vector",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-1958,browser/base/content/browser.js in Mozilla Firefox before 45.0 and Firefox ESR 38.x before 38.7 allows remote attackers to spoof the address bar via a javascript: URL.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/base/content/browser.js in Mozilla Firefox before 45.0 and Firefox ESR 38.x before 38.7 allows remote attackers to spoof the address bar via a javascript: URL.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  browser/base/content/browser.js in Mozilla Firefox before 45.0 and Firefox ESR 38.x before 38.7 allows remote attackers to spoof the address bar via a javascript: URL.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345",2016-03-13T18:59:07.677,,,nvd,browserbasecontentbrowserjs in mozilla firefox before 450 and firefox esr 38x before 387 allows remote attackers to spoof the address bar via a javascript url,browser/base/content/browser.js in Mozilla Firefox before 45.0 and Firefox ESR 38.x before 38.7 allows remote attackers to spoof the address bar via a javascript: URL.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345
CVE-2016-1967,"Mozilla Firefox before 45.0 does not properly restrict the availability of IFRAME Resource Timing API times, which allows remote attackers to bypass the Same Origin Policy and obtain sensitive information via crafted JavaScript code that leverages history.back and performance.getEntries calls after ",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 45.0 does not properly restrict the availability of IFRAME Resource Timing API times, which allows remote attackers to bypass the Same Origin Policy and obtain sensitive information via crafted JavaScript code that leverages history.back and performance.getEntries calls after  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 45.0 does not properly restrict the availability of IFRAME Resource Timing API times, which allows remote attackers to bypass the Same Origin Policy and obtain sensitive information via crafted JavaScript code that leverages history.back and performance.getEntries calls after  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005",2016-03-13T18:59:16.367,,,nvd,mozilla firefox before 450 does not properly restrict the availability of iframe resource timing api times which allows remote attackers to bypass the same origin policy and obtain sensitive information via crafted javascript code that leverages historyback and performancegetentries calls after,"Mozilla Firefox before 45.0 does not properly restrict the availability of IFRAME Resource Timing API times, which allows remote attackers to bypass the Same Origin Policy and obtain sensitive information via crafted JavaScript code that leverages history.back and performance.getEntries calls after ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005
CVE-2016-2804,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2016-04-30T17:59:00.113,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 460 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2016-2805,Unspecified vulnerability in the browser engine in Mozilla Firefox ESR 38.x before 38.8 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox ESR 38.x before 38.8 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified vulnerability in the browser engine in Mozilla Firefox ESR 38.x before 38.8 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2016-04-30T17:59:01.193,,,nvd,unspecified vulnerability in the browser engine in mozilla firefox esr 38x before 388 allows remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Unspecified vulnerability in the browser engine in Mozilla Firefox ESR 38.x before 38.8 allows remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-2806,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0 and Firefox ESR 45.x before 45.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0 and Firefox ESR 45.x before 45.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0 and Firefox ESR 45.x before 45.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2016-04-30T17:59:02.130,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 460 and firefox esr 45x before 451 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0 and Firefox ESR 45.x before 45.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-2807,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0, Firefox ESR 38.x before 38.8, and Firefox ESR 45.x before 45.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0, Firefox ESR 38.x before 38.8, and Firefox ESR 45.x before 45.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0, Firefox ESR 38.x before 38.8, and Firefox ESR 45.x before 45.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2016-04-30T17:59:03.130,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 460 firefox esr 38x before 388 and firefox esr 45x before 451 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vecto,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 46.0, Firefox ESR 38.x before 38.8, and Firefox ESR 45.x before 45.1 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vecto",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-2810,"Mozilla Firefox before 46.0 on Android before 5.0 allows attackers to bypass intended Signature access requirements via a crafted application that leverages content-provider permissions, as demonstrated by reading the browser history or a saved password.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 46.0 on Android before 5.0 allows attackers to bypass intended Signature access requirements via a crafted application that leverages content-provider permissions, as demonstrated by reading the browser history or a saved password.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 46.0 on Android before 5.0 allows attackers to bypass intended Signature access requirements via a crafted application that leverages content-provider permissions, as demonstrated by reading the browser history or a saved password.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2016-04-30T17:59:07.350,,,nvd,mozilla firefox before 460 on android before 50 allows attackers to bypass intended signature access requirements via a crafted application that leverages contentprovider permissions as demonstrated by reading the browser history or a saved password,"Mozilla Firefox before 46.0 on Android before 5.0 allows attackers to bypass intended Signature access requirements via a crafted application that leverages content-provider permissions, as demonstrated by reading the browser history or a saved password.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2016-2817,"The WebExtension sandbox feature in browser/components/extensions/ext-tabs.js in Mozilla Firefox before 46.0 does not properly restrict principal inheritance during chrome.tabs.create and chrome.tabs.update API calls, which allows remote attackers to conduct Universal XSS (UXSS) attacks via a crafte",Mozilla Firefox Browser,CWE-20,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: CWE-20 is a classic example of a type of vulnerability that allows an attacker to execute arbitrary code on the victim's machine. This is done by tricking the user into executing a malicious script. The vulnerability is particularly dangerous because it can be exploited by any website, making it a critical issue for web security. Vendor: Mozilla Cause: The vulnerability lies in the way the WebExtension sandbox feature handles principal inheritance during chrome.tabs.create and chrome.tabs.update API calls. This allows a malicious website to bypass the same-origin policy and execute code in the context of a different website. Impact: An attacker can execute arbitrary code on the victim's machine, potentially leading to a complete compromise of the system. This allows for a wide range of attacks, including stealing sensitive information, installing malware, and taking full control of the victim's system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The WebExtension sandbox feature in browser/components/extensions/ext-tabs.js in Mozilla Firefox before 46.0 does not properly restrict principal inheritance during chrome.tabs.create and chrome.tabs.update API calls, which allows remote attackers to conduct Universal XSS (UXSS) attacks via a crafte  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: CWE-20 is a classic example of a type of vulnerability that allows an attacker to execute arbitrary code on the victim's machine. This is done by tricking the user into executing a malicious script. The vulnerability is particularly dangerous because it can be exploited by any website, making it a critical issue for web security. Vendor: Mozilla Cause: The vulnerability lies in the way the WebExtension sandbox feature handles principal inheritance during chrome.tabs.create and chrome.tabs.update API calls. This allows a malicious website to bypass the same-origin policy and execute code in the context of a different website. Impact: An attacker can execute arbitrary code on the victim's machine, potentially leading to a complete compromise of the system. This allows for a wide range of attacks, including stealing sensitive information, installing malware, and taking full control of the victim's system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The WebExtension sandbox feature in browser/components/extensions/ext-tabs.js in Mozilla Firefox before 46.0 does not properly restrict principal inheritance during chrome.tabs.create and chrome.tabs.update API calls, which allows remote attackers to conduct Universal XSS (UXSS) attacks via a crafte  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: CWE-20 is a classic example of a type of vulnerability that allows an attacker to execute arbitrary code on the victim's machine. This is done by tricking the user into executing a malicious script. The vulnerability is particularly dangerous because it can be exploited by any website, making it a critical issue for web security. Vendor: Mozilla Cause: The vulnerability lies in the way the WebExtension sandbox feature handles principal inheritance during chrome.tabs.create and chrome.tabs.update API calls. This allows a malicious website to bypass the same-origin policy and execute code in the context of a different website. Impact: An attacker can execute arbitrary code on the victim's machine, potentially leading to a complete compromise of the system. This allows for a wide range of attacks, including stealing sensitive information, installing malware, and taking full control of the victim's system.",2016-04-30T17:59:14.647,,,nvd,the webextension sandbox feature in browsercomponentsextensionsexttabsjs in mozilla firefox before 460 does not properly restrict principal inheritance during chrometabscreate and chrometabsupdate api calls which allows remote attackers to conduct universal xss uxss attacks via a crafte,"The WebExtension sandbox feature in browser/components/extensions/ext-tabs.js in Mozilla Firefox before 46.0 does not properly restrict principal inheritance during chrome.tabs.create and chrome.tabs.update API calls, which allows remote attackers to conduct Universal XSS (UXSS) attacks via a crafte","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: CWE-20 is a classic example of a type of vulnerability that allows an attacker to execute arbitrary code on the victim's machine. This is done by tricking the user into executing a malicious script. The vulnerability is particularly dangerous because it can be exploited by any website, making it a critical issue for web security. Vendor: Mozilla Cause: The vulnerability lies in the way the WebExtension sandbox feature handles principal inheritance during chrome.tabs.create and chrome.tabs.update API calls. This allows a malicious website to bypass the same-origin policy and execute code in the context of a different website. Impact: An attacker can execute arbitrary code on the victim's machine, potentially leading to a complete compromise of the system. This allows for a wide range of attacks, including stealing sensitive information, installing malware, and taking full control of the victim's system."
CVE-2016-2815,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 47.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 47.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 47.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2016-06-13T10:59:00.120,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 470 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 47.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-2818,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 47.0 and Firefox ESR 45.x before 45.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 47.0 and Firefox ESR 45.x before 45.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 47.0 and Firefox ESR 45.x before 45.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2016-06-13T10:59:01.540,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 470 and firefox esr 45x before 452 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 47.0 and Firefox ESR 45.x before 45.2 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-2830,"Mozilla Firefox before 48.0 and Firefox ESR 45.x before 45.3 preserve the network connection used for favicon resource retrieval after the associated browser window is closed, which makes it easier for remote web servers to track users by observing network traffic from multiple IP addresses.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 48.0 and Firefox ESR 45.x before 45.3 preserve the network connection used for favicon resource retrieval after the associated browser window is closed, which makes it easier for remote web servers to track users by observing network traffic from multiple IP addresses.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla Firefox before 48.0 and Firefox ESR 45.x before 45.3 preserve the network connection used for favicon resource retrieval after the associated browser window is closed, which makes it easier for remote web servers to track users by observing network traffic from multiple IP addresses.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522",2016-08-05T01:59:00.140,,,nvd,mozilla firefox before 480 and firefox esr 45x before 453 preserve the network connection used for favicon resource retrieval after the associated browser window is closed which makes it easier for remote web servers to track users by observing network traffic from multiple ip addresses,"Mozilla Firefox before 48.0 and Firefox ESR 45.x before 45.3 preserve the network connection used for favicon resource retrieval after the associated browser window is closed, which makes it easier for remote web servers to track users by observing network traffic from multiple IP addresses.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522
CVE-2016-2835,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 48.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 48.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 48.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2016-08-05T01:59:01.187,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 480 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 48.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-2836,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 48.0 and Firefox ESR 45.x before 45.3 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to Http2Session::Shutdown an,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 48.0 and Firefox ESR 45.x before 45.3 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to Http2Session::Shutdown an  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 48.0 and Firefox ESR 45.x before 45.3 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to Http2Session::Shutdown an  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2016-08-05T01:59:02.500,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 480 and firefox esr 45x before 453 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via vectors related to http2sessionshutdown an,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 48.0 and Firefox ESR 45.x before 45.3 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via vectors related to Http2Session::Shutdown an,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2016-5256,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 49.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 49.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 49.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2016-09-22T22:59:01.567,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 490 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 49.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2016-5257,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 49.0, Firefox ESR 45.x before 45.4 and Thunderbird < 45.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 49.0, Firefox ESR 45.x before 45.4 and Thunderbird < 45.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 49.0, Firefox ESR 45.x before 45.4 and Thunderbird < 45.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254",2016-09-22T22:59:02.647,,,nvd,multiple unspecified vulnerabilities in the browser engine in mozilla firefox before 490 firefox esr 45x before 454 and thunderbird  454 allow remote attackers to cause a denial of service memory corruption and application crash or possibly execute arbitrary code via unknown vectors,"Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 49.0, Firefox ESR 45.x before 45.4 and Thunderbird < 45.4 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1254
CVE-2018-13389,The attachment resource in Atlassian Confluence before version 6.6.1 allows remote attackers to spoof web content in the Mozilla Firefox Browser through attachments that have a content-type of application/rdf+xml.,Mozilla Firefox Browser,CWE-601,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: CWE-601: More Than One Hole Allowed by the Design Vendor: Atlassian Cause: The vulnerability allows remote attackers to spoof web content through attachments with a specific content-type. Impact: Spoofing of web content in the Mozilla Firefox browser.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The attachment resource in Atlassian Confluence before version 6.6.1 allows remote attackers to spoof web content in the Mozilla Firefox Browser through attachments that have a content-type of application/rdf+xml.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: CWE-601: More Than One Hole Allowed by the Design Vendor: Atlassian Cause: The vulnerability allows remote attackers to spoof web content through attachments with a specific content-type. Impact: Spoofing of web content in the Mozilla Firefox browser.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The attachment resource in Atlassian Confluence before version 6.6.1 allows remote attackers to spoof web content in the Mozilla Firefox Browser through attachments that have a content-type of application/rdf+xml.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: CWE-601: More Than One Hole Allowed by the Design Vendor: Atlassian Cause: The vulnerability allows remote attackers to spoof web content through attachments with a specific content-type. Impact: Spoofing of web content in the Mozilla Firefox browser.",2018-07-10T13:29:00.607,,,nvd,the attachment resource in atlassian confluence before version 661 allows remote attackers to spoof web content in the mozilla firefox browser through attachments that have a contenttype of applicationrdfxml,The attachment resource in Atlassian Confluence before version 6.6.1 allows remote attackers to spoof web content in the Mozilla Firefox Browser through attachments that have a content-type of application/rdf+xml.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601 Explanation: CWE-601: More Than One Hole Allowed by the Design Vendor: Atlassian Cause: The vulnerability allows remote attackers to spoof web content through attachments with a specific content-type. Impact: Spoofing of web content in the Mozilla Firefox browser.
CVE-2017-18103,"The atlassian-http library, as used in various Atlassian products, before version 2.0.2 allows remote attackers to spoof web content in the Mozilla Firefox Browser through uploaded files that have a content-type of application/mathml+xml.",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The atlassian-http library, as used in various Atlassian products, before version 2.0.2 allows remote attackers to spoof web content in the Mozilla Firefox Browser through uploaded files that have a content-type of application/mathml+xml.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The atlassian-http library, as used in various Atlassian products, before version 2.0.2 allows remote attackers to spoof web content in the Mozilla Firefox Browser through uploaded files that have a content-type of application/mathml+xml.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2018-07-18T14:29:00.210,,,nvd,the atlassianhttp library as used in various atlassian products before version 202 allows remote attackers to spoof web content in the mozilla firefox browser through uploaded files that have a contenttype of applicationmathmlxml,"The atlassian-http library, as used in various Atlassian products, before version 2.0.2 allows remote attackers to spoof web content in the Mozilla Firefox Browser through uploaded files that have a content-type of application/mathml+xml.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2020-6800,"Mozilla developers and community members reported memory safety bugs present in Firefox 72 and Firefox ESR 68.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. In general, these flaws canno",Mozilla Firefox Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla developers and community members reported memory safety bugs present in Firefox 72 and Firefox ESR 68.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. In general, these flaws canno  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Mozilla developers and community members reported memory safety bugs present in Firefox 72 and Firefox ESR 68.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. In general, these flaws canno  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125",2020-03-02T05:15:13.683,8.8,HIGH,nvd,mozilla developers and community members reported memory safety bugs present in firefox 72 and firefox esr 684 some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code in general these flaws canno,"Mozilla developers and community members reported memory safety bugs present in Firefox 72 and Firefox ESR 68.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. In general, these flaws canno",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 125
CVE-2021-29951,"The Mozilla Maintenance Service granted SERVICE_START access to BUILTIN|Users which, in a domain network, grants normal remote users access to start or stop the service. This could be used to prevent the browser update service from operating (if an attacker spammed the 'Stop' command); but also expo",Mozilla Firefox Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation Vendor: Mozilla Cause: The Mozilla Maintenance Service incorrectly granted SERVICE_START access to BUILTIN|Users, allowing remote users to start or stop the service Impact: Attackers could prevent browser update service operation by spamming 'Stop' commands","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Mozilla Maintenance Service granted SERVICE_START access to BUILTIN|Users which, in a domain network, grants normal remote users access to start or stop the service. This could be used to prevent the browser update service from operating (if an attacker spammed the 'Stop' command); but also expo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation Vendor: Mozilla Cause: The Mozilla Maintenance Service incorrectly granted SERVICE_START access to BUILTIN|Users, allowing remote users to start or stop the service Impact: Attackers could prevent browser update service operation by spamming 'Stop' commands","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Mozilla Maintenance Service granted SERVICE_START access to BUILTIN|Users which, in a domain network, grants normal remote users access to start or stop the service. This could be used to prevent the browser update service from operating (if an attacker spammed the 'Stop' command); but also expo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation Vendor: Mozilla Cause: The Mozilla Maintenance Service incorrectly granted SERVICE_START access to BUILTIN|Users, allowing remote users to start or stop the service Impact: Attackers could prevent browser update service operation by spamming 'Stop' commands",2021-06-24T14:15:09.943,6.5,MEDIUM,nvd,the mozilla maintenance service granted service_start access to builtinusers which in a domain network grants normal remote users access to start or stop the service this could be used to prevent the browser update service from operating if an attacker spammed the stop command but also expo,"The Mozilla Maintenance Service granted SERVICE_START access to BUILTIN|Users which, in a domain network, grants normal remote users access to start or stop the service. This could be used to prevent the browser update service from operating (if an attacker spammed the 'Stop' command); but also expo","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20 Explanation: Improper input validation Vendor: Mozilla Cause: The Mozilla Maintenance Service incorrectly granted SERVICE_START access to BUILTIN|Users, allowing remote users to start or stop the service Impact: Attackers could prevent browser update service operation by spamming 'Stop' commands"
CVE-2007-2175,"Apple QuickTime Java extensions (QTJava.dll), as used in Safari and other browsers, and when Java is enabled, allows remote attackers to execute arbitrary code via parameters to the toQTPointer method in quicktime.util.QTHandleRef, which can be used to modify arbitrary memory when creating QTPointer",Apple Safari Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apple QuickTime Java extensions (QTJava.dll), as used in Safari and other browsers, and when Java is enabled, allows remote attackers to execute arbitrary code via parameters to the toQTPointer method in quicktime.util.QTHandleRef, which can be used to modify arbitrary memory when creating QTPointer  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apple QuickTime Java extensions (QTJava.dll), as used in Safari and other browsers, and when Java is enabled, allows remote attackers to execute arbitrary code via parameters to the toQTPointer method in quicktime.util.QTHandleRef, which can be used to modify arbitrary memory when creating QTPointer  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2007-04-24T16:19:00.000,,,nvd,apple quicktime java extensions qtjavadll as used in safari and other browsers and when java is enabled allows remote attackers to execute arbitrary code via parameters to the toqtpointer method in quicktimeutilqthandleref which can be used to modify arbitrary memory when creating qtpointer,"Apple QuickTime Java extensions (QTJava.dll), as used in Safari and other browsers, and when Java is enabled, allows remote attackers to execute arbitrary code via parameters to the toQTPointer method in quicktime.util.QTHandleRef, which can be used to modify arbitrary memory when creating QTPointer",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2007-4424,"Apple Safari for Windows 3.0.3 and earlier does not prompt the user before downloading a file, which allows remote attackers to download arbitrary files to the desktop of a client system via certain HTML, as demonstrated by a filename in the DATA attribute of an OBJECT element. NOTE: it could be arg",Apple Safari Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 434,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apple Safari for Windows 3.0.3 and earlier does not prompt the user before downloading a file, which allows remote attackers to download arbitrary files to the desktop of a client system via certain HTML, as demonstrated by a filename in the DATA attribute of an OBJECT element. NOTE: it could be arg  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 434","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apple Safari for Windows 3.0.3 and earlier does not prompt the user before downloading a file, which allows remote attackers to download arbitrary files to the desktop of a client system via certain HTML, as demonstrated by a filename in the DATA attribute of an OBJECT element. NOTE: it could be arg  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 434",2007-08-18T22:17:00.000,,,nvd,apple safari for windows 303 and earlier does not prompt the user before downloading a file which allows remote attackers to download arbitrary files to the desktop of a client system via certain html as demonstrated by a filename in the data attribute of an object element note it could be arg,"Apple Safari for Windows 3.0.3 and earlier does not prompt the user before downloading a file, which allows remote attackers to download arbitrary files to the desktop of a client system via certain HTML, as demonstrated by a filename in the DATA attribute of an OBJECT element. NOTE: it could be arg",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 434
CVE-2008-3644,"Apple Safari before 3.2 does not properly prevent caching of form data for form fields that have autocomplete disabled, which allows local users to obtain sensitive information by reading the browser's page cache.",Apple Safari Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apple Safari before 3.2 does not properly prevent caching of form data for form fields that have autocomplete disabled, which allows local users to obtain sensitive information by reading the browser's page cache.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apple Safari before 3.2 does not properly prevent caching of form data for form fields that have autocomplete disabled, which allows local users to obtain sensitive information by reading the browser's page cache.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287",2008-11-17T18:18:47.860,,,nvd,apple safari before 32 does not properly prevent caching of form data for form fields that have autocomplete disabled which allows local users to obtain sensitive information by reading the browsers page cache,"Apple Safari before 3.2 does not properly prevent caching of form data for form fields that have autocomplete disabled, which allows local users to obtain sensitive information by reading the browser's page cache.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287
CVE-2008-5821,"Memory leak in WebKit.dll in WebKit, as used by Apple Safari 3.2 on Windows Vista SP1, allows remote attackers to cause a denial of service (memory consumption and browser crash) via a long ALINK attribute in a BODY element in an HTML document.",Apple Safari Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Memory leak in WebKit.dll in WebKit, as used by Apple Safari 3.2 on Windows Vista SP1, allows remote attackers to cause a denial of service (memory consumption and browser crash) via a long ALINK attribute in a BODY element in an HTML document.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Memory leak in WebKit.dll in WebKit, as used by Apple Safari 3.2 on Windows Vista SP1, allows remote attackers to cause a denial of service (memory consumption and browser crash) via a long ALINK attribute in a BODY element in an HTML document.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2009-01-02T19:30:00.377,,,nvd,memory leak in webkitdll in webkit as used by apple safari 32 on windows vista sp1 allows remote attackers to cause a denial of service memory consumption and browser crash via a long alink attribute in a body element in an html document,"Memory leak in WebKit.dll in WebKit, as used by Apple Safari 3.2 on Windows Vista SP1, allows remote attackers to cause a denial of service (memory consumption and browser crash) via a long ALINK attribute in a BODY element in an HTML document.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2009-1710,"WebKit in Apple Safari before 4.0 allows remote attackers to spoof the browser's display of (1) the host name, (2) security indicators, and unspecified other UI elements via a custom cursor in conjunction with a modified CSS3 hotspot property.",Apple Safari Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  WebKit in Apple Safari before 4.0 allows remote attackers to spoof the browser's display of (1) the host name, (2) security indicators, and unspecified other UI elements via a custom cursor in conjunction with a modified CSS3 hotspot property.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  WebKit in Apple Safari before 4.0 allows remote attackers to spoof the browser's display of (1) the host name, (2) security indicators, and unspecified other UI elements via a custom cursor in conjunction with a modified CSS3 hotspot property.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345",2009-06-10T18:00:00.750,,,nvd,webkit in apple safari before 40 allows remote attackers to spoof the browsers display of 1 the host name 2 security indicators and unspecified other ui elements via a custom cursor in conjunction with a modified css3 hotspot property,"WebKit in Apple Safari before 4.0 allows remote attackers to spoof the browser's display of (1) the host name, (2) security indicators, and unspecified other UI elements via a custom cursor in conjunction with a modified CSS3 hotspot property.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345
CVE-2009-2072,"Apple Safari does not require a cached certificate before displaying a lock icon for an https web site, which allows man-in-the-middle attackers to spoof an arbitrary https site by sending the browser a crafted (1) 4xx or (2) 5xx CONNECT response page for an https request sent through a proxy server",Apple Safari Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2873,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apple Safari does not require a cached certificate before displaying a lock icon for an https web site, which allows man-in-the-middle attackers to spoof an arbitrary https site by sending the browser a crafted (1) 4xx or (2) 5xx CONNECT response page for an https request sent through a proxy server  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2873","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Apple Safari does not require a cached certificate before displaying a lock icon for an https web site, which allows man-in-the-middle attackers to spoof an arbitrary https site by sending the browser a crafted (1) 4xx or (2) 5xx CONNECT response page for an https request sent through a proxy server  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2873",2009-06-15T19:30:05.767,,,nvd,apple safari does not require a cached certificate before displaying a lock icon for an https web site which allows maninthemiddle attackers to spoof an arbitrary https site by sending the browser a crafted 1 4xx or 2 5xx connect response page for an https request sent through a proxy server,"Apple Safari does not require a cached certificate before displaying a lock icon for an https web site, which allows man-in-the-middle attackers to spoof an arbitrary https site by sending the browser a crafted (1) 4xx or (2) 5xx CONNECT response page for an https request sent through a proxy server",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2873
CVE-2015-3763,"Safari in Apple iOS before 8.4.1 does not limit the rate of JavaScript alert messages, which allows remote attackers to cause a denial of service (apparent browser locking) via a crafted web site.",Apple Safari Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Safari in Apple iOS before 8.4.1 does not limit the rate of JavaScript alert messages, which allows remote attackers to cause a denial of service (apparent browser locking) via a crafted web site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Safari in Apple iOS before 8.4.1 does not limit the rate of JavaScript alert messages, which allows remote attackers to cause a denial of service (apparent browser locking) via a crafted web site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20",2015-08-16T23:59:36.580,,,nvd,safari in apple ios before 841 does not limit the rate of javascript alert messages which allows remote attackers to cause a denial of service apparent browser locking via a crafted web site,"Safari in Apple iOS before 8.4.1 does not limit the rate of JavaScript alert messages, which allows remote attackers to cause a denial of service (apparent browser locking) via a crafted web site.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20
CVE-2016-1728,"The Cascading Style Sheets (CSS) implementation in Apple iOS before 9.2.1 and Safari before 9.0.3 mishandles the ""a:visited button"" selector during height processing, which makes it easier for remote attackers to obtain sensitive browser-history information via a crafted web site.",Apple Safari Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Cascading Style Sheets (CSS) implementation in Apple iOS before 9.2.1 and Safari before 9.0.3 mishandles the ""a:visited button"" selector during height processing, which makes it easier for remote attackers to obtain sensitive browser-history information via a crafted web site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Cascading Style Sheets (CSS) implementation in Apple iOS before 9.2.1 and Safari before 9.0.3 mishandles the ""a:visited button"" selector during height processing, which makes it easier for remote attackers to obtain sensitive browser-history information via a crafted web site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005",2016-02-01T11:59:13.073,,,nvd,the cascading style sheets css implementation in apple ios before 921 and safari before 903 mishandles the avisited button selector during height processing which makes it easier for remote attackers to obtain sensitive browserhistory information via a crafted web site,"The Cascading Style Sheets (CSS) implementation in Apple iOS before 9.2.1 and Safari before 9.0.3 mishandles the ""a:visited button"" selector during height processing, which makes it easier for remote attackers to obtain sensitive browser-history information via a crafted web site.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005
CVE-2001-0246,"Internet Explorer 5.5 and earlier does not properly verify the domain of a frame within a browser window, which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain, aka a variant of the ""Frame Domain Verifica",Opera Browser,CWE-601,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer 5.5 and earlier does not properly verify the domain of a frame within a browser window, which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain, aka a variant of the ""Frame Domain Verifica  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer 5.5 and earlier does not properly verify the domain of a frame within a browser window, which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain, aka a variant of the ""Frame Domain Verifica  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2001-06-27T04:00:00.000,,,nvd,internet explorer 55 and earlier does not properly verify the domain of a frame within a browser window which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain aka a variant of the frame domain verifica,"Internet Explorer 5.5 and earlier does not properly verify the domain of a frame within a browser window, which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain, aka a variant of the ""Frame Domain Verifica",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2001-0332,"Internet Explorer 5.5 and earlier does not properly verify the domain of a frame within a browser window, which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain using MSScriptControl.ScriptControl and GetO",Opera Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer 5.5 and earlier does not properly verify the domain of a frame within a browser window, which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain using MSScriptControl.ScriptControl and GetO  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Internet Explorer 5.5 and earlier does not properly verify the domain of a frame within a browser window, which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain using MSScriptControl.ScriptControl and GetO  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2001-06-27T04:00:00.000,,,nvd,internet explorer 55 and earlier does not properly verify the domain of a frame within a browser window which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain using msscriptcontrolscriptcontrol and geto,"Internet Explorer 5.5 and earlier does not properly verify the domain of a frame within a browser window, which allows remote web site operators to read certain files on the client by sending information from a local frame to a frame in a different domain using MSScriptControl.ScriptControl and GetO",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2003-1017,"Macromedia Flash Player before 7,0,19,0 stores a Flash data file in a predictable location that is accessible to web browsers such as Internet Explorer and Opera, which allows remote attackers to read restricted files via vulnerabilities in web browsers whose exploits rely on predictable names.",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Macromedia Flash Player before 7,0,19,0 stores a Flash data file in a predictable location that is accessible to web browsers such as Internet Explorer and Opera, which allows remote attackers to read restricted files via vulnerabilities in web browsers whose exploits rely on predictable names.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Macromedia Flash Player before 7,0,19,0 stores a Flash data file in a predictable location that is accessible to web browsers such as Internet Explorer and Opera, which allows remote attackers to read restricted files via vulnerabilities in web browsers whose exploits rely on predictable names.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2004-01-05T05:00:00.000,,,nvd,macromedia flash player before 70190 stores a flash data file in a predictable location that is accessible to web browsers such as internet explorer and opera which allows remote attackers to read restricted files via vulnerabilities in web browsers whose exploits rely on predictable names,"Macromedia Flash Player before 7,0,19,0 stores a Flash data file in a predictable location that is accessible to web browsers such as Internet Explorer and Opera, which allows remote attackers to read restricted files via vulnerabilities in web browsers whose exploits rely on predictable names.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2004-2083,"Opera Web Browser 7.0 through 7.23 allows remote attackers to trick users into executing a malicious file by embedding a CLSID in the file name, which causes the malicious file to appear as a trusted file type, aka ""File Download Extension Spoofing.""",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 426,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Web Browser 7.0 through 7.23 allows remote attackers to trick users into executing a malicious file by embedding a CLSID in the file name, which causes the malicious file to appear as a trusted file type, aka ""File Download Extension Spoofing.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 426","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Web Browser 7.0 through 7.23 allows remote attackers to trick users into executing a malicious file by embedding a CLSID in the file name, which causes the malicious file to appear as a trusted file type, aka ""File Download Extension Spoofing.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 426",2004-02-11T05:00:00.000,,,nvd,opera web browser 70 through 723 allows remote attackers to trick users into executing a malicious file by embedding a clsid in the file name which causes the malicious file to appear as a trusted file type aka file download extension spoofing,"Opera Web Browser 7.0 through 7.23 allows remote attackers to trick users into executing a malicious file by embedding a CLSID in the file name, which causes the malicious file to appear as a trusted file type, aka ""File Download Extension Spoofing.""",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 426
CVE-2004-2260,"Opera Browser 7.23, and other versions before 7.50, updates the address bar as soon as the user clicks a link, which allows remote attackers to redirect to other sites via the onUnload attribute.",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Browser 7.23, and other versions before 7.50, updates the address bar as soon as the user clicks a link, which allows remote attackers to redirect to other sites via the onUnload attribute.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Browser 7.23, and other versions before 7.50, updates the address bar as soon as the user clicks a link, which allows remote attackers to redirect to other sites via the onUnload attribute.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352",2004-12-31T05:00:00.000,,,nvd,opera browser 723 and other versions before 750 updates the address bar as soon as the user clicks a link which allows remote attackers to redirect to other sites via the onunload attribute,"Opera Browser 7.23, and other versions before 7.50, updates the address bar as soon as the user clicks a link, which allows remote attackers to redirect to other sites via the onUnload attribute.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352
CVE-2004-2491,"A race condition in Opera web browser 7.53 Build 3850 causes Opera to fill in the address bar before the page has been loaded, which allows remote attackers to spoof the URL in the address bar via the window.open and location.replace HTML parameters, which facilitates phishing attacks.",Opera Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A race condition in Opera web browser 7.53 Build 3850 causes Opera to fill in the address bar before the page has been loaded, which allows remote attackers to spoof the URL in the address bar via the window.open and location.replace HTML parameters, which facilitates phishing attacks.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A race condition in Opera web browser 7.53 Build 3850 causes Opera to fill in the address bar before the page has been loaded, which allows remote attackers to spoof the URL in the address bar via the window.open and location.replace HTML parameters, which facilitates phishing attacks.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2004-12-31T05:00:00.000,,,nvd,a race condition in opera web browser 753 build 3850 causes opera to fill in the address bar before the page has been loaded which allows remote attackers to spoof the url in the address bar via the windowopen and locationreplace html parameters which facilitates phishing attacks,"A race condition in Opera web browser 7.53 Build 3850 causes Opera to fill in the address bar before the page has been loaded, which allows remote attackers to spoof the URL in the address bar via the window.open and location.replace HTML parameters, which facilitates phishing attacks.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2005-3041,"Unspecified ""drag-and-drop vulnerability"" in Opera Web Browser before 8.50 on Windows allows ""unintentional file uploads.""",Opera Browser,CWE-352,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: CWE-352 is a 'Cross-Site Request Forgery (CSRF)'. It occurs when any untrusted site can force the victim's browser to perform actions on another site where the user is currently authenticated. Vendor: Opera Software Cause: The vulnerability allowed unintended file uploads through drag-and-drop functionality in Opera Browser before version 8.50 on Windows. Impact: The vulnerability could allow attackers to perform unintended file uploads, potentially leading to unauthorized actions on the targeted site.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified ""drag-and-drop vulnerability"" in Opera Web Browser before 8.50 on Windows allows ""unintentional file uploads.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: CWE-352 is a 'Cross-Site Request Forgery (CSRF)'. It occurs when any untrusted site can force the victim's browser to perform actions on another site where the user is currently authenticated. Vendor: Opera Software Cause: The vulnerability allowed unintended file uploads through drag-and-drop functionality in Opera Browser before version 8.50 on Windows. Impact: The vulnerability could allow attackers to perform unintended file uploads, potentially leading to unauthorized actions on the targeted site.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Unspecified ""drag-and-drop vulnerability"" in Opera Web Browser before 8.50 on Windows allows ""unintentional file uploads.""  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: CWE-352 is a 'Cross-Site Request Forgery (CSRF)'. It occurs when any untrusted site can force the victim's browser to perform actions on another site where the user is currently authenticated. Vendor: Opera Software Cause: The vulnerability allowed unintended file uploads through drag-and-drop functionality in Opera Browser before version 8.50 on Windows. Impact: The vulnerability could allow attackers to perform unintended file uploads, potentially leading to unauthorized actions on the targeted site.",2005-09-22T10:03:00.000,,,nvd,unspecified draganddrop vulnerability in opera web browser before 850 on windows allows unintentional file uploads,"Unspecified ""drag-and-drop vulnerability"" in Opera Web Browser before 8.50 on Windows allows ""unintentional file uploads.""","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: CWE-352 is a 'Cross-Site Request Forgery (CSRF)'. It occurs when any untrusted site can force the victim's browser to perform actions on another site where the user is currently authenticated. Vendor: Opera Software Cause: The vulnerability allowed unintended file uploads through drag-and-drop functionality in Opera Browser before version 8.50 on Windows. Impact: The vulnerability could allow attackers to perform unintended file uploads, potentially leading to unauthorized actions on the targeted site."
CVE-2005-3699,Opera Web Browser 8.50 and 8.0 through 8.0.2 allows remote attackers to spoof the URL in the status bar via the title in an image in a link to a trusted site within a form to the malicious site.,Opera Browser,CWE-601,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Web Browser 8.50 and 8.0 through 8.0.2 allows remote attackers to spoof the URL in the status bar via the title in an image in a link to a trusted site within a form to the malicious site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Web Browser 8.50 and 8.0 through 8.0.2 allows remote attackers to spoof the URL in the status bar via the title in an image in a link to a trusted site within a form to the malicious site.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2005-11-21T11:03:00.000,,,nvd,opera web browser 850 and 80 through 802 allows remote attackers to spoof the url in the status bar via the title in an image in a link to a trusted site within a form to the malicious site,Opera Web Browser 8.50 and 8.0 through 8.0.2 allows remote attackers to spoof the URL in the status bar via the title in an image in a link to a trusted site within a form to the malicious site.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2006-0800,"Interpretation conflict in PostNuke 0.761 and earlier allows remote attackers to conduct cross-site scripting (XSS) attacks via HTML tags with a trailing ""<"" character, which is interpreted as a "">"" character by some web browsers but bypasses the blacklist protection in (1) the pnVarCleanFromInput f",Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Cross-site scripting (XSS) vulnerability allows remote attackers to inject malicious scripts via HTML tags with a trailing ""<"" character that is misinterpreted by some browsers. Vendor: PostNuke Cause: Inadequate filtering of input data, allowing specially crafted HTML tags to bypass input validation Impact: Remote attackers could execute arbitrary script code in the context of the victim's browser, potentially leading to session hijacking, data theft, and other attacks","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Interpretation conflict in PostNuke 0.761 and earlier allows remote attackers to conduct cross-site scripting (XSS) attacks via HTML tags with a trailing ""<"" character, which is interpreted as a "">"" character by some web browsers but bypasses the blacklist protection in (1) the pnVarCleanFromInput f  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Cross-site scripting (XSS) vulnerability allows remote attackers to inject malicious scripts via HTML tags with a trailing ""<"" character that is misinterpreted by some browsers. Vendor: PostNuke Cause: Inadequate filtering of input data, allowing specially crafted HTML tags to bypass input validation Impact: Remote attackers could execute arbitrary script code in the context of the victim's browser, potentially leading to session hijacking, data theft, and other attacks","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Interpretation conflict in PostNuke 0.761 and earlier allows remote attackers to conduct cross-site scripting (XSS) attacks via HTML tags with a trailing ""<"" character, which is interpreted as a "">"" character by some web browsers but bypasses the blacklist protection in (1) the pnVarCleanFromInput f  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Cross-site scripting (XSS) vulnerability allows remote attackers to inject malicious scripts via HTML tags with a trailing ""<"" character that is misinterpreted by some browsers. Vendor: PostNuke Cause: Inadequate filtering of input data, allowing specially crafted HTML tags to bypass input validation Impact: Remote attackers could execute arbitrary script code in the context of the victim's browser, potentially leading to session hijacking, data theft, and other attacks",2006-02-20T22:02:00.000,,,nvd,interpretation conflict in postnuke 0761 and earlier allows remote attackers to conduct crosssite scripting xss attacks via html tags with a trailing  character which is interpreted as a  character by some web browsers but bypasses the blacklist protection in 1 the pnvarcleanfrominput f,"Interpretation conflict in PostNuke 0.761 and earlier allows remote attackers to conduct cross-site scripting (XSS) attacks via HTML tags with a trailing ""<"" character, which is interpreted as a "">"" character by some web browsers but bypasses the blacklist protection in (1) the pnVarCleanFromInput f","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Cross-site scripting (XSS) vulnerability allows remote attackers to inject malicious scripts via HTML tags with a trailing ""<"" character that is misinterpreted by some browsers. Vendor: PostNuke Cause: Inadequate filtering of input data, allowing specially crafted HTML tags to bypass input validation Impact: Remote attackers could execute arbitrary script code in the context of the victim's browser, potentially leading to session hijacking, data theft, and other attacks"
CVE-2006-6909,Stack-based buffer overflow in http.c in Karl Dahlke Edbrowse (aka Command line editor browser) 3.1.3 allows remote attackers to execute arbitrary code by operating an FTP server that sends directory listings with (1) long user names or (2) long group names.,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Stack-based buffer overflow in http.c in Karl Dahlke Edbrowse (aka Command line editor browser) 3.1.3 allows remote attackers to execute arbitrary code by operating an FTP server that sends directory listings with (1) long user names or (2) long group names.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Stack-based buffer overflow in http.c in Karl Dahlke Edbrowse (aka Command line editor browser) 3.1.3 allows remote attackers to execute arbitrary code by operating an FTP server that sends directory listings with (1) long user names or (2) long group names.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121",2006-12-31T05:00:00.000,,,nvd,stackbased buffer overflow in httpc in karl dahlke edbrowse aka command line editor browser 313 allows remote attackers to execute arbitrary code by operating an ftp server that sends directory listings with 1 long user names or 2 long group names,Stack-based buffer overflow in http.c in Karl Dahlke Edbrowse (aka Command line editor browser) 3.1.3 allows remote attackers to execute arbitrary code by operating an FTP server that sends directory listings with (1) long user names or (2) long group names.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121
CVE-2007-0044,"Adobe Acrobat Reader Plugin before 8.0.0 for the Firefox, Internet Explorer, and Opera web browsers allows remote attackers to force the browser to make unauthorized requests to other web sites via a URL in the (1) FDF, (2) xml, and (3) xfdf AJAX request parameters, following the # (hash) character,",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Adobe Acrobat Reader Plugin before 8.0.0 for the Firefox, Internet Explorer, and Opera web browsers allows remote attackers to force the browser to make unauthorized requests to other web sites via a URL in the (1) FDF, (2) xml, and (3) xfdf AJAX request parameters, following the # (hash) character,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Adobe Acrobat Reader Plugin before 8.0.0 for the Firefox, Internet Explorer, and Opera web browsers allows remote attackers to force the browser to make unauthorized requests to other web sites via a URL in the (1) FDF, (2) xml, and (3) xfdf AJAX request parameters, following the # (hash) character,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2007-01-03T21:28:00.000,,,nvd,adobe acrobat reader plugin before 800 for the firefox internet explorer and opera web browsers allows remote attackers to force the browser to make unauthorized requests to other web sites via a url in the 1 fdf 2 xml and 3 xfdf ajax request parameters following the  hash character,"Adobe Acrobat Reader Plugin before 8.0.0 for the Firefox, Internet Explorer, and Opera web browsers allows remote attackers to force the browser to make unauthorized requests to other web sites via a URL in the (1) FDF, (2) xml, and (3) xfdf AJAX request parameters, following the # (hash) character,",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2007-5274,"Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, SDK and JRE 1.4.2_15 and earlier, and SDK and JRE 1.3.1_20 and earlier, when Firefox or Opera is used, allows remote attackers to violate the security model for JavaScript outbound connec",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: Violation of security model for JavaScript outbound connections Vendor: Sun Microsystems Cause: Inadequate security model implementation for JavaScript outbound connections when using Firefox or Opera browsers Impact: Remote attackers can violate the security model for JavaScript outbound connections,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, SDK and JRE 1.4.2_15 and earlier, and SDK and JRE 1.3.1_20 and earlier, when Firefox or Opera is used, allows remote attackers to violate the security model for JavaScript outbound connec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: Violation of security model for JavaScript outbound connections Vendor: Sun Microsystems Cause: Inadequate security model implementation for JavaScript outbound connections when using Firefox or Opera browsers Impact: Remote attackers can violate the security model for JavaScript outbound connections","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, SDK and JRE 1.4.2_15 and earlier, and SDK and JRE 1.3.1_20 and earlier, when Firefox or Opera is used, allows remote attackers to violate the security model for JavaScript outbound connec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: Violation of security model for JavaScript outbound connections Vendor: Sun Microsystems Cause: Inadequate security model implementation for JavaScript outbound connections when using Firefox or Opera browsers Impact: Remote attackers can violate the security model for JavaScript outbound connections",2007-10-08T23:17:00.000,,,nvd,sun java runtime environment jre in jdk and jre 6 update 2 and earlier jdk and jre 50 update 12 and earlier sdk and jre 142_15 and earlier and sdk and jre 131_20 and earlier when firefox or opera is used allows remote attackers to violate the security model for javascript outbound connec,"Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, SDK and JRE 1.4.2_15 and earlier, and SDK and JRE 1.3.1_20 and earlier, when Firefox or Opera is used, allows remote attackers to violate the security model for JavaScript outbound connec",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 264 Explanation: Violation of security model for JavaScript outbound connections Vendor: Sun Microsystems Cause: Inadequate security model implementation for JavaScript outbound connections when using Firefox or Opera browsers Impact: Remote attackers can violate the security model for JavaScript outbound connections
CVE-2008-4247,"ftpd in OpenBSD 4.3, FreeBSD 7.0, NetBSD 4.0, Solaris, and possibly other operating systems interprets long commands from an FTP client as multiple commands, which allows remote attackers to conduct cross-site request forgery (CSRF) attacks and execute arbitrary FTP commands via a long ftp:// URI th",Opera Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ftpd in OpenBSD 4.3, FreeBSD 7.0, NetBSD 4.0, Solaris, and possibly other operating systems interprets long commands from an FTP client as multiple commands, which allows remote attackers to conduct cross-site request forgery (CSRF) attacks and execute arbitrary FTP commands via a long ftp:// URI th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ftpd in OpenBSD 4.3, FreeBSD 7.0, NetBSD 4.0, Solaris, and possibly other operating systems interprets long commands from an FTP client as multiple commands, which allows remote attackers to conduct cross-site request forgery (CSRF) attacks and execute arbitrary FTP commands via a long ftp:// URI th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2008-09-25T19:25:18.817,,,nvd,ftpd in openbsd 43 freebsd 70 netbsd 40 solaris and possibly other operating systems interprets long commands from an ftp client as multiple commands which allows remote attackers to conduct crosssite request forgery csrf attacks and execute arbitrary ftp commands via a long ftp uri th,"ftpd in OpenBSD 4.3, FreeBSD 7.0, NetBSD 4.0, Solaris, and possibly other operating systems interprets long commands from an FTP client as multiple commands, which allows remote attackers to conduct cross-site request forgery (CSRF) attacks and execute arbitrary FTP commands via a long ftp:// URI th",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2009-2070,"Opera displays a cached certificate for a (1) 4xx or (2) 5xx CONNECT response page returned by a proxy server, which allows man-in-the-middle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request, and then sending the browser a c",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 3074,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera displays a cached certificate for a (1) 4xx or (2) 5xx CONNECT response page returned by a proxy server, which allows man-in-the-middle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request, and then sending the browser a c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 3074","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera displays a cached certificate for a (1) 4xx or (2) 5xx CONNECT response page returned by a proxy server, which allows man-in-the-middle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request, and then sending the browser a c  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 3074",2009-06-15T19:30:05.717,,,nvd,opera displays a cached certificate for a 1 4xx or 2 5xx connect response page returned by a proxy server which allows maninthemiddle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request and then sending the browser a c,"Opera displays a cached certificate for a (1) 4xx or (2) 5xx CONNECT response page returned by a proxy server, which allows man-in-the-middle attackers to spoof an arbitrary https site by letting a browser obtain a valid certificate from this site during one request, and then sending the browser a c",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 3074
CVE-2008-7245,"Opera 9.52 and earlier allows remote attackers to cause a denial of service (unusable browser) by calling the window.print function in a loop, aka a ""printing DoS attack,"" possibly a related issue to CVE-2009-0821.",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera 9.52 and earlier allows remote attackers to cause a denial of service (unusable browser) by calling the window.print function in a loop, aka a ""printing DoS attack,"" possibly a related issue to CVE-2009-0821.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera 9.52 and earlier allows remote attackers to cause a denial of service (unusable browser) by calling the window.print function in a loop, aka a ""printing DoS attack,"" possibly a related issue to CVE-2009-0821.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2009-09-18T22:30:00.453,,,nvd,opera 952 and earlier allows remote attackers to cause a denial of service unusable browser by calling the windowprint function in a loop aka a printing dos attack possibly a related issue to cve20090821,"Opera 9.52 and earlier allows remote attackers to cause a denial of service (unusable browser) by calling the window.print function in a loop, aka a ""printing DoS attack,"" possibly a related issue to CVE-2009-0821.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2010-3109,Stack-based buffer overflow in the browser plugin in Novell iPrint Client before 5.42 allows remote attackers to execute arbitrary code via a long operation parameter.,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Stack-based buffer overflow in the browser plugin in Novell iPrint Client before 5.42 allows remote attackers to execute arbitrary code via a long operation parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Stack-based buffer overflow in the browser plugin in Novell iPrint Client before 5.42 allows remote attackers to execute arbitrary code via a long operation parameter.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121",2010-08-23T22:00:03.597,,,nvd,stackbased buffer overflow in the browser plugin in novell iprint client before 542 allows remote attackers to execute arbitrary code via a long operation parameter,Stack-based buffer overflow in the browser plugin in Novell iPrint Client before 5.42 allows remote attackers to execute arbitrary code via a long operation parameter.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121
CVE-2011-4690,"Opera 11.60 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera 11.60 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera 11.60 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2011-12-07T19:55:03.127,,,nvd,opera 1160 and earlier does not prevent capture of data about the times of same origin policy violations during iframe loading attempts which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted javascript code,"Opera 11.60 and earlier does not prevent capture of data about the times of Same Origin Policy violations during IFRAME loading attempts, which makes it easier for remote attackers to determine whether a document exists in the browser cache via crafted JavaScript code.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2013-0002,"Buffer overflow in the Windows Forms (aka WinForms) component in Microsoft .NET Framework 1.0 SP3, 1.1 SP1, 2.0 SP2, 3.0 SP2, 3.5, 3.5.1, 4, and 4.5 allows remote attackers to execute arbitrary code via (1) a crafted XAML browser application (XBAP) or (2) a crafted .NET Framework application that le",Opera Browser,CWE-120,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in the Windows Forms (aka WinForms) component in Microsoft .NET Framework 1.0 SP3, 1.1 SP1, 2.0 SP2, 3.0 SP2, 3.5, 3.5.1, 4, and 4.5 allows remote attackers to execute arbitrary code via (1) a crafted XAML browser application (XBAP) or (2) a crafted .NET Framework application that le  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in the Windows Forms (aka WinForms) component in Microsoft .NET Framework 1.0 SP3, 1.1 SP1, 2.0 SP2, 3.0 SP2, 3.5, 3.5.1, 4, and 4.5 allows remote attackers to execute arbitrary code via (1) a crafted XAML browser application (XBAP) or (2) a crafted .NET Framework application that le  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2013-01-09T18:09:39.977,,,nvd,buffer overflow in the windows forms aka winforms component in microsoft net framework 10 sp3 11 sp1 20 sp2 30 sp2 35 351 4 and 45 allows remote attackers to execute arbitrary code via 1 a crafted xaml browser application xbap or 2 a crafted net framework application that le,"Buffer overflow in the Windows Forms (aka WinForms) component in Microsoft .NET Framework 1.0 SP3, 1.1 SP1, 2.0 SP2, 3.0 SP2, 3.5, 3.5.1, 4, and 4.5 allows remote attackers to execute arbitrary code via (1) a crafted XAML browser application (XBAP) or (2) a crafted .NET Framework application that le",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2013-0003,"Buffer overflow in a System.DirectoryServices.Protocols (S.DS.P) namespace method in Microsoft .NET Framework 2.0 SP2, 3.0 SP2, 3.5, 3.5.1, 4, and 4.5 allows remote attackers to execute arbitrary code via (1) a crafted XAML browser application (XBAP) or (2) a crafted .NET Framework application that ",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in a System.DirectoryServices.Protocols (S.DS.P) namespace method in Microsoft .NET Framework 2.0 SP2, 3.0 SP2, 3.5, 3.5.1, 4, and 4.5 allows remote attackers to execute arbitrary code via (1) a crafted XAML browser application (XBAP) or (2) a crafted .NET Framework application that  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Buffer overflow in a System.DirectoryServices.Protocols (S.DS.P) namespace method in Microsoft .NET Framework 2.0 SP2, 3.0 SP2, 3.5, 3.5.1, 4, and 4.5 allows remote attackers to execute arbitrary code via (1) a crafted XAML browser application (XBAP) or (2) a crafted .NET Framework application that  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121",2013-01-09T18:09:40.040,,,nvd,buffer overflow in a systemdirectoryservicesprotocols sdsp namespace method in microsoft net framework 20 sp2 30 sp2 35 351 4 and 45 allows remote attackers to execute arbitrary code via 1 a crafted xaml browser application xbap or 2 a crafted net framework application that,"Buffer overflow in a System.DirectoryServices.Protocols (S.DS.P) namespace method in Microsoft .NET Framework 2.0 SP2, 3.0 SP2, 3.5, 3.5.1, 4, and 4.5 allows remote attackers to execute arbitrary code via (1) a crafted XAML browser application (XBAP) or (2) a crafted .NET Framework application that ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 121
CVE-2013-4092,The SecureSphere Operations Manager (SOM) Management Server in Imperva SecureSphere 9.0.0.5 allows context-dependent attackers to obtain sensitive information by leveraging the presence of (1) a session ID in the jsessionid field to secsphLogin.jsp or (2) credentials in the j_password parameter to j,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 222,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SecureSphere Operations Manager (SOM) Management Server in Imperva SecureSphere 9.0.0.5 allows context-dependent attackers to obtain sensitive information by leveraging the presence of (1) a session ID in the jsessionid field to secsphLogin.jsp or (2) credentials in the j_password parameter to j  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 222","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SecureSphere Operations Manager (SOM) Management Server in Imperva SecureSphere 9.0.0.5 allows context-dependent attackers to obtain sensitive information by leveraging the presence of (1) a session ID in the jsessionid field to secsphLogin.jsp or (2) credentials in the j_password parameter to j  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 222",2013-06-28T23:55:09.893,,,nvd,the securesphere operations manager som management server in imperva securesphere 9005 allows contextdependent attackers to obtain sensitive information by leveraging the presence of 1 a session id in the jsessionid field to secsphloginjsp or 2 credentials in the j_password parameter to j,The SecureSphere Operations Manager (SOM) Management Server in Imperva SecureSphere 9.0.0.5 allows context-dependent attackers to obtain sensitive information by leveraging the presence of (1) a session ID in the jsessionid field to secsphLogin.jsp or (2) credentials in the j_password parameter to j,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 222
CVE-2015-3830,"The stock Android browser address bar in all Android operating systems suffers from Address Bar Spoofing, which allows remote attackers to trick a victim by displaying a malicious page for legitimate domain names.",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The stock Android browser address bar in all Android operating systems suffers from Address Bar Spoofing, which allows remote attackers to trick a victim by displaying a malicious page for legitimate domain names.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The stock Android browser address bar in all Android operating systems suffers from Address Bar Spoofing, which allows remote attackers to trick a victim by displaying a malicious page for legitimate domain names.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2017-06-06T18:29:00.247,,,nvd,the stock android browser address bar in all android operating systems suffers from address bar spoofing which allows remote attackers to trick a victim by displaying a malicious page for legitimate domain names,"The stock Android browser address bar in all Android operating systems suffers from Address Bar Spoofing, which allows remote attackers to trick a victim by displaying a malicious page for legitimate domain names.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2016-6800,The default configuration of the Apache OFBiz framework offers a blog functionality. Different users are able to operate blogs which are related to specific parties. In the form field for the creation of new blog articles the user input of the summary field as well as the article field is not proper,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The default configuration of the Apache OFBiz framework offers a blog functionality. Different users are able to operate blogs which are related to specific parties. In the form field for the creation of new blog articles the user input of the summary field as well as the article field is not proper  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The default configuration of the Apache OFBiz framework offers a blog functionality. Different users are able to operate blogs which are related to specific parties. In the form field for the creation of new blog articles the user input of the summary field as well as the article field is not proper  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2017-08-30T17:29:00.247,,,nvd,the default configuration of the apache ofbiz framework offers a blog functionality different users are able to operate blogs which are related to specific parties in the form field for the creation of new blog articles the user input of the summary field as well as the article field is not proper,The default configuration of the Apache OFBiz framework offers a blog functionality. Different users are able to operate blogs which are related to specific parties. In the form field for the creation of new blog articles the user input of the summary field as well as the article field is not proper,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2017-15867,"Multiple cross-site scripting (XSS) vulnerabilities in the user-login-history plugin through 1.5.2 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) date_from, (2) date_to, (3) user_id, (4) username, (5) country_name, (6) browser, (7) operating_system, or (8) ip",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple cross-site scripting (XSS) vulnerabilities in the user-login-history plugin through 1.5.2 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) date_from, (2) date_to, (3) user_id, (4) username, (5) country_name, (6) browser, (7) operating_system, or (8) ip  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple cross-site scripting (XSS) vulnerabilities in the user-login-history plugin through 1.5.2 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) date_from, (2) date_to, (3) user_id, (4) username, (5) country_name, (6) browser, (7) operating_system, or (8) ip  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2017-10-24T19:29:00.197,,,nvd,multiple crosssite scripting xss vulnerabilities in the userloginhistory plugin through 152 for wordpress allow remote attackers to inject arbitrary web script or html via the 1 date_from 2 date_to 3 user_id 4 username 5 country_name 6 browser 7 operating_system or 8 ip,"Multiple cross-site scripting (XSS) vulnerabilities in the user-login-history plugin through 1.5.2 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) date_from, (2) date_to, (3) user_id, (4) username, (5) country_name, (6) browser, (7) operating_system, or (8) ip",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2017-14383,"In Dell EMC VNX2 versions prior to Operating Environment for File 8.1.9.217 and VNX1 versions prior to Operating Environment for File 7.1.80.8, a web server error page in VNX Control Station is impacted by a reflected cross-site scripting vulnerability. A remote unauthenticated attacker could potent",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Dell EMC VNX2 versions prior to Operating Environment for File 8.1.9.217 and VNX1 versions prior to Operating Environment for File 7.1.80.8, a web server error page in VNX Control Station is impacted by a reflected cross-site scripting vulnerability. A remote unauthenticated attacker could potent  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In Dell EMC VNX2 versions prior to Operating Environment for File 8.1.9.217 and VNX1 versions prior to Operating Environment for File 7.1.80.8, a web server error page in VNX Control Station is impacted by a reflected cross-site scripting vulnerability. A remote unauthenticated attacker could potent  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2018-01-04T06:29:00.200,,,nvd,in dell emc vnx2 versions prior to operating environment for file 819217 and vnx1 versions prior to operating environment for file 71808 a web server error page in vnx control station is impacted by a reflected crosssite scripting vulnerability a remote unauthenticated attacker could potent,"In Dell EMC VNX2 versions prior to Operating Environment for File 8.1.9.217 and VNX1 versions prior to Operating Environment for File 7.1.80.8, a web server error page in VNX Control Station is impacted by a reflected cross-site scripting vulnerability. A remote unauthenticated attacker could potent",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2018-1201,"Dell EMC Isilon versions between 8.1.0.0 - 8.1.0.1, 8.0.1.0 - 8.0.1.2, and 8.0.0.0 - 8.0.0.6, versions 7.2.1.x, and version 7.1.1.11 is affected by a cross-site scripting vulnerability in the Job Operations Page within the OneFS web administration interface. A malicious administrator may potentially",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows an attacker to execute malicious scripts in the context of the user by injecting malicious code into the web interface. Vendor: Dell EMC Cause: Insufficient validation of user-supplied input in the Job Operations Page of the OneFS web administration interface. Impact: A malicious administrator could potentially execute arbitrary scripts and take control of the system.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Dell EMC Isilon versions between 8.1.0.0 - 8.1.0.1, 8.0.1.0 - 8.0.1.2, and 8.0.0.0 - 8.0.0.6, versions 7.2.1.x, and version 7.1.1.11 is affected by a cross-site scripting vulnerability in the Job Operations Page within the OneFS web administration interface. A malicious administrator may potentially  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows an attacker to execute malicious scripts in the context of the user by injecting malicious code into the web interface. Vendor: Dell EMC Cause: Insufficient validation of user-supplied input in the Job Operations Page of the OneFS web administration interface. Impact: A malicious administrator could potentially execute arbitrary scripts and take control of the system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Dell EMC Isilon versions between 8.1.0.0 - 8.1.0.1, 8.0.1.0 - 8.0.1.2, and 8.0.0.0 - 8.0.0.6, versions 7.2.1.x, and version 7.1.1.11 is affected by a cross-site scripting vulnerability in the Job Operations Page within the OneFS web administration interface. A malicious administrator may potentially  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows an attacker to execute malicious scripts in the context of the user by injecting malicious code into the web interface. Vendor: Dell EMC Cause: Insufficient validation of user-supplied input in the Job Operations Page of the OneFS web administration interface. Impact: A malicious administrator could potentially execute arbitrary scripts and take control of the system.",2018-03-26T18:29:01.143,,,nvd,dell emc isilon versions between 8100  8101 8010  8012 and 8000  8006 versions 721x and version 71111 is affected by a crosssite scripting vulnerability in the job operations page within the onefs web administration interface a malicious administrator may potentially,"Dell EMC Isilon versions between 8.1.0.0 - 8.1.0.1, 8.0.1.0 - 8.0.1.2, and 8.0.0.0 - 8.0.0.6, versions 7.2.1.x, and version 7.1.1.11 is affected by a cross-site scripting vulnerability in the Job Operations Page within the OneFS web administration interface. A malicious administrator may potentially",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: The vulnerability allows an attacker to execute malicious scripts in the context of the user by injecting malicious code into the web interface. Vendor: Dell EMC Cause: Insufficient validation of user-supplied input in the Job Operations Page of the OneFS web administration interface. Impact: A malicious administrator could potentially execute arbitrary scripts and take control of the system.
CVE-2018-6608,"In the WebRTC component in Opera 51.0.2830.55, after visiting a web site that attempts to gather complete client information (such as https://ip.voidsec.com), the browser can disclose a private IP address in a STUN request.",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In the WebRTC component in Opera 51.0.2830.55, after visiting a web site that attempts to gather complete client information (such as https://ip.voidsec.com), the browser can disclose a private IP address in a STUN request.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  In the WebRTC component in Opera 51.0.2830.55, after visiting a web site that attempts to gather complete client information (such as https://ip.voidsec.com), the browser can disclose a private IP address in a STUN request.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005",2018-03-28T21:29:00.257,,,nvd,in the webrtc component in opera 510283055 after visiting a web site that attempts to gather complete client information such as httpsipvoidseccom the browser can disclose a private ip address in a stun request,"In the WebRTC component in Opera 51.0.2830.55, after visiting a web site that attempts to gather complete client information (such as https://ip.voidsec.com), the browser can disclose a private IP address in a STUN request.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 2005
CVE-2017-6779,"Multiple Cisco products are affected by a vulnerability in local file management for certain system log files of Cisco collaboration products that could allow an unauthenticated, remote attacker to cause high disk utilization, resulting in a denial of service (DoS) condition. The vulnerability occur",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple Cisco products are affected by a vulnerability in local file management for certain system log files of Cisco collaboration products that could allow an unauthenticated, remote attacker to cause high disk utilization, resulting in a denial of service (DoS) condition. The vulnerability occur  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple Cisco products are affected by a vulnerability in local file management for certain system log files of Cisco collaboration products that could allow an unauthenticated, remote attacker to cause high disk utilization, resulting in a denial of service (DoS) condition. The vulnerability occur  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2018-06-07T12:29:00.260,,,nvd,multiple cisco products are affected by a vulnerability in local file management for certain system log files of cisco collaboration products that could allow an unauthenticated remote attacker to cause high disk utilization resulting in a denial of service dos condition the vulnerability occur,"Multiple Cisco products are affected by a vulnerability in local file management for certain system log files of Cisco collaboration products that could allow an unauthenticated, remote attacker to cause high disk utilization, resulting in a denial of service (DoS) condition. The vulnerability occur",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2017-5419,"If a malicious site repeatedly triggers a modal authentication prompt, eventually the browser UI will become non-responsive, requiring shutdown through the operating system. This is a denial of service (DOS) attack. This vulnerability affects Firefox < 52 and Thunderbird < 52.",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  If a malicious site repeatedly triggers a modal authentication prompt, eventually the browser UI will become non-responsive, requiring shutdown through the operating system. This is a denial of service (DOS) attack. This vulnerability affects Firefox < 52 and Thunderbird < 52.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  If a malicious site repeatedly triggers a modal authentication prompt, eventually the browser UI will become non-responsive, requiring shutdown through the operating system. This is a denial of service (DOS) attack. This vulnerability affects Firefox < 52 and Thunderbird < 52.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400",2018-06-11T21:29:05.093,,,nvd,if a malicious site repeatedly triggers a modal authentication prompt eventually the browser ui will become nonresponsive requiring shutdown through the operating system this is a denial of service dos attack this vulnerability affects firefox  52 and thunderbird  52,"If a malicious site repeatedly triggers a modal authentication prompt, eventually the browser UI will become non-responsive, requiring shutdown through the operating system. This is a denial of service (DOS) attack. This vulnerability affects Firefox < 52 and Thunderbird < 52.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400
CVE-2017-7820,"The ""instanceof"" operator can bypass the Xray wrapper mechanism. When called on web content from the browser itself or an extension the web content can provide its own result for that operator, possibly tricking the browser or extension into mishandling the element. This vulnerability affects Firefo",Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows bypassing security mechanisms by using the ""instanceof"" operator on web content from the browser or an extension, potentially leading to incorrect handling of elements. Vendor: Mozilla Cause: The ""instanceof"" operator can be manipulated by web content, allowing it to bypass security mechanisms and provide its own result. Impact: This vulnerability could allow malicious web content to trick the browser or extension into mishandling elements, potentially leading to security risks and unauthorized access.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The ""instanceof"" operator can bypass the Xray wrapper mechanism. When called on web content from the browser itself or an extension the web content can provide its own result for that operator, possibly tricking the browser or extension into mishandling the element. This vulnerability affects Firefo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows bypassing security mechanisms by using the ""instanceof"" operator on web content from the browser or an extension, potentially leading to incorrect handling of elements. Vendor: Mozilla Cause: The ""instanceof"" operator can be manipulated by web content, allowing it to bypass security mechanisms and provide its own result. Impact: This vulnerability could allow malicious web content to trick the browser or extension into mishandling elements, potentially leading to security risks and unauthorized access.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The ""instanceof"" operator can bypass the Xray wrapper mechanism. When called on web content from the browser itself or an extension the web content can provide its own result for that operator, possibly tricking the browser or extension into mishandling the element. This vulnerability affects Firefo  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows bypassing security mechanisms by using the ""instanceof"" operator on web content from the browser or an extension, potentially leading to incorrect handling of elements. Vendor: Mozilla Cause: The ""instanceof"" operator can be manipulated by web content, allowing it to bypass security mechanisms and provide its own result. Impact: This vulnerability could allow malicious web content to trick the browser or extension into mishandling elements, potentially leading to security risks and unauthorized access.",2018-06-11T21:29:10.873,,,nvd,the instanceof operator can bypass the xray wrapper mechanism when called on web content from the browser itself or an extension the web content can provide its own result for that operator possibly tricking the browser or extension into mishandling the element this vulnerability affects firefo,"The ""instanceof"" operator can bypass the Xray wrapper mechanism. When called on web content from the browser itself or an extension the web content can provide its own result for that operator, possibly tricking the browser or extension into mishandling the element. This vulnerability affects Firefo","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: The vulnerability allows bypassing security mechanisms by using the ""instanceof"" operator on web content from the browser or an extension, potentially leading to incorrect handling of elements. Vendor: Mozilla Cause: The ""instanceof"" operator can be manipulated by web content, allowing it to bypass security mechanisms and provide its own result. Impact: This vulnerability could allow malicious web content to trick the browser or extension into mishandling elements, potentially leading to security risks and unauthorized access."
CVE-2018-5138,A spoofing vulnerability can occur when a malicious site with an extremely long domain name is opened in an Android Custom Tab (a browser panel inside another app) and the default browser is Firefox for Android. This could allow an attacker to spoof which page is actually loaded and in use. Note: th,Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 639 Explanation: The vulnerability allows spoofing by manipulating the domain name length, allowing an attacker to display a malicious site in a browser panel. Vendor: Mozilla Cause: The vulnerability is caused by insufficient validation of the domain name length in Firefox for Android's Custom Tabs. Impact: An attacker can spoof the displayed page and potentially perform phishing attacks.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A spoofing vulnerability can occur when a malicious site with an extremely long domain name is opened in an Android Custom Tab (a browser panel inside another app) and the default browser is Firefox for Android. This could allow an attacker to spoof which page is actually loaded and in use. Note: th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 639 Explanation: The vulnerability allows spoofing by manipulating the domain name length, allowing an attacker to display a malicious site in a browser panel. Vendor: Mozilla Cause: The vulnerability is caused by insufficient validation of the domain name length in Firefox for Android's Custom Tabs. Impact: An attacker can spoof the displayed page and potentially perform phishing attacks.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A spoofing vulnerability can occur when a malicious site with an extremely long domain name is opened in an Android Custom Tab (a browser panel inside another app) and the default browser is Firefox for Android. This could allow an attacker to spoof which page is actually loaded and in use. Note: th  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 639 Explanation: The vulnerability allows spoofing by manipulating the domain name length, allowing an attacker to display a malicious site in a browser panel. Vendor: Mozilla Cause: The vulnerability is caused by insufficient validation of the domain name length in Firefox for Android's Custom Tabs. Impact: An attacker can spoof the displayed page and potentially perform phishing attacks.",2018-06-11T21:29:14.483,,,nvd,a spoofing vulnerability can occur when a malicious site with an extremely long domain name is opened in an android custom tab a browser panel inside another app and the default browser is firefox for android this could allow an attacker to spoof which page is actually loaded and in use note th,A spoofing vulnerability can occur when a malicious site with an extremely long domain name is opened in an Android Custom Tab (a browser panel inside another app) and the default browser is Firefox for Android. This could allow an attacker to spoof which page is actually loaded and in use. Note: th,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 639 Explanation: The vulnerability allows spoofing by manipulating the domain name length, allowing an attacker to display a malicious site in a browser panel. Vendor: Mozilla Cause: The vulnerability is caused by insufficient validation of the domain name length in Firefox for Android's Custom Tabs. Impact: An attacker can spoof the displayed page and potentially perform phishing attacks."
CVE-2018-1253,"RSA Authentication Manager Operation Console, versions 8.3 P1 and earlier, contains a stored cross-site scripting vulnerability. A malicious Operations Console administrator could potentially exploit this vulnerability to store arbitrary HTML or JavaScript code through the web interface. When other ",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RSA Authentication Manager Operation Console, versions 8.3 P1 and earlier, contains a stored cross-site scripting vulnerability. A malicious Operations Console administrator could potentially exploit this vulnerability to store arbitrary HTML or JavaScript code through the web interface. When other  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RSA Authentication Manager Operation Console, versions 8.3 P1 and earlier, contains a stored cross-site scripting vulnerability. A malicious Operations Console administrator could potentially exploit this vulnerability to store arbitrary HTML or JavaScript code through the web interface. When other  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2018-06-21T15:29:00.270,6.1,MEDIUM,nvd,rsa authentication manager operation console versions 83 p1 and earlier contains a stored crosssite scripting vulnerability a malicious operations console administrator could potentially exploit this vulnerability to store arbitrary html or javascript code through the web interface when other,"RSA Authentication Manager Operation Console, versions 8.3 P1 and earlier, contains a stored cross-site scripting vulnerability. A malicious Operations Console administrator could potentially exploit this vulnerability to store arbitrary HTML or JavaScript code through the web interface. When other ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2018-12587,"A cross-site scripting (XSS) vulnerability was found in valeuraddons German Spelling Dictionary v1.3 (an Opera Browser add-on). Instead of providing text for a spelling check, remote attackers may inject arbitrary web script or HTML via the ajax query parameter in the URL Address Bar.",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A cross-site scripting (XSS) vulnerability was found in valeuraddons German Spelling Dictionary v1.3 (an Opera Browser add-on). Instead of providing text for a spelling check, remote attackers may inject arbitrary web script or HTML via the ajax query parameter in the URL Address Bar.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A cross-site scripting (XSS) vulnerability was found in valeuraddons German Spelling Dictionary v1.3 (an Opera Browser add-on). Instead of providing text for a spelling check, remote attackers may inject arbitrary web script or HTML via the ajax query parameter in the URL Address Bar.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2018-08-13T17:29:00.857,,,nvd,a crosssite scripting xss vulnerability was found in valeuraddons german spelling dictionary v13 an opera browser addon instead of providing text for a spelling check remote attackers may inject arbitrary web script or html via the ajax query parameter in the url address bar,"A cross-site scripting (XSS) vulnerability was found in valeuraddons German Spelling Dictionary v1.3 (an Opera Browser add-on). Instead of providing text for a spelling check, remote attackers may inject arbitrary web script or HTML via the ajax query parameter in the URL Address Bar.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2018-10496,This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Samsung Internet Browser Fixed in version 6.4.0.15. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. The specific fla,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Samsung Internet Browser Fixed in version 6.4.0.15. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. The specific fla  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Samsung Internet Browser Fixed in version 6.4.0.15. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. The specific fla  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2018-09-24T23:29:00.303,,,nvd,this vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of samsung internet browser fixed in version 64015 user interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file the specific fla,This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Samsung Internet Browser Fixed in version 6.4.0.15. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. The specific fla,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2018-11073,RSA Authentication Manager versions prior to 8.3 P3 contain a stored cross-site scripting vulnerability in the Operations Console. A malicious Operations Console administrator could exploit this vulnerability to store arbitrary HTML or JavaScript code through the web interface. When other Operations,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RSA Authentication Manager versions prior to 8.3 P3 contain a stored cross-site scripting vulnerability in the Operations Console. A malicious Operations Console administrator could exploit this vulnerability to store arbitrary HTML or JavaScript code through the web interface. When other Operations  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  RSA Authentication Manager versions prior to 8.3 P3 contain a stored cross-site scripting vulnerability in the Operations Console. A malicious Operations Console administrator could exploit this vulnerability to store arbitrary HTML or JavaScript code through the web interface. When other Operations  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2018-09-28T18:29:00.503,,,nvd,rsa authentication manager versions prior to 83 p3 contain a stored crosssite scripting vulnerability in the operations console a malicious operations console administrator could exploit this vulnerability to store arbitrary html or javascript code through the web interface when other operations,RSA Authentication Manager versions prior to 8.3 P3 contain a stored cross-site scripting vulnerability in the Operations Console. A malicious Operations Console administrator could exploit this vulnerability to store arbitrary HTML or JavaScript code through the web interface. When other Operations,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2018-12381,Manually dragging and dropping an Outlook email message into the browser will trigger a page navigation when the message's mail columns are incorrectly interpreted as a URL. *Note: this issue only affects Windows operating systems with Outlook installed. Other operating systems are not affected.*. T,Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: The vulnerability occurs when the application incorrectly interprets user-supplied input as a URL when it should not. This can lead to unintended navigation to arbitrary URLs. Vendor: Microsoft Cause: The vulnerability is caused by Outlook incorrectly interpreting email message columns as URLs when dragged and dropped into a browser. Impact: An attacker could potentially exploit this vulnerability to navigate to arbitrary web pages, leading to phishing or other malicious activities.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Manually dragging and dropping an Outlook email message into the browser will trigger a page navigation when the message's mail columns are incorrectly interpreted as a URL. *Note: this issue only affects Windows operating systems with Outlook installed. Other operating systems are not affected.*. T  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: The vulnerability occurs when the application incorrectly interprets user-supplied input as a URL when it should not. This can lead to unintended navigation to arbitrary URLs. Vendor: Microsoft Cause: The vulnerability is caused by Outlook incorrectly interpreting email message columns as URLs when dragged and dropped into a browser. Impact: An attacker could potentially exploit this vulnerability to navigate to arbitrary web pages, leading to phishing or other malicious activities.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Manually dragging and dropping an Outlook email message into the browser will trigger a page navigation when the message's mail columns are incorrectly interpreted as a URL. *Note: this issue only affects Windows operating systems with Outlook installed. Other operating systems are not affected.*. T  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: The vulnerability occurs when the application incorrectly interprets user-supplied input as a URL when it should not. This can lead to unintended navigation to arbitrary URLs. Vendor: Microsoft Cause: The vulnerability is caused by Outlook incorrectly interpreting email message columns as URLs when dragged and dropped into a browser. Impact: An attacker could potentially exploit this vulnerability to navigate to arbitrary web pages, leading to phishing or other malicious activities.",2018-10-18T13:29:05.523,,,nvd,manually dragging and dropping an outlook email message into the browser will trigger a page navigation when the messages mail columns are incorrectly interpreted as a url note this issue only affects windows operating systems with outlook installed other operating systems are not affected t,Manually dragging and dropping an Outlook email message into the browser will trigger a page navigation when the message's mail columns are incorrectly interpreted as a URL. *Note: this issue only affects Windows operating systems with Outlook installed. Other operating systems are not affected.*. T,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: The vulnerability occurs when the application incorrectly interprets user-supplied input as a URL when it should not. This can lead to unintended navigation to arbitrary URLs. Vendor: Microsoft Cause: The vulnerability is caused by Outlook incorrectly interpreting email message columns as URLs when dragged and dropped into a browser. Impact: An attacker could potentially exploit this vulnerability to navigate to arbitrary web pages, leading to phishing or other malicious activities."
CVE-2018-5740,"""deny-answer-aliases"" is a little-used feature intended to help recursive server operators protect end users against DNS rebinding attacks, a potential method of circumventing the security model used by client browsers. However, a defect in this feature makes it easy, when the feature is in use, to ",Opera Browser,CWE-362,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: CWE-362: Expression Language or Expression Injection Vendor: ISC Cause: A defect in the ""deny-answer-aliases"" feature makes it easy to inject malicious expressions when the feature is in use Impact: Potential method of circumventing the security model used by client browsers","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ""deny-answer-aliases"" is a little-used feature intended to help recursive server operators protect end users against DNS rebinding attacks, a potential method of circumventing the security model used by client browsers. However, a defect in this feature makes it easy, when the feature is in use, to  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: CWE-362: Expression Language or Expression Injection Vendor: ISC Cause: A defect in the ""deny-answer-aliases"" feature makes it easy to inject malicious expressions when the feature is in use Impact: Potential method of circumventing the security model used by client browsers","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ""deny-answer-aliases"" is a little-used feature intended to help recursive server operators protect end users against DNS rebinding attacks, a potential method of circumventing the security model used by client browsers. However, a defect in this feature makes it easy, when the feature is in use, to  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: CWE-362: Expression Language or Expression Injection Vendor: ISC Cause: A defect in the ""deny-answer-aliases"" feature makes it easy to inject malicious expressions when the feature is in use Impact: Potential method of circumventing the security model used by client browsers",2019-01-16T20:29:01.017,7.5,HIGH,nvd,denyansweraliases is a littleused feature intended to help recursive server operators protect end users against dns rebinding attacks a potential method of circumventing the security model used by client browsers however a defect in this feature makes it easy when the feature is in use to,"""deny-answer-aliases"" is a little-used feature intended to help recursive server operators protect end users against DNS rebinding attacks, a potential method of circumventing the security model used by client browsers. However, a defect in this feature makes it easy, when the feature is in use, to ","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362 Explanation: CWE-362: Expression Language or Expression Injection Vendor: ISC Cause: A defect in the ""deny-answer-aliases"" feature makes it easy to inject malicious expressions when the feature is in use Impact: Potential method of circumventing the security model used by client browsers"
CVE-2019-3776,"Pivotal Operations Manager, 2.1.x versions prior to 2.1.20, 2.2.x versions prior to 2.2.16, 2.3.x versions prior to 2.3.10, 2.4.x versions prior to 2.4.3, contains a reflected cross site scripting vulnerability. A remote user that is able to convince an Operations Manager user to interact with malic",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal Operations Manager, 2.1.x versions prior to 2.1.20, 2.2.x versions prior to 2.2.16, 2.3.x versions prior to 2.3.10, 2.4.x versions prior to 2.4.3, contains a reflected cross site scripting vulnerability. A remote user that is able to convince an Operations Manager user to interact with malic  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pivotal Operations Manager, 2.1.x versions prior to 2.1.20, 2.2.x versions prior to 2.2.16, 2.3.x versions prior to 2.3.10, 2.4.x versions prior to 2.4.3, contains a reflected cross site scripting vulnerability. A remote user that is able to convince an Operations Manager user to interact with malic  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2019-03-07T18:29:00.413,,,nvd,pivotal operations manager 21x versions prior to 2120 22x versions prior to 2216 23x versions prior to 2310 24x versions prior to 243 contains a reflected cross site scripting vulnerability a remote user that is able to convince an operations manager user to interact with malic,"Pivotal Operations Manager, 2.1.x versions prior to 2.1.20, 2.2.x versions prior to 2.2.16, 2.3.x versions prior to 2.3.10, 2.4.x versions prior to 2.4.3, contains a reflected cross site scripting vulnerability. A remote user that is able to convince an Operations Manager user to interact with malic",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2019-3754,"Dell EMC Unity Operating Environment versions prior to 5.0.0.0.5.116, Dell EMC UnityVSA versions prior to 5.0.0.0.5.116 and Dell EMC VNXe3200 versions prior to 3.1.10.9946299 contain a reflected cross-site scripting vulnerability on the cas/logout page. A remote unauthenticated attacker could potent",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Dell EMC Unity Operating Environment versions prior to 5.0.0.0.5.116, Dell EMC UnityVSA versions prior to 5.0.0.0.5.116 and Dell EMC VNXe3200 versions prior to 3.1.10.9946299 contain a reflected cross-site scripting vulnerability on the cas/logout page. A remote unauthenticated attacker could potent  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Dell EMC Unity Operating Environment versions prior to 5.0.0.0.5.116, Dell EMC UnityVSA versions prior to 5.0.0.0.5.116 and Dell EMC VNXe3200 versions prior to 3.1.10.9946299 contain a reflected cross-site scripting vulnerability on the cas/logout page. A remote unauthenticated attacker could potent  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2019-09-03T17:15:11.273,,,nvd,dell emc unity operating environment versions prior to 50005116 dell emc unityvsa versions prior to 50005116 and dell emc vnxe3200 versions prior to 31109946299 contain a reflected crosssite scripting vulnerability on the caslogout page a remote unauthenticated attacker could potent,"Dell EMC Unity Operating Environment versions prior to 5.0.0.0.5.116, Dell EMC UnityVSA versions prior to 5.0.0.0.5.116 and Dell EMC VNXe3200 versions prior to 3.1.10.9946299 contain a reflected cross-site scripting vulnerability on the cas/logout page. A remote unauthenticated attacker could potent",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2019-3424,"authentication issues vulnerability, which exists in V2.1.14 and below versions of C520V21 smart camera devices. An attacker can automatically obtain access to web services from the authorized browser of the same computer and perform operations.",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287 Explanation: Improper Authentication Vendor: Hikvision Cause: Authentication issues in C520V21 smart camera devices allow attackers to bypass authentication and gain unauthorized access Impact: Attackers can access web services and perform unauthorized operations,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  authentication issues vulnerability, which exists in V2.1.14 and below versions of C520V21 smart camera devices. An attacker can automatically obtain access to web services from the authorized browser of the same computer and perform operations.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287 Explanation: Improper Authentication Vendor: Hikvision Cause: Authentication issues in C520V21 smart camera devices allow attackers to bypass authentication and gain unauthorized access Impact: Attackers can access web services and perform unauthorized operations","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  authentication issues vulnerability, which exists in V2.1.14 and below versions of C520V21 smart camera devices. An attacker can automatically obtain access to web services from the authorized browser of the same computer and perform operations.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287 Explanation: Improper Authentication Vendor: Hikvision Cause: Authentication issues in C520V21 smart camera devices allow attackers to bypass authentication and gain unauthorized access Impact: Attackers can access web services and perform unauthorized operations",2019-11-18T19:15:13.310,8.2,HIGH,nvd,authentication issues vulnerability which exists in v2114 and below versions of c520v21 smart camera devices an attacker can automatically obtain access to web services from the authorized browser of the same computer and perform operations,"authentication issues vulnerability, which exists in V2.1.14 and below versions of C520V21 smart camera devices. An attacker can automatically obtain access to web services from the authorized browser of the same computer and perform operations.",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 287 Explanation: Improper Authentication Vendor: Hikvision Cause: Authentication issues in C520V21 smart camera devices allow attackers to bypass authentication and gain unauthorized access Impact: Attackers can access web services and perform unauthorized operations
CVE-2020-12402,"During RSA key generation, bignum implementations used a variation of the Binary Extended Euclidean Algorithm which entailed significantly input-dependent flow. This allowed an attacker able to perform electromagnetic-based side channel attacks to record traces leading to the recovery of the secret ",Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 327 Explanation: The vulnerability is related to improper implementation of cryptographic algorithms, specifically the Binary Extended Euclidean Algorithm used in RSA key generation, leading to information leakage through side-channel attacks. Vendor: OpenSSL Cause: The use of an input-dependent flow in the implementation of the Binary Extended Euclidean Algorithm during RSA key generation. Impact: Attackers could potentially recover the secret key through electromagnetic-based side-channel attacks by recording traces of the cryptographic process.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  During RSA key generation, bignum implementations used a variation of the Binary Extended Euclidean Algorithm which entailed significantly input-dependent flow. This allowed an attacker able to perform electromagnetic-based side channel attacks to record traces leading to the recovery of the secret  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 327 Explanation: The vulnerability is related to improper implementation of cryptographic algorithms, specifically the Binary Extended Euclidean Algorithm used in RSA key generation, leading to information leakage through side-channel attacks. Vendor: OpenSSL Cause: The use of an input-dependent flow in the implementation of the Binary Extended Euclidean Algorithm during RSA key generation. Impact: Attackers could potentially recover the secret key through electromagnetic-based side-channel attacks by recording traces of the cryptographic process.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  During RSA key generation, bignum implementations used a variation of the Binary Extended Euclidean Algorithm which entailed significantly input-dependent flow. This allowed an attacker able to perform electromagnetic-based side channel attacks to record traces leading to the recovery of the secret  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 327 Explanation: The vulnerability is related to improper implementation of cryptographic algorithms, specifically the Binary Extended Euclidean Algorithm used in RSA key generation, leading to information leakage through side-channel attacks. Vendor: OpenSSL Cause: The use of an input-dependent flow in the implementation of the Binary Extended Euclidean Algorithm during RSA key generation. Impact: Attackers could potentially recover the secret key through electromagnetic-based side-channel attacks by recording traces of the cryptographic process.",2020-07-09T15:15:10.820,4.4,MEDIUM,nvd,during rsa key generation bignum implementations used a variation of the binary extended euclidean algorithm which entailed significantly inputdependent flow this allowed an attacker able to perform electromagneticbased side channel attacks to record traces leading to the recovery of the secret,"During RSA key generation, bignum implementations used a variation of the Binary Extended Euclidean Algorithm which entailed significantly input-dependent flow. This allowed an attacker able to perform electromagnetic-based side channel attacks to record traces leading to the recovery of the secret ","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 327 Explanation: The vulnerability is related to improper implementation of cryptographic algorithms, specifically the Binary Extended Euclidean Algorithm used in RSA key generation, leading to information leakage through side-channel attacks. Vendor: OpenSSL Cause: The use of an input-dependent flow in the implementation of the Binary Extended Euclidean Algorithm during RSA key generation. Impact: Attackers could potentially recover the secret key through electromagnetic-based side-channel attacks by recording traces of the cryptographic process."
CVE-2020-14511,Malicious operation of the crafted web browser cookie may cause a stack-based buffer overflow in the system web server on the EDR-G902 and EDR-G903 Series Routers (versions prior to 5.4).,Opera Browser,CWE-120,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Malicious operation of the crafted web browser cookie may cause a stack-based buffer overflow in the system web server on the EDR-G902 and EDR-G903 Series Routers (versions prior to 5.4).  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Malicious operation of the crafted web browser cookie may cause a stack-based buffer overflow in the system web server on the EDR-G902 and EDR-G903 Series Routers (versions prior to 5.4).  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120",2020-07-15T13:15:10.193,9.8,CRITICAL,nvd,malicious operation of the crafted web browser cookie may cause a stackbased buffer overflow in the system web server on the edrg902 and edrg903 series routers versions prior to 54,Malicious operation of the crafted web browser cookie may cause a stack-based buffer overflow in the system web server on the EDR-G902 and EDR-G903 Series Routers (versions prior to 5.4).,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120
CVE-2020-27523,"Solstice-Pod up to 5.0.2 WEBRTC server mishandles the format-string specifiers %x; %p; %c and %s in the screen_key, display_name, browser_name, and operation_system parameter during the authentication process. This may crash the server and force Solstice-Pod to reboot, which leads to a denial of ser",Opera Browser,CWE-134,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-134,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Solstice-Pod up to 5.0.2 WEBRTC server mishandles the format-string specifiers %x; %p; %c and %s in the screen_key, display_name, browser_name, and operation_system parameter during the authentication process. This may crash the server and force Solstice-Pod to reboot, which leads to a denial of ser  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-134","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Solstice-Pod up to 5.0.2 WEBRTC server mishandles the format-string specifiers %x; %p; %c and %s in the screen_key, display_name, browser_name, and operation_system parameter during the authentication process. This may crash the server and force Solstice-Pod to reboot, which leads to a denial of ser  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-134",2020-11-11T15:15:11.293,7.5,HIGH,nvd,solsticepod up to 502 webrtc server mishandles the formatstring specifiers x p c and s in the screen_key display_name browser_name and operation_system parameter during the authentication process this may crash the server and force solsticepod to reboot which leads to a denial of ser,"Solstice-Pod up to 5.0.2 WEBRTC server mishandles the format-string specifiers %x; %p; %c and %s in the screen_key, display_name, browser_name, and operation_system parameter during the authentication process. This may crash the server and force Solstice-Pod to reboot, which leads to a denial of ser",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-134
CVE-2020-6157,Opera Touch for iOS before version 2.4.5 is vulnerable to an address bar spoofing attack. The vulnerability allows a malicious page to trick the browser into showing an address of a different page. This may allow the malicious page to impersonate another page and trick a user into providing sensitiv,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Touch for iOS before version 2.4.5 is vulnerable to an address bar spoofing attack. The vulnerability allows a malicious page to trick the browser into showing an address of a different page. This may allow the malicious page to impersonate another page and trick a user into providing sensitiv  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Touch for iOS before version 2.4.5 is vulnerable to an address bar spoofing attack. The vulnerability allows a malicious page to trick the browser into showing an address of a different page. This may allow the malicious page to impersonate another page and trick a user into providing sensitiv  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601",2020-11-13T20:15:17.177,4.3,MEDIUM,nvd,opera touch for ios before version 245 is vulnerable to an address bar spoofing attack the vulnerability allows a malicious page to trick the browser into showing an address of a different page this may allow the malicious page to impersonate another page and trick a user into providing sensitiv,Opera Touch for iOS before version 2.4.5 is vulnerable to an address bar spoofing attack. The vulnerability allows a malicious page to trick the browser into showing an address of a different page. This may allow the malicious page to impersonate another page and trick a user into providing sensitiv,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 601
CVE-2020-28210,A CWE-79 Improper Neutralization of Input During Web Page Generation (Cross-site Scripting) vulnerability exists in EcoStruxure Building Operation WebStation V2.0 - V3.1 that could cause an attacker to inject HTML and JavaScript code into the user's browser.,Opera Browser,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79 Improper Neutralization of Input During Web Page Generation (Cross-site Scripting) vulnerability exists in EcoStruxure Building Operation WebStation V2.0 - V3.1 that could cause an attacker to inject HTML and JavaScript code into the user's browser.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A CWE-79 Improper Neutralization of Input During Web Page Generation (Cross-site Scripting) vulnerability exists in EcoStruxure Building Operation WebStation V2.0 - V3.1 that could cause an attacker to inject HTML and JavaScript code into the user's browser.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2020-11-19T21:15:12.277,6.1,MEDIUM,nvd,a cwe79 improper neutralization of input during web page generation crosssite scripting vulnerability exists in ecostruxure building operation webstation v20  v31 that could cause an attacker to inject html and javascript code into the users browser,A CWE-79 Improper Neutralization of Input During Web Page Generation (Cross-site Scripting) vulnerability exists in EcoStruxure Building Operation WebStation V2.0 - V3.1 that could cause an attacker to inject HTML and JavaScript code into the user's browser.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2020-26964,"If the Remote Debugging via USB feature was enabled in Firefox for Android on an Android version prior to Android 6.0, untrusted apps could have connected to the feature and operated with the privileges of the browser to read and interact with web content. The feature was implemented as a unix domai",Opera Browser,CWE-264,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264 Explanation: The vulnerability arises when the system fails to properly restrict access to privileged functions or resources, allowing unauthorized access or actions. Vendor: Mozilla Cause: The Remote Debugging via USB feature in Firefox for Android was enabled on Android versions prior to 6.0, allowing untrusted apps to connect and operate with browser privileges. Impact: Untrusted apps could read and interact with web content, potentially leading to unauthorized access and data compromise.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  If the Remote Debugging via USB feature was enabled in Firefox for Android on an Android version prior to Android 6.0, untrusted apps could have connected to the feature and operated with the privileges of the browser to read and interact with web content. The feature was implemented as a unix domai  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264 Explanation: The vulnerability arises when the system fails to properly restrict access to privileged functions or resources, allowing unauthorized access or actions. Vendor: Mozilla Cause: The Remote Debugging via USB feature in Firefox for Android was enabled on Android versions prior to 6.0, allowing untrusted apps to connect and operate with browser privileges. Impact: Untrusted apps could read and interact with web content, potentially leading to unauthorized access and data compromise.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  If the Remote Debugging via USB feature was enabled in Firefox for Android on an Android version prior to Android 6.0, untrusted apps could have connected to the feature and operated with the privileges of the browser to read and interact with web content. The feature was implemented as a unix domai  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264 Explanation: The vulnerability arises when the system fails to properly restrict access to privileged functions or resources, allowing unauthorized access or actions. Vendor: Mozilla Cause: The Remote Debugging via USB feature in Firefox for Android was enabled on Android versions prior to 6.0, allowing untrusted apps to connect and operate with browser privileges. Impact: Untrusted apps could read and interact with web content, potentially leading to unauthorized access and data compromise.",2020-12-09T01:15:13.473,6.8,MEDIUM,nvd,if the remote debugging via usb feature was enabled in firefox for android on an android version prior to android 60 untrusted apps could have connected to the feature and operated with the privileges of the browser to read and interact with web content the feature was implemented as a unix domai,"If the Remote Debugging via USB feature was enabled in Firefox for Android on an Android version prior to Android 6.0, untrusted apps could have connected to the feature and operated with the privileges of the browser to read and interact with web content. The feature was implemented as a unix domai","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-264 Explanation: The vulnerability arises when the system fails to properly restrict access to privileged functions or resources, allowing unauthorized access or actions. Vendor: Mozilla Cause: The Remote Debugging via USB feature in Firefox for Android was enabled on Android versions prior to 6.0, allowing untrusted apps to connect and operate with browser privileges. Impact: Untrusted apps could read and interact with web content, potentially leading to unauthorized access and data compromise."
CVE-2021-29486,cumulative-distribution-function is an open source npm library used which calculates statistical cumulative distribution function from data array of x values. In versions prior to 2.0.0 apps using this library on improper data may crash or go into an infinite-loop. In the case of a nodejs server-app,Opera Browser,CWE-20,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  cumulative-distribution-function is an open source npm library used which calculates statistical cumulative distribution function from data array of x values. In versions prior to 2.0.0 apps using this library on improper data may crash or go into an infinite-loop. In the case of a nodejs server-app  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  cumulative-distribution-function is an open source npm library used which calculates statistical cumulative distribution function from data array of x values. In versions prior to 2.0.0 apps using this library on improper data may crash or go into an infinite-loop. In the case of a nodejs server-app  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20",2021-04-30T18:15:07.530,7.5,HIGH,nvd,cumulativedistributionfunction is an open source npm library used which calculates statistical cumulative distribution function from data array of x values in versions prior to 200 apps using this library on improper data may crash or go into an infiniteloop in the case of a nodejs serverapp,cumulative-distribution-function is an open source npm library used which calculates statistical cumulative distribution function from data array of x values. In versions prior to 2.0.0 apps using this library on improper data may crash or go into an infinite-loop. In the case of a nodejs server-app,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-20
CVE-2021-32677,FastAPI is a web framework for building APIs with Python 3.6+ based on standard Python type hints. FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In,Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: The vulnerability allows an attacker to forge requests that are authenticated with cookies, potentially leading to unauthorized actions. Vendor: FastAPI Cause: FastAPI versions before 0.65.2 used cookies for authentication in path operations that received JSON payloads from browsers, which could be exploited by CSRF attacks. Impact: Attackers could perform unauthorized actions on behalf of authenticated users.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  FastAPI is a web framework for building APIs with Python 3.6+ based on standard Python type hints. FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: The vulnerability allows an attacker to forge requests that are authenticated with cookies, potentially leading to unauthorized actions. Vendor: FastAPI Cause: FastAPI versions before 0.65.2 used cookies for authentication in path operations that received JSON payloads from browsers, which could be exploited by CSRF attacks. Impact: Attackers could perform unauthorized actions on behalf of authenticated users.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  FastAPI is a web framework for building APIs with Python 3.6+ based on standard Python type hints. FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: The vulnerability allows an attacker to forge requests that are authenticated with cookies, potentially leading to unauthorized actions. Vendor: FastAPI Cause: FastAPI versions before 0.65.2 used cookies for authentication in path operations that received JSON payloads from browsers, which could be exploited by CSRF attacks. Impact: Attackers could perform unauthorized actions on behalf of authenticated users.",2021-06-09T18:15:08.553,8.2,HIGH,nvd,fastapi is a web framework for building apis with python 36 based on standard python type hints fastapi versions lower than 0652 that used cookies for authentication in path operations that received json payloads sent by browsers were vulnerable to a crosssite request forgery csrf attack in,FastAPI is a web framework for building APIs with Python 3.6+ based on standard Python type hints. FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: The vulnerability allows an attacker to forge requests that are authenticated with cookies, potentially leading to unauthorized actions. Vendor: FastAPI Cause: FastAPI versions before 0.65.2 used cookies for authentication in path operations that received JSON payloads from browsers, which could be exploited by CSRF attacks. Impact: Attackers could perform unauthorized actions on behalf of authenticated users."
CVE-2021-29973,Password autofill was enabled without user interaction on insecure websites on Firefox for Android. This was corrected to require user interaction with the page before a user's password would be entered by the browser's autofill functionality *This bug only affects Firefox for Android. Other operati,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Password autofill was enabled without user interaction on insecure websites on Firefox for Android. This was corrected to require user interaction with the page before a user's password would be entered by the browser's autofill functionality *This bug only affects Firefox for Android. Other operati  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Password autofill was enabled without user interaction on insecure websites on Firefox for Android. This was corrected to require user interaction with the page before a user's password would be entered by the browser's autofill functionality *This bug only affects Firefox for Android. Other operati  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522",2021-08-05T20:15:08.657,8.8,HIGH,nvd,password autofill was enabled without user interaction on insecure websites on firefox for android this was corrected to require user interaction with the page before a users password would be entered by the browsers autofill functionality this bug only affects firefox for android other operati,Password autofill was enabled without user interaction on insecure websites on Firefox for Android. This was corrected to require user interaction with the page before a user's password would be entered by the browser's autofill functionality *This bug only affects Firefox for Android. Other operati,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522
CVE-2021-33673,"Under certain conditions, SAP Contact Center - version 700,does not sufficiently encode user-controlled inputs and persists in them. This allows an attacker to exploit a Stored Cross-Site Scripting (XSS) vulnerability when a user browses through the employee directory and to execute arbitrary code o",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Under certain conditions, SAP Contact Center - version 700,does not sufficiently encode user-controlled inputs and persists in them. This allows an attacker to exploit a Stored Cross-Site Scripting (XSS) vulnerability when a user browses through the employee directory and to execute arbitrary code o  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Under certain conditions, SAP Contact Center - version 700,does not sufficiently encode user-controlled inputs and persists in them. This allows an attacker to exploit a Stored Cross-Site Scripting (XSS) vulnerability when a user browses through the employee directory and to execute arbitrary code o  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2021-09-14T12:15:08.867,6.1,MEDIUM,nvd,under certain conditions sap contact center  version 700does not sufficiently encode usercontrolled inputs and persists in them this allows an attacker to exploit a stored crosssite scripting xss vulnerability when a user browses through the employee directory and to execute arbitrary code o,"Under certain conditions, SAP Contact Center - version 700,does not sufficiently encode user-controlled inputs and persists in them. This allows an attacker to exploit a Stored Cross-Site Scripting (XSS) vulnerability when a user browses through the employee directory and to execute arbitrary code o",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2021-40444,"<p>Microsoft is investigating reports of a remote code execution vulnerability in MSHTML that affects Microsoft Windows. Microsoft is aware of targeted attacks that attempt to exploit this vulnerability by using specially-crafted Microsoft Office documents.</p>
<p>An attacker could craft a malicious",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 80,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  <p>Microsoft is investigating reports of a remote code execution vulnerability in MSHTML that affects Microsoft Windows. Microsoft is aware of targeted attacks that attempt to exploit this vulnerability by using specially-crafted Microsoft Office documents.</p> <p>An attacker could craft a malicious  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 80","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  <p>Microsoft is investigating reports of a remote code execution vulnerability in MSHTML that affects Microsoft Windows. Microsoft is aware of targeted attacks that attempt to exploit this vulnerability by using specially-crafted Microsoft Office documents.</p> <p>An attacker could craft a malicious  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 80",2021-09-15T12:15:16.467,8.8,HIGH,nvd,"pmicrosoft is investigating reports of a remote code execution vulnerability in mshtml that affects microsoft windows microsoft is aware of targeted attacks that attempt to exploit this vulnerability by using speciallycrafted microsoft office documentsp
pan attacker could craft a malicious","<p>Microsoft is investigating reports of a remote code execution vulnerability in MSHTML that affects Microsoft Windows. Microsoft is aware of targeted attacks that attempt to exploit this vulnerability by using specially-crafted Microsoft Office documents.</p>
<p>An attacker could craft a malicious",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 80
CVE-2021-41249,"GraphQL Playground is a GraphQL IDE for development of graphQL focused applications. All versions of graphql-playground-react older than graphql-playground-react@1.7.28 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1152,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  GraphQL Playground is a GraphQL IDE for development of graphQL focused applications. All versions of graphql-playground-react older than graphql-playground-react@1.7.28 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1152","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  GraphQL Playground is a GraphQL IDE for development of graphQL focused applications. All versions of graphql-playground-react older than graphql-playground-react@1.7.28 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1152",2021-11-04T20:15:08.597,7.1,HIGH,nvd,graphql playground is a graphql ide for development of graphql focused applications all versions of graphqlplaygroundreact older than graphqlplaygroundreact1728 are vulnerable to compromised http schema introspection responses or schema prop values with malicious graphql type names exposing,"GraphQL Playground is a GraphQL IDE for development of graphQL focused applications. All versions of graphql-playground-react older than graphql-playground-react@1.7.28 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1152
CVE-2021-20851,Cross-site request forgery (CSRF) vulnerability in Browser and Operating System Finder versions prior to 1.2 allows a remote unauthenticated attacker to hijack the authentication of an administrator via unspecified vectors.,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site request forgery (CSRF) vulnerability in Browser and Operating System Finder versions prior to 1.2 allows a remote unauthenticated attacker to hijack the authentication of an administrator via unspecified vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site request forgery (CSRF) vulnerability in Browser and Operating System Finder versions prior to 1.2 allows a remote unauthenticated attacker to hijack the authentication of an administrator via unspecified vectors.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352",2021-12-01T03:15:06.663,8.8,HIGH,nvd,crosssite request forgery csrf vulnerability in browser and operating system finder versions prior to 12 allows a remote unauthenticated attacker to hijack the authentication of an administrator via unspecified vectors,Cross-site request forgery (CSRF) vulnerability in Browser and Operating System Finder versions prior to 1.2 allows a remote unauthenticated attacker to hijack the authentication of an administrator via unspecified vectors.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352
CVE-2021-44458,Linux users running Lens 5.2.6 and earlier could be compromised by visiting a malicious website. The malicious website could make websocket connections from the victim's browser to Lens and so operate the local terminal feature. This would allow the attacker to execute arbitrary commands as the Lens,Opera Browser,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Linux users running Lens 5.2.6 and earlier could be compromised by visiting a malicious website. The malicious website could make websocket connections from the victim's browser to Lens and so operate the local terminal feature. This would allow the attacker to execute arbitrary commands as the Lens  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Linux users running Lens 5.2.6 and earlier could be compromised by visiting a malicious website. The malicious website could make websocket connections from the victim's browser to Lens and so operate the local terminal feature. This would allow the attacker to execute arbitrary commands as the Lens  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2022-01-10T16:15:09.673,8.3,HIGH,nvd,linux users running lens 526 and earlier could be compromised by visiting a malicious website the malicious website could make websocket connections from the victims browser to lens and so operate the local terminal feature this would allow the attacker to execute arbitrary commands as the lens,Linux users running Lens 5.2.6 and earlier could be compromised by visiting a malicious website. The malicious website could make websocket connections from the victim's browser to Lens and so operate the local terminal feature. This would allow the attacker to execute arbitrary commands as the Lens,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2022-28795,"A vulnerability within the Avira Password Manager Browser Extensions provided a potential loophole where, if a user visited a page crafted by an attacker, the discovered vulnerability could trigger the Password Manager Extension to fill in the password field automatically. An attacker could then acc",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability within the Avira Password Manager Browser Extensions provided a potential loophole where, if a user visited a page crafted by an attacker, the discovered vulnerability could trigger the Password Manager Extension to fill in the password field automatically. An attacker could then acc  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability within the Avira Password Manager Browser Extensions provided a potential loophole where, if a user visited a page crafted by an attacker, the discovered vulnerability could trigger the Password Manager Extension to fill in the password field automatically. An attacker could then acc  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200",2022-04-12T17:15:10.940,6.5,MEDIUM,nvd,a vulnerability within the avira password manager browser extensions provided a potential loophole where if a user visited a page crafted by an attacker the discovered vulnerability could trigger the password manager extension to fill in the password field automatically an attacker could then acc,"A vulnerability within the Avira Password Manager Browser Extensions provided a potential loophole where, if a user visited a page crafted by an attacker, the discovered vulnerability could trigger the Password Manager Extension to fill in the password field automatically. An attacker could then acc",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 200
CVE-2020-14116,An intent redirection vulnerability in the Mi Browser product. This vulnerability is caused by the Mi Browser does not verify the validity of the incoming data. Attackers can perform sensitive operations by exploiting this.,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An intent redirection vulnerability in the Mi Browser product. This vulnerability is caused by the Mi Browser does not verify the validity of the incoming data. Attackers can perform sensitive operations by exploiting this.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An intent redirection vulnerability in the Mi Browser product. This vulnerability is caused by the Mi Browser does not verify the validity of the incoming data. Attackers can perform sensitive operations by exploiting this.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20",2022-04-21T18:15:08.443,7.5,HIGH,nvd,an intent redirection vulnerability in the mi browser product this vulnerability is caused by the mi browser does not verify the validity of the incoming data attackers can perform sensitive operations by exploiting this,An intent redirection vulnerability in the Mi Browser product. This vulnerability is caused by the Mi Browser does not verify the validity of the incoming data. Attackers can perform sensitive operations by exploiting this.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 20
CVE-2022-22484,"IBM Spectrum Protect Operations Center 8.1.12 and 8.1.13 could allow a local attacker to obtain sensitive information, caused by plain text user account passwords potentially being stored in the browser's application command history. By accessing browser history, an attacker could exploit this vulne",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  IBM Spectrum Protect Operations Center 8.1.12 and 8.1.13 could allow a local attacker to obtain sensitive information, caused by plain text user account passwords potentially being stored in the browser's application command history. By accessing browser history, an attacker could exploit this vulne  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  IBM Spectrum Protect Operations Center 8.1.12 and 8.1.13 could allow a local attacker to obtain sensitive information, caused by plain text user account passwords potentially being stored in the browser's application command history. By accessing browser history, an attacker could exploit this vulne  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522",2022-05-17T16:15:09.067,5.5,MEDIUM,nvd,ibm spectrum protect operations center 8112 and 8113 could allow a local attacker to obtain sensitive information caused by plain text user account passwords potentially being stored in the browsers application command history by accessing browser history an attacker could exploit this vulne,"IBM Spectrum Protect Operations Center 8.1.12 and 8.1.13 could allow a local attacker to obtain sensitive information, caused by plain text user account passwords potentially being stored in the browser's application command history. By accessing browser history, an attacker could exploit this vulne",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522
CVE-2022-38163,A Drag and Drop spoof vulnerability was discovered in F-Secure SAFE Browser for Android and iOS version 19.0 and below. Drag and drop operation by user on address bar could lead to a spoofing of the address bar.,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A Drag and Drop spoof vulnerability was discovered in F-Secure SAFE Browser for Android and iOS version 19.0 and below. Drag and drop operation by user on address bar could lead to a spoofing of the address bar.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A Drag and Drop spoof vulnerability was discovered in F-Secure SAFE Browser for Android and iOS version 19.0 and below. Drag and drop operation by user on address bar could lead to a spoofing of the address bar.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362",2022-11-07T15:15:10.277,3.5,LOW,nvd,a drag and drop spoof vulnerability was discovered in fsecure safe browser for android and ios version 190 and below drag and drop operation by user on address bar could lead to a spoofing of the address bar,A Drag and Drop spoof vulnerability was discovered in F-Secure SAFE Browser for Android and iOS version 19.0 and below. Drag and drop operation by user on address bar could lead to a spoofing of the address bar.,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362
CVE-2022-38754,A potential vulnerability has been identified in Micro Focus Operations Bridge - Containerized. The vulnerability could be exploited by a malicious authenticated OBM (Operations Bridge Manager) user to run Java Scripts in the browser context of another OBM user. Please note: The vulnerability is onl,Opera Browser,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A potential vulnerability has been identified in Micro Focus Operations Bridge - Containerized. The vulnerability could be exploited by a malicious authenticated OBM (Operations Bridge Manager) user to run Java Scripts in the browser context of another OBM user. Please note: The vulnerability is onl  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A potential vulnerability has been identified in Micro Focus Operations Bridge - Containerized. The vulnerability could be exploited by a malicious authenticated OBM (Operations Bridge Manager) user to run Java Scripts in the browser context of another OBM user. Please note: The vulnerability is onl  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79",2022-12-08T16:15:11.717,8.0,HIGH,nvd,a potential vulnerability has been identified in micro focus operations bridge  containerized the vulnerability could be exploited by a malicious authenticated obm operations bridge manager user to run java scripts in the browser context of another obm user please note the vulnerability is onl,A potential vulnerability has been identified in Micro Focus Operations Bridge - Containerized. The vulnerability could be exploited by a malicious authenticated OBM (Operations Bridge Manager) user to run Java Scripts in the browser context of another OBM user. Please note: The vulnerability is onl,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-79
CVE-2022-34469,"When a TLS Certificate error occurs on a domain protected by the HSTS header, the browser should not allow the user to bypass the certificate error. On Firefox for Android, the user was presented with the option to bypass the error; this could only have been done by the user explicitly. <br>*This bu",Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 614 Explanation: The vulnerability allows users to bypass certificate validation errors by providing an option to do so in the browser, potentially leading to man-in-the-middle attacks. Vendor: Mozilla Cause: Firefox for Android provided an option to bypass TLS certificate errors, allowing users to proceed despite the error. Impact: Users could potentially be subject to man-in-the-middle attacks, compromising their sensitive information and transactions.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  When a TLS Certificate error occurs on a domain protected by the HSTS header, the browser should not allow the user to bypass the certificate error. On Firefox for Android, the user was presented with the option to bypass the error; this could only have been done by the user explicitly. <br>*This bu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 614 Explanation: The vulnerability allows users to bypass certificate validation errors by providing an option to do so in the browser, potentially leading to man-in-the-middle attacks. Vendor: Mozilla Cause: Firefox for Android provided an option to bypass TLS certificate errors, allowing users to proceed despite the error. Impact: Users could potentially be subject to man-in-the-middle attacks, compromising their sensitive information and transactions.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  When a TLS Certificate error occurs on a domain protected by the HSTS header, the browser should not allow the user to bypass the certificate error. On Firefox for Android, the user was presented with the option to bypass the error; this could only have been done by the user explicitly. <br>*This bu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 614 Explanation: The vulnerability allows users to bypass certificate validation errors by providing an option to do so in the browser, potentially leading to man-in-the-middle attacks. Vendor: Mozilla Cause: Firefox for Android provided an option to bypass TLS certificate errors, allowing users to proceed despite the error. Impact: Users could potentially be subject to man-in-the-middle attacks, compromising their sensitive information and transactions.",2022-12-22T20:15:31.103,8.1,HIGH,nvd,when a tls certificate error occurs on a domain protected by the hsts header the browser should not allow the user to bypass the certificate error on firefox for android the user was presented with the option to bypass the error this could only have been done by the user explicitly brthis bu,"When a TLS Certificate error occurs on a domain protected by the HSTS header, the browser should not allow the user to bypass the certificate error. On Firefox for Android, the user was presented with the option to bypass the error; this could only have been done by the user explicitly. <br>*This bu","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 614 Explanation: The vulnerability allows users to bypass certificate validation errors by providing an option to do so in the browser, potentially leading to man-in-the-middle attacks. Vendor: Mozilla Cause: Firefox for Android provided an option to bypass TLS certificate errors, allowing users to proceed despite the error. Impact: Users could potentially be subject to man-in-the-middle attacks, compromising their sensitive information and transactions."
CVE-2022-34478,"The <code>ms-msdt</code>, <code>search</code>, and <code>search-ms</code> protocols deliver content to Microsoft applications, bypassing the browser, when a user accepts a prompt. These applications have had known vulnerabilities, exploited in the wild (although we know of none exploited through Thu",Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: The vulnerability allows attackers to execute arbitrary code by exploiting the protocol handler, leading to unauthorized execution of code. Vendor: Microsoft Cause: The ms-msdt, search, and search-ms protocols can execute code without proper security checks, allowing attackers to bypass the browser and execute malicious content. Impact: The vulnerability can be exploited to execute arbitrary code, potentially leading to unauthorized actions, data theft, or system compromise.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The <code>ms-msdt</code>, <code>search</code>, and <code>search-ms</code> protocols deliver content to Microsoft applications, bypassing the browser, when a user accepts a prompt. These applications have had known vulnerabilities, exploited in the wild (although we know of none exploited through Thu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: The vulnerability allows attackers to execute arbitrary code by exploiting the protocol handler, leading to unauthorized execution of code. Vendor: Microsoft Cause: The ms-msdt, search, and search-ms protocols can execute code without proper security checks, allowing attackers to bypass the browser and execute malicious content. Impact: The vulnerability can be exploited to execute arbitrary code, potentially leading to unauthorized actions, data theft, or system compromise.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The <code>ms-msdt</code>, <code>search</code>, and <code>search-ms</code> protocols deliver content to Microsoft applications, bypassing the browser, when a user accepts a prompt. These applications have had known vulnerabilities, exploited in the wild (although we know of none exploited through Thu  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: The vulnerability allows attackers to execute arbitrary code by exploiting the protocol handler, leading to unauthorized execution of code. Vendor: Microsoft Cause: The ms-msdt, search, and search-ms protocols can execute code without proper security checks, allowing attackers to bypass the browser and execute malicious content. Impact: The vulnerability can be exploited to execute arbitrary code, potentially leading to unauthorized actions, data theft, or system compromise.",2022-12-22T20:15:32.903,6.5,MEDIUM,nvd,the codemsmsdtcode codesearchcode and codesearchmscode protocols deliver content to microsoft applications bypassing the browser when a user accepts a prompt these applications have had known vulnerabilities exploited in the wild although we know of none exploited through thu,"The <code>ms-msdt</code>, <code>search</code>, and <code>search-ms</code> protocols deliver content to Microsoft applications, bypassing the browser, when a user accepts a prompt. These applications have had known vulnerabilities, exploited in the wild (although we know of none exploited through Thu","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352 Explanation: The vulnerability allows attackers to execute arbitrary code by exploiting the protocol handler, leading to unauthorized execution of code. Vendor: Microsoft Cause: The ms-msdt, search, and search-ms protocols can execute code without proper security checks, allowing attackers to bypass the browser and execute malicious content. Impact: The vulnerability can be exploited to execute arbitrary code, potentially leading to unauthorized actions, data theft, or system compromise."
CVE-2023-25653,"node-jose is a JavaScript implementation of the JSON Object Signing and Encryption (JOSE) for web browsers and node.js-based servers. Prior to version 2.2.0, when using the non-default ""fallback"" crypto back-end, ECC operations in `node-jose` can trigger a Denial-of-Service (DoS) condition, due to a",Opera Browser,CWE-400,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption (���Resource Exhaustion') Vendor: npm (Node.js Package) Cause: The vulnerability occurs when using the non-default ""fallback"" crypto backend, leading to excessive resource consumption during ECC operations. Impact: The vulnerability can cause a Denial-of-Service (DoS) condition by exhausting system resources.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  node-jose is a JavaScript implementation of the JSON Object Signing and Encryption (JOSE) for web browsers and node.js-based servers. Prior to version 2.2.0, when using the non-default ""fallback"" crypto back-end, ECC operations in node-jose can trigger a Denial-of-Service (DoS) condition, due to a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption (���Resource Exhaustion') Vendor: npm (Node.js Package) Cause: The vulnerability occurs when using the non-default ""fallback"" crypto backend, leading to excessive resource consumption during ECC operations. Impact: The vulnerability can cause a Denial-of-Service (DoS) condition by exhausting system resources.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  node-jose is a JavaScript implementation of the JSON Object Signing and Encryption (JOSE) for web browsers and node.js-based servers. Prior to version 2.2.0, when using the non-default ""fallback"" crypto back-end, ECC operations in node-jose can trigger a Denial-of-Service (DoS) condition, due to a  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption (���Resource Exhaustion') Vendor: npm (Node.js Package) Cause: The vulnerability occurs when using the non-default ""fallback"" crypto backend, leading to excessive resource consumption during ECC operations. Impact: The vulnerability can cause a Denial-of-Service (DoS) condition by exhausting system resources.",2023-02-16T19:15:14.650,7.5,HIGH,nvd,nodejose is a javascript implementation of the json object signing and encryption jose for web browsers and nodejsbased servers prior to version 220 when using the nondefault fallback crypto backend ecc operations in nodejose can trigger a denialofservice dos condition due to a,"node-jose is a JavaScript implementation of the JSON Object Signing and Encryption (JOSE) for web browsers and node.js-based servers. Prior to version 2.2.0, when using the non-default ""fallback"" crypto back-end, ECC operations in `node-jose` can trigger a Denial-of-Service (DoS) condition, due to a","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 400 Explanation: CWE-400: Uncontrolled Resource Consumption (���Resource Exhaustion') Vendor: npm (Node.js Package) Cause: The vulnerability occurs when using the non-default ""fallback"" crypto backend, leading to excessive resource consumption during ECC operations. Impact: The vulnerability can cause a Denial-of-Service (DoS) condition by exhausting system resources."
CVE-2021-27788,"HCL Verse is susceptible to a Cross Site Scripting (XSS) vulnerability. ��By tricking a user into clicking a crafted URL, a remote unauthenticated attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, or other se",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HCL Verse is susceptible to a Cross Site Scripting (XSS) vulnerability. By tricking a user into clicking a crafted URL, a remote unauthenticated attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, or other se  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HCL Verse is susceptible to a Cross Site Scripting (XSS) vulnerability. By tricking a user into clicking a crafted URL, a remote unauthenticated attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, or other se  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-03-10T21:15:10.867,8.3,HIGH,nvd,hcl verse is susceptible to a cross site scripting xss vulnerability ��by tricking a user into clicking a crafted url a remote unauthenticated attacker could execute script in a victims web browser to perform operations as the victim andor steal the victims cookies session tokens or other se,"HCL Verse is susceptible to a Cross Site Scripting (XSS) vulnerability. ��By tricking a user into clicking a crafted URL, a remote unauthenticated attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, or other se",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-29003,"SvelteKit is a web development framework. The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a `+server.js` file, containing endpoint handlers for different HTTP methods.

SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protec",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SvelteKit is a web development framework. The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a +server.js file, containing endpoint handlers for different HTTP methods. SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  SvelteKit is a web development framework. The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a +server.js file, containing endpoint handlers for different HTTP methods. SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protec  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352",2023-04-04T22:15:08.157,8.8,HIGH,nvd,"sveltekit is a web development framework the sveltekit framework offers developers an option to create simple rest apis this is done by defining a serverjs file containing endpoint handlers for different http methods

sveltekit provides outofthebox crosssite request forgery csrf protec","SvelteKit is a web development framework. The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a `+server.js` file, containing endpoint handlers for different HTTP methods.

SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protec",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352
CVE-2023-29008,"The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a `+server.js` file, containing endpoint handlers for different HTTP methods.

SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protection to its users. The protection is imple",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a +server.js file, containing endpoint handlers for different HTTP methods. SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protection to its users. The protection is imple  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a +server.js file, containing endpoint handlers for different HTTP methods. SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protection to its users. The protection is imple  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352",2023-04-06T17:15:10.547,8.8,HIGH,nvd,"the sveltekit framework offers developers an option to create simple rest apis this is done by defining a serverjs file containing endpoint handlers for different http methods

sveltekit provides outofthebox crosssite request forgery csrf protection to its users the protection is imple","The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a `+server.js` file, containing endpoint handlers for different HTTP methods.

SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protection to its users. The protection is imple",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352
CVE-2023-27520,Cross-site request forgery (CSRF) vulnerability in SEIKO EPSON printers/network interface Web Config allows a remote unauthenticated attacker to hijack the authentication and perform unintended operations by having a logged-in user view a malicious page. [Note] Web Config is the software that allows,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site request forgery (CSRF) vulnerability in SEIKO EPSON printers/network interface Web Config allows a remote unauthenticated attacker to hijack the authentication and perform unintended operations by having a logged-in user view a malicious page. [Note] Web Config is the software that allows  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cross-site request forgery (CSRF) vulnerability in SEIKO EPSON printers/network interface Web Config allows a remote unauthenticated attacker to hijack the authentication and perform unintended operations by having a logged-in user view a malicious page. [Note] Web Config is the software that allows  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352",2023-04-11T09:15:08.157,6.5,MEDIUM,nvd,crosssite request forgery csrf vulnerability in seiko epson printersnetwork interface web config allows a remote unauthenticated attacker to hijack the authentication and perform unintended operations by having a loggedin user view a malicious page note web config is the software that allows,Cross-site request forgery (CSRF) vulnerability in SEIKO EPSON printers/network interface Web Config allows a remote unauthenticated attacker to hijack the authentication and perform unintended operations by having a logged-in user view a malicious page. [Note] Web Config is the software that allows,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 352
CVE-2023-25738,Members of the <code>DEVMODEW</code> struct set by the printer device driver weren't being validated and could have resulted in invalid values which in turn would cause the browser to attempt out of bounds access to related variables.<br>*This bug only affects Firefox on Windows. Other operating sys,Opera Browser,CWE-120,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120 Explanation: CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') Vendor: Mozilla Cause: Members of the DEVMODEW struct set by the printer device driver weren't being validated, leading to potential invalid values. Impact: Invalid values in the struct could cause out-of-bounds access to related variables, potentially leading to arbitrary code execution or other security issues.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Members of the <code>DEVMODEW</code> struct set by the printer device driver weren't being validated and could have resulted in invalid values which in turn would cause the browser to attempt out of bounds access to related variables.<br>*This bug only affects Firefox on Windows. Other operating sys  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120 Explanation: CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') Vendor: Mozilla Cause: Members of the DEVMODEW struct set by the printer device driver weren't being validated, leading to potential invalid values. Impact: Invalid values in the struct could cause out-of-bounds access to related variables, potentially leading to arbitrary code execution or other security issues.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Members of the <code>DEVMODEW</code> struct set by the printer device driver weren't being validated and could have resulted in invalid values which in turn would cause the browser to attempt out of bounds access to related variables.<br>*This bug only affects Firefox on Windows. Other operating sys  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120 Explanation: CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') Vendor: Mozilla Cause: Members of the DEVMODEW struct set by the printer device driver weren't being validated, leading to potential invalid values. Impact: Invalid values in the struct could cause out-of-bounds access to related variables, potentially leading to arbitrary code execution or other security issues.",2023-06-02T17:15:11.367,6.5,MEDIUM,nvd,members of the codedevmodewcode struct set by the printer device driver werent being validated and could have resulted in invalid values which in turn would cause the browser to attempt out of bounds access to related variablesbrthis bug only affects firefox on windows other operating sys,Members of the <code>DEVMODEW</code> struct set by the printer device driver weren't being validated and could have resulted in invalid values which in turn would cause the browser to attempt out of bounds access to related variables.<br>*This bug only affects Firefox on Windows. Other operating sys,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 120 Explanation: CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') Vendor: Mozilla Cause: Members of the DEVMODEW struct set by the printer device driver weren't being validated, leading to potential invalid values. Impact: Invalid values in the struct could cause out-of-bounds access to related variables, potentially leading to arbitrary code execution or other security issues."
CVE-2023-34233,The Snowflake Connector for Python provides an interface for developing Python applications that can connect to Snowflake and perform all standard operations. Versions prior to 3.0.2 are vulnerable to command injection via single sign-on(SSO) browser URL authentication. In order to exploit the poten,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Snowflake Connector for Python provides an interface for developing Python applications that can connect to Snowflake and perform all standard operations. Versions prior to 3.0.2 are vulnerable to command injection via single sign-on(SSO) browser URL authentication. In order to exploit the poten  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The Snowflake Connector for Python provides an interface for developing Python applications that can connect to Snowflake and perform all standard operations. Versions prior to 3.0.2 are vulnerable to command injection via single sign-on(SSO) browser URL authentication. In order to exploit the poten  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78",2023-06-08T21:15:17.663,8.8,HIGH,nvd,the snowflake connector for python provides an interface for developing python applications that can connect to snowflake and perform all standard operations versions prior to 302 are vulnerable to command injection via single signonsso browser url authentication in order to exploit the poten,The Snowflake Connector for Python provides an interface for developing Python applications that can connect to Snowflake and perform all standard operations. Versions prior to 3.0.2 are vulnerable to command injection via single sign-on(SSO) browser URL authentication. In order to exploit the poten,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 78
CVE-2023-38335,"Omnis Studio 10.22.00 has incorrect access control. It advertises a feature for making Omnis libraries ""always private"" - this is supposed to be an irreversible operation. However, due to implementation issues, ""always private"" Omnis libraries can be opened by the Omnis Studio browser by bypassing s",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Omnis Studio 10.22.00 has incorrect access control. It advertises a feature for making Omnis libraries ""always private"" - this is supposed to be an irreversible operation. However, due to implementation issues, ""always private"" Omnis libraries can be opened by the Omnis Studio browser by bypassing s  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Omnis Studio 10.22.00 has incorrect access control. It advertises a feature for making Omnis libraries ""always private"" - this is supposed to be an irreversible operation. However, due to implementation issues, ""always private"" Omnis libraries can be opened by the Omnis Studio browser by bypassing s  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862",2023-07-20T18:15:12.227,5.3,MEDIUM,nvd,omnis studio 102200 has incorrect access control it advertises a feature for making omnis libraries always private  this is supposed to be an irreversible operation however due to implementation issues always private omnis libraries can be opened by the omnis studio browser by bypassing s,"Omnis Studio 10.22.00 has incorrect access control. It advertises a feature for making Omnis libraries ""always private"" - this is supposed to be an irreversible operation. However, due to implementation issues, ""always private"" Omnis libraries can be opened by the Omnis Studio browser by bypassing s",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 862
CVE-2023-28013,"HCL Verse is susceptible to a Reflected Cross Site Scripting (XSS) vulnerability.  By tricking a user into entering crafted markup a remote, unauthenticated attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, ",Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Reflected Cross-Site Scripting (XSS) allows an attacker to inject malicious scripts into web pages viewed by other users. Vendor: HCL Cause: Improper neutralization of special elements in output used by the web application. Impact: Attackers can execute arbitrary code in the context of the victim's browser, potentially stealing sensitive information or performing unauthorized actions.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HCL Verse is susceptible to a Reflected Cross Site Scripting (XSS) vulnerability. By tricking a user into entering crafted markup a remote, unauthenticated attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Reflected Cross-Site Scripting (XSS) allows an attacker to inject malicious scripts into web pages viewed by other users. Vendor: HCL Cause: Improper neutralization of special elements in output used by the web application. Impact: Attackers can execute arbitrary code in the context of the victim's browser, potentially stealing sensitive information or performing unauthorized actions.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HCL Verse is susceptible to a Reflected Cross Site Scripting (XSS) vulnerability. By tricking a user into entering crafted markup a remote, unauthenticated attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens,  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Reflected Cross-Site Scripting (XSS) allows an attacker to inject malicious scripts into web pages viewed by other users. Vendor: HCL Cause: Improper neutralization of special elements in output used by the web application. Impact: Attackers can execute arbitrary code in the context of the victim's browser, potentially stealing sensitive information or performing unauthorized actions.",2023-07-26T23:15:09.787,6.5,MEDIUM,nvd,hcl verse is susceptible to a reflected cross site scripting xss vulnerability  by tricking a user into entering crafted markup a remote unauthenticated attacker could execute script in a victims web browser to perform operations as the victim andor steal the victims cookies session tokens,"HCL Verse is susceptible to a Reflected Cross Site Scripting (XSS) vulnerability.  By tricking a user into entering crafted markup a remote, unauthenticated attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, ","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Reflected Cross-Site Scripting (XSS) allows an attacker to inject malicious scripts into web pages viewed by other users. Vendor: HCL Cause: Improper neutralization of special elements in output used by the web application. Impact: Attackers can execute arbitrary code in the context of the victim's browser, potentially stealing sensitive information or performing unauthorized actions."
CVE-2023-37496,"HCL Verse is susceptible to a Stored Cross Site Scripting (XSS) vulnerability.  An attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, or other sensitive information.
",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HCL Verse is susceptible to a Stored Cross Site Scripting (XSS) vulnerability. An attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, or other sensitive information.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  HCL Verse is susceptible to a Stored Cross Site Scripting (XSS) vulnerability. An attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, or other sensitive information.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-08-01T01:15:10.770,8.3,HIGH,nvd,"hcl verse is susceptible to a stored cross site scripting xss vulnerability  an attacker could execute script in a victims web browser to perform operations as the victim andor steal the victims cookies session tokens or other sensitive information
","HCL Verse is susceptible to a Stored Cross Site Scripting (XSS) vulnerability.  An attacker could execute script in a victim's web browser to perform operations as the victim and/or steal the victim's cookies, session tokens, or other sensitive information.
",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-39366,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ accounts,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ accounts  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ accounts  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-09-05T21:15:46.963,6.1,MEDIUM,nvd,cacti is an open source operational monitoring and fault management framework affected versions are subject to a stored crosssitescripting xss vulnerability allows an authenticated user to poison data stored in the _cacti_s database these data will be viewed by administrative _cacti_ accounts,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ accounts,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-39510,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ accounts,Opera Browser,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ accounts  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ accounts  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-09-05T21:15:47.047,6.1,MEDIUM,nvd,cacti is an open source operational monitoring and fault management framework affected versions are subject to a stored crosssitescripting xss vulnerability allows an authenticated user to poison data stored in the _cacti_s database these data will be viewed by administrative _cacti_ accounts,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ accounts,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-39512,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-09-05T21:15:47.127,6.1,MEDIUM,nvd,cacti is an open source operational monitoring and fault management framework affected versions are subject to a stored crosssitescripting xss vulnerability which allows an authenticated user to poison data stored in the _cacti_s database these data will be viewed by administrative _cacti_ ac,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-39513,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-09-05T21:15:47.213,6.1,MEDIUM,nvd,cacti is an open source operational monitoring and fault management framework affected versions are subject to a stored crosssitescripting xss vulnerability which allows an authenticated user to poison data stored in the _cacti_s database these data will be viewed by administrative _cacti_ ac,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-39514,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-09-05T21:15:47.297,6.1,MEDIUM,nvd,cacti is an open source operational monitoring and fault management framework affected versions are subject to a stored crosssitescripting xss vulnerability which allows an authenticated user to poison data stored in the _cacti_s database these data will be viewed by administrative _cacti_ ac,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-39515,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the cacti's database. These data will be viewed by administrative cacti accounts and,Opera Browser,CWE-79,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the cacti's database. These data will be viewed by administrative cacti accounts and  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the cacti's database. These data will be viewed by administrative cacti accounts and  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-09-05T21:15:47.387,6.1,MEDIUM,nvd,cacti is an open source operational monitoring and fault management framework affected versions are subject to a stored crosssitescripting xss vulnerability allows an authenticated user to poison data stored in the cactis database these data will be viewed by administrative cacti accounts and,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability allows an authenticated user to poison data stored in the cacti's database. These data will be viewed by administrative cacti accounts and,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-39516,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,Opera Browser,CWE-79,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a classic web vulnerability that allows an attacker to inject malicious scripts into web pages viewed by other users. In this case, it specifically involves stored XSS, where the malicious content is stored in the database and then served back to other users. Vendor: Cacti Cause: The vulnerability arises because Cacti, when storing user-supplied data in the database, does not properly sanitize or validate the input, allowing malicious scripts to be stored. Impact: An authenticated user can inject malicious scripts into the data stored in the Cacti database. When other users view this data, the injected scripts are executed in their browsers, potentially allowing the attacker to steal sensitive information, perform unauthorized actions, or compromise the user's system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a classic web vulnerability that allows an attacker to inject malicious scripts into web pages viewed by other users. In this case, it specifically involves stored XSS, where the malicious content is stored in the database and then served back to other users. Vendor: Cacti Cause: The vulnerability arises because Cacti, when storing user-supplied data in the database, does not properly sanitize or validate the input, allowing malicious scripts to be stored. Impact: An authenticated user can inject malicious scripts into the data stored in the Cacti database. When other users view this data, the injected scripts are executed in their browsers, potentially allowing the attacker to steal sensitive information, perform unauthorized actions, or compromise the user's system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a classic web vulnerability that allows an attacker to inject malicious scripts into web pages viewed by other users. In this case, it specifically involves stored XSS, where the malicious content is stored in the database and then served back to other users. Vendor: Cacti Cause: The vulnerability arises because Cacti, when storing user-supplied data in the database, does not properly sanitize or validate the input, allowing malicious scripts to be stored. Impact: An authenticated user can inject malicious scripts into the data stored in the Cacti database. When other users view this data, the injected scripts are executed in their browsers, potentially allowing the attacker to steal sensitive information, perform unauthorized actions, or compromise the user's system.",2023-09-05T22:15:09.180,6.1,MEDIUM,nvd,cacti is an open source operational monitoring and fault management framework affected versions are subject to a stored crosssitescripting xss vulnerability which allows an authenticated user to poison data stored in the _cacti_s database these data will be viewed by administrative _cacti_ ac,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a classic web vulnerability that allows an attacker to inject malicious scripts into web pages viewed by other users. In this case, it specifically involves stored XSS, where the malicious content is stored in the database and then served back to other users. Vendor: Cacti Cause: The vulnerability arises because Cacti, when storing user-supplied data in the database, does not properly sanitize or validate the input, allowing malicious scripts to be stored. Impact: An authenticated user can inject malicious scripts into the data stored in the Cacti database. When other users view this data, the injected scripts are executed in their browsers, potentially allowing the attacker to steal sensitive information, perform unauthorized actions, or compromise the user's system."
CVE-2023-39511,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,Opera Browser,CWE-79,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a classic web vulnerability where an attacker can inject malicious scripts into content resulting in an unwanted behavior on the targeted end user's browser. The vulnerability allows an authenticated user to store malicious content in the database that will be executed when viewed by administrative users. Vendor: Cacti Cause: Insufficient validation of user-supplied input before storing it in the database Impact: Successful exploitation could lead to the execution of arbitrary code on the victim's browser, session hijacking, and other attacks against the administrative users.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a classic web vulnerability where an attacker can inject malicious scripts into content resulting in an unwanted behavior on the targeted end user's browser. The vulnerability allows an authenticated user to store malicious content in the database that will be executed when viewed by administrative users. Vendor: Cacti Cause: Insufficient validation of user-supplied input before storing it in the database Impact: Successful exploitation could lead to the execution of arbitrary code on the victim's browser, session hijacking, and other attacks against the administrative users.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a classic web vulnerability where an attacker can inject malicious scripts into content resulting in an unwanted behavior on the targeted end user's browser. The vulnerability allows an authenticated user to store malicious content in the database that will be executed when viewed by administrative users. Vendor: Cacti Cause: Insufficient validation of user-supplied input before storing it in the database Impact: Successful exploitation could lead to the execution of arbitrary code on the victim's browser, session hijacking, and other attacks against the administrative users.",2023-09-06T18:15:08.627,6.1,MEDIUM,nvd,cacti is an open source operational monitoring and fault management framework affected versions are subject to a stored crosssitescripting xss vulnerability which allows an authenticated user to poison data stored in the _cacti_s database these data will be viewed by administrative _cacti_ ac,Cacti is an open source operational monitoring and fault management framework. Affected versions are subject to a Stored Cross-Site-Scripting (XSS) Vulnerability which allows an authenticated user to poison data stored in the _cacti_'s database. These data will be viewed by administrative _cacti_ ac,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: CWE-79 is a classic web vulnerability where an attacker can inject malicious scripts into content resulting in an unwanted behavior on the targeted end user's browser. The vulnerability allows an authenticated user to store malicious content in the database that will be executed when viewed by administrative users. Vendor: Cacti Cause: Insufficient validation of user-supplied input before storing it in the database Impact: Successful exploitation could lead to the execution of arbitrary code on the victim's browser, session hijacking, and other attacks against the administrative users."
CVE-2023-5562,An unsafe default configuration in KNIME Analytics Platform before 5.2.0 allows for a cross-site scripting attack. When KNIME Analytics Platform is used as an executor for either KNIME Server or KNIME Business Hub several JavaScript-based view nodes do not sanitize the data that is displayed by defa,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An unsafe default configuration in KNIME Analytics Platform before 5.2.0 allows for a cross-site scripting attack. When KNIME Analytics Platform is used as an executor for either KNIME Server or KNIME Business Hub several JavaScript-based view nodes do not sanitize the data that is displayed by defa  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  An unsafe default configuration in KNIME Analytics Platform before 5.2.0 allows for a cross-site scripting attack. When KNIME Analytics Platform is used as an executor for either KNIME Server or KNIME Business Hub several JavaScript-based view nodes do not sanitize the data that is displayed by defa  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-10-12T20:15:12.583,6.1,MEDIUM,nvd,an unsafe default configuration in knime analytics platform before 520 allows for a crosssite scripting attack when knime analytics platform is used as an executor for either knime server or knime business hub several javascriptbased view nodes do not sanitize the data that is displayed by defa,An unsafe default configuration in KNIME Analytics Platform before 5.2.0 allows for a cross-site scripting attack. When KNIME Analytics Platform is used as an executor for either KNIME Server or KNIME Business Hub several JavaScript-based view nodes do not sanitize the data that is displayed by defa,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2023-45683,"github.com/crewjam/saml is a saml library for the go language. In affected versions the package does not validate the ACS Location URI according to the SAML binding being parsed. If abused, this flaw allows attackers to register malicious Service Providers at the IdP and inject Javascript in the ACS",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  github.com/crewjam/saml is a saml library for the go language. In affected versions the package does not validate the ACS Location URI according to the SAML binding being parsed. If abused, this flaw allows attackers to register malicious Service Providers at the IdP and inject Javascript in the ACS  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  github.com/crewjam/saml is a saml library for the go language. In affected versions the package does not validate the ACS Location URI according to the SAML binding being parsed. If abused, this flaw allows attackers to register malicious Service Providers at the IdP and inject Javascript in the ACS  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345",2023-10-16T19:15:11.253,7.1,HIGH,nvd,githubcomcrewjamsaml is a saml library for the go language in affected versions the package does not validate the acs location uri according to the saml binding being parsed if abused this flaw allows attackers to register malicious service providers at the idp and inject javascript in the acs,"github.com/crewjam/saml is a saml library for the go language. In affected versions the package does not validate the ACS Location URI according to the SAML binding being parsed. If abused, this flaw allows attackers to register malicious Service Providers at the IdP and inject Javascript in the ACS",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 345
CVE-2023-47114,"Fides is an open-source privacy engineering platform for managing the fulfillment of data privacy requests in your runtime environment, and the enforcement of privacy regulations in your code. The Fides web application allows data subject users to request access to their personal data. If the reques",Opera Browser,CWE-284,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284 Explanation: Improper Access Control Vendor: Fides Cause: The Fides web application does not properly restrict access to sensitive user data when handling data subject requests. Impact: Unauthorized access to sensitive personal data could occur.,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Fides is an open-source privacy engineering platform for managing the fulfillment of data privacy requests in your runtime environment, and the enforcement of privacy regulations in your code. The Fides web application allows data subject users to request access to their personal data. If the reques  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284 Explanation: Improper Access Control Vendor: Fides Cause: The Fides web application does not properly restrict access to sensitive user data when handling data subject requests. Impact: Unauthorized access to sensitive personal data could occur.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Fides is an open-source privacy engineering platform for managing the fulfillment of data privacy requests in your runtime environment, and the enforcement of privacy regulations in your code. The Fides web application allows data subject users to request access to their personal data. If the reques  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284 Explanation: Improper Access Control Vendor: Fides Cause: The Fides web application does not properly restrict access to sensitive user data when handling data subject requests. Impact: Unauthorized access to sensitive personal data could occur.",2023-11-08T22:15:11.023,4.3,MEDIUM,nvd,fides is an opensource privacy engineering platform for managing the fulfillment of data privacy requests in your runtime environment and the enforcement of privacy regulations in your code the fides web application allows data subject users to request access to their personal data if the reques,"Fides is an open-source privacy engineering platform for managing the fulfillment of data privacy requests in your runtime environment, and the enforcement of privacy regulations in your code. The Fides web application allows data subject users to request access to their personal data. If the reques",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: CWE-284 Explanation: Improper Access Control Vendor: Fides Cause: The Fides web application does not properly restrict access to sensitive user data when handling data subject requests. Impact: Unauthorized access to sensitive personal data could occur.
CVE-2023-49803,"@koa/cors npm provides Cross-Origin Resource Sharing (CORS) for koa, a web framework for Node.js. Prior to version 5.0.0, the middleware operates in a way that if an allowed origin is not provided, it will return an `Access-Control-Allow-Origin` header with the value of the origin from the request. ",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 564,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  @koa/cors npm provides Cross-Origin Resource Sharing (CORS) for koa, a web framework for Node.js. Prior to version 5.0.0, the middleware operates in a way that if an allowed origin is not provided, it will return an Access-Control-Allow-Origin header with the value of the origin from the request.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 564","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  @koa/cors npm provides Cross-Origin Resource Sharing (CORS) for koa, a web framework for Node.js. Prior to version 5.0.0, the middleware operates in a way that if an allowed origin is not provided, it will return an Access-Control-Allow-Origin header with the value of the origin from the request.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 564",2023-12-11T23:15:07.620,8.6,HIGH,nvd,koacors npm provides crossorigin resource sharing cors for koa a web framework for nodejs prior to version 500 the middleware operates in a way that if an allowed origin is not provided it will return an accesscontrolalloworigin header with the value of the origin from the request,"@koa/cors npm provides Cross-Origin Resource Sharing (CORS) for koa, a web framework for Node.js. Prior to version 5.0.0, the middleware operates in a way that if an allowed origin is not provided, it will return an `Access-Control-Allow-Origin` header with the value of the origin from the request. ",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 564
CVE-2023-47741,"
IBM i 7.3, 7.4, 7.5, IBM i Db2 Mirror for i 7.4 and 7.5 web browser clients may leave clear-text passwords in browser memory that can be viewed using common browser tools before the memory is garbage collected. A malicious actor with access to the victim's PC could exploit this vulnerability to gai",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description: ","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description: ",2023-12-18T20:15:08.213,5.3,MEDIUM,nvd,"
ibm i 73 74 75 ibm i db2 mirror for i 74 and 75 web browser clients may leave cleartext passwords in browser memory that can be viewed using common browser tools before the memory is garbage collected a malicious actor with access to the victims pc could exploit this vulnerability to gai","
IBM i 7.3, 7.4, 7.5, IBM i Db2 Mirror for i 7.4 and 7.5 web browser clients may leave clear-text passwords in browser memory that can be viewed using common browser tools before the memory is garbage collected. A malicious actor with access to the victim's PC could exploit this vulnerability to gai",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522
CVE-2023-49088,Cacti is an open source operational monitoring and fault management framework. The fix applied for CVE-2023-39515 in version 1.2.25 is incomplete as it enables an adversary to have a victim browser execute malicious code when a victim user hovers their mouse over the malicious data source path in `d,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. The fix applied for CVE-2023-39515 in version 1.2.25 is incomplete as it enables an adversary to have a victim browser execute malicious code when a victim user hovers their mouse over the malicious data source path in d  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Cacti is an open source operational monitoring and fault management framework. The fix applied for CVE-2023-39515 in version 1.2.25 is incomplete as it enables an adversary to have a victim browser execute malicious code when a victim user hovers their mouse over the malicious data source path in d  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2023-12-22T17:15:08.247,6.1,MEDIUM,nvd,cacti is an open source operational monitoring and fault management framework the fix applied for cve202339515 in version 1225 is incomplete as it enables an adversary to have a victim browser execute malicious code when a victim user hovers their mouse over the malicious data source path in d,Cacti is an open source operational monitoring and fault management framework. The fix applied for CVE-2023-39515 in version 1.2.25 is incomplete as it enables an adversary to have a victim browser execute malicious code when a victim user hovers their mouse over the malicious data source path in `d,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2024-21798,"ELECOM wireless LAN routers contain a cross-site scripting vulnerability. Assume that a malicious administrative user configures the affected product with specially crafted content. When another administrative user logs in and operates the product, an arbitrary script may be executed on the web brow",Opera Browser,CWE-79,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper neutralization of special elements used in an OS Command (CWE-79) is a common web vulnerability that occurs when user-supplied data is used to construct a command or query without proper validation or encoding. This allows attackers to inject malicious commands or scripts. Vendor: ELECOM Cause: The vulnerability occurs when the ELECOM wireless LAN router fails to properly sanitize or encode user-supplied input in the administrative interface, allowing a malicious administrator to inject arbitrary script content. Impact: Successful exploitation could allow an attacker to execute arbitrary scripts on the web browser of other administrative users, potentially leading to unauthorized access, data theft, or system compromise.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ELECOM wireless LAN routers contain a cross-site scripting vulnerability. Assume that a malicious administrative user configures the affected product with specially crafted content. When another administrative user logs in and operates the product, an arbitrary script may be executed on the web brow  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper neutralization of special elements used in an OS Command (CWE-79) is a common web vulnerability that occurs when user-supplied data is used to construct a command or query without proper validation or encoding. This allows attackers to inject malicious commands or scripts. Vendor: ELECOM Cause: The vulnerability occurs when the ELECOM wireless LAN router fails to properly sanitize or encode user-supplied input in the administrative interface, allowing a malicious administrator to inject arbitrary script content. Impact: Successful exploitation could allow an attacker to execute arbitrary scripts on the web browser of other administrative users, potentially leading to unauthorized access, data theft, or system compromise.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  ELECOM wireless LAN routers contain a cross-site scripting vulnerability. Assume that a malicious administrative user configures the affected product with specially crafted content. When another administrative user logs in and operates the product, an arbitrary script may be executed on the web brow  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper neutralization of special elements used in an OS Command (CWE-79) is a common web vulnerability that occurs when user-supplied data is used to construct a command or query without proper validation or encoding. This allows attackers to inject malicious commands or scripts. Vendor: ELECOM Cause: The vulnerability occurs when the ELECOM wireless LAN router fails to properly sanitize or encode user-supplied input in the administrative interface, allowing a malicious administrator to inject arbitrary script content. Impact: Successful exploitation could allow an attacker to execute arbitrary scripts on the web browser of other administrative users, potentially leading to unauthorized access, data theft, or system compromise.",2024-02-28T23:15:09.453,4.8,MEDIUM,nvd,elecom wireless lan routers contain a crosssite scripting vulnerability assume that a malicious administrative user configures the affected product with specially crafted content when another administrative user logs in and operates the product an arbitrary script may be executed on the web brow,"ELECOM wireless LAN routers contain a cross-site scripting vulnerability. Assume that a malicious administrative user configures the affected product with specially crafted content. When another administrative user logs in and operates the product, an arbitrary script may be executed on the web brow","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper neutralization of special elements used in an OS Command (CWE-79) is a common web vulnerability that occurs when user-supplied data is used to construct a command or query without proper validation or encoding. This allows attackers to inject malicious commands or scripts. Vendor: ELECOM Cause: The vulnerability occurs when the ELECOM wireless LAN router fails to properly sanitize or encode user-supplied input in the administrative interface, allowing a malicious administrator to inject arbitrary script content. Impact: Successful exploitation could allow an attacker to execute arbitrary scripts on the web browser of other administrative users, potentially leading to unauthorized access, data theft, or system compromise."
CVE-2024-21584,"Pleasanter 1.3.49.0 and earlier contains a cross-site scripting vulnerability. If an attacker tricks the user to access the product with a specially crafted URL and perform a specific operation, an arbitrary script may be executed on the web browser of the user.
",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pleasanter 1.3.49.0 and earlier contains a cross-site scripting vulnerability. If an attacker tricks the user to access the product with a specially crafted URL and perform a specific operation, an arbitrary script may be executed on the web browser of the user.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Pleasanter 1.3.49.0 and earlier contains a cross-site scripting vulnerability. If an attacker tricks the user to access the product with a specially crafted URL and perform a specific operation, an arbitrary script may be executed on the web browser of the user.  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2024-03-12T08:15:45.217,6.1,MEDIUM,nvd,"pleasanter 13490 and earlier contains a crosssite scripting vulnerability if an attacker tricks the user to access the product with a specially crafted url and perform a specific operation an arbitrary script may be executed on the web browser of the user
","Pleasanter 1.3.49.0 and earlier contains a cross-site scripting vulnerability. If an attacker tricks the user to access the product with a specially crafted URL and perform a specific operation, an arbitrary script may be executed on the web browser of the user.
",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2024-29203,TinyMCE is an open source rich text editor. A��cross-site scripting (XSS) vulnerability was discovered in TinyMCE���s content insertion code.  This allowed `iframe` elements containing malicious code to execute when inserted into the editor.  These `iframe` elements are restricted in their permissions,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  TinyMCE is an open source rich text editor. A cross-site scripting (XSS) vulnerability was discovered in TinyMCE���s content insertion code. This allowed iframe elements containing malicious code to execute when inserted into the editor. These iframe elements are restricted in their permissions  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  TinyMCE is an open source rich text editor. A cross-site scripting (XSS) vulnerability was discovered in TinyMCE���s content insertion code. This allowed iframe elements containing malicious code to execute when inserted into the editor. These iframe elements are restricted in their permissions  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2024-03-26T14:15:08.747,4.3,MEDIUM,nvd,tinymce is an open source rich text editor a��crosssite scripting xss vulnerability was discovered in tinymces content insertion code  this allowed iframe elements containing malicious code to execute when inserted into the editor  these iframe elements are restricted in their permissions,TinyMCE is an open source rich text editor. A��cross-site scripting (XSS) vulnerability was discovered in TinyMCE���s content insertion code.  This allowed `iframe` elements containing malicious code to execute when inserted into the editor.  These `iframe` elements are restricted in their permissions,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2024-31204,"mailcow: dockerized is an open source groupware/email suite based on docker. A security vulnerability has been identified in mailcow affecting versions prior to 2024-04. This vulnerability resides in the exception handling mechanism, specifically when not operating in DEV_MODE. The system saves exce",Opera Browser,CWE-399,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  mailcow: dockerized is an open source groupware/email suite based on docker. A security vulnerability has been identified in mailcow affecting versions prior to 2024-04. This vulnerability resides in the exception handling mechanism, specifically when not operating in DEV_MODE. The system saves exce  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  mailcow: dockerized is an open source groupware/email suite based on docker. A security vulnerability has been identified in mailcow affecting versions prior to 2024-04. This vulnerability resides in the exception handling mechanism, specifically when not operating in DEV_MODE. The system saves exce  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399",2024-04-04T21:15:16.773,6.1,MEDIUM,nvd,mailcow dockerized is an open source groupwareemail suite based on docker a security vulnerability has been identified in mailcow affecting versions prior to 202404 this vulnerability resides in the exception handling mechanism specifically when not operating in dev_mode the system saves exce,"mailcow: dockerized is an open source groupware/email suite based on docker. A security vulnerability has been identified in mailcow affecting versions prior to 2024-04. This vulnerability resides in the exception handling mechanism, specifically when not operating in DEV_MODE. The system saves exce",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 399
CVE-2024-5692,"On Windows 10, when using the 'Save As' functionality, an attacker could have tricked the browser into saving the file with a disallowed extension such as `.url` by including an invalid character in the extension. *Note:* This issue only affected Windows operating systems. Other operating systems ar",Opera Browser,CWE-476,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: CWE-476: NULL Pointer Dereference Vendor: Microsoft Cause: The vulnerability occurs when the browser fails to handle a specially crafted file with an invalid character in the file extension, leading to a null pointer dereference. Impact: An attacker could potentially trick the browser into saving files with disallowed extensions, potentially leading to arbitrary code execution or privilege escalation.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  On Windows 10, when using the 'Save As' functionality, an attacker could have tricked the browser into saving the file with a disallowed extension such as .url by including an invalid character in the extension. *Note:* This issue only affected Windows operating systems. Other operating systems ar  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: CWE-476: NULL Pointer Dereference Vendor: Microsoft Cause: The vulnerability occurs when the browser fails to handle a specially crafted file with an invalid character in the file extension, leading to a null pointer dereference. Impact: An attacker could potentially trick the browser into saving files with disallowed extensions, potentially leading to arbitrary code execution or privilege escalation.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  On Windows 10, when using the 'Save As' functionality, an attacker could have tricked the browser into saving the file with a disallowed extension such as .url by including an invalid character in the extension. *Note:* This issue only affected Windows operating systems. Other operating systems ar  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: CWE-476: NULL Pointer Dereference Vendor: Microsoft Cause: The vulnerability occurs when the browser fails to handle a specially crafted file with an invalid character in the file extension, leading to a null pointer dereference. Impact: An attacker could potentially trick the browser into saving files with disallowed extensions, potentially leading to arbitrary code execution or privilege escalation.",2024-06-11T13:15:50.770,6.5,MEDIUM,nvd,on windows 10 when using the save as functionality an attacker could have tricked the browser into saving the file with a disallowed extension such as url by including an invalid character in the extension note this issue only affected windows operating systems other operating systems ar,"On Windows 10, when using the 'Save As' functionality, an attacker could have tricked the browser into saving the file with a disallowed extension such as `.url` by including an invalid character in the extension. *Note:* This issue only affected Windows operating systems. Other operating systems ar","<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476 Explanation: CWE-476: NULL Pointer Dereference Vendor: Microsoft Cause: The vulnerability occurs when the browser fails to handle a specially crafted file with an invalid character in the file extension, leading to a null pointer dereference. Impact: An attacker could potentially trick the browser into saving files with disallowed extensions, potentially leading to arbitrary code execution or privilege escalation."
CVE-2024-35225,Jupyter Server Proxy allows users to run arbitrary external processes alongside their notebook server and provide authenticated web access to them. Versions of 3.x prior to 3.2.4 and 4.x prior to 4.2.0 have a reflected cross-site scripting (XSS) issue. The `/proxy` endpoint accepts a `host` path seg,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Jupyter Server Proxy allows users to run arbitrary external processes alongside their notebook server and provide authenticated web access to them. Versions of 3.x prior to 3.2.4 and 4.x prior to 4.2.0 have a reflected cross-site scripting (XSS) issue. The /proxy endpoint accepts a host path seg  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Jupyter Server Proxy allows users to run arbitrary external processes alongside their notebook server and provide authenticated web access to them. Versions of 3.x prior to 3.2.4 and 4.x prior to 4.2.0 have a reflected cross-site scripting (XSS) issue. The /proxy endpoint accepts a host path seg  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2024-06-11T22:15:09.520,9.6,CRITICAL,nvd,jupyter server proxy allows users to run arbitrary external processes alongside their notebook server and provide authenticated web access to them versions of 3x prior to 324 and 4x prior to 420 have a reflected crosssite scripting xss issue the proxy endpoint accepts a host path seg,Jupyter Server Proxy allows users to run arbitrary external processes alongside their notebook server and provide authenticated web access to them. Versions of 3.x prior to 3.2.4 and 4.x prior to 4.2.0 have a reflected cross-site scripting (XSS) issue. The `/proxy` endpoint accepts a `host` path seg,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2024-8383,Firefox normally asks for confirmation before asking the operating system to find an application to handle a scheme that the browser does not support. It did not ask before doing so for the Usenet-related schemes news: and snews:. Since most operating systems don't have a trusted newsreader installe,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Firefox normally asks for confirmation before asking the operating system to find an application to handle a scheme that the browser does not support. It did not ask before doing so for the Usenet-related schemes news: and snews:. Since most operating systems don't have a trusted newsreader installe  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Firefox normally asks for confirmation before asking the operating system to find an application to handle a scheme that the browser does not support. It did not ask before doing so for the Usenet-related schemes news: and snews:. Since most operating systems don't have a trusted newsreader installe  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2024-09-03T13:15:05.687,7.5,HIGH,nvd,firefox normally asks for confirmation before asking the operating system to find an application to handle a scheme that the browser does not support it did not ask before doing so for the usenetrelated schemes news and snews since most operating systems dont have a trusted newsreader installe,Firefox normally asks for confirmation before asking the operating system to find an application to handle a scheme that the browser does not support. It did not ask before doing so for the Usenet-related schemes news: and snews:. Since most operating systems don't have a trusted newsreader installe,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2024-8388,Multiple prompts and panels from both Firefox and the Android OS could be used to obscure the notification announcing the transition to fullscreen mode after the fix for CVE-2023-6870 in Firefox 121. This could lead to spoofing the browser UI if the sudden appearance of the prompt distracted the use,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1138,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple prompts and panels from both Firefox and the Android OS could be used to obscure the notification announcing the transition to fullscreen mode after the fix for CVE-2023-6870 in Firefox 121. This could lead to spoofing the browser UI if the sudden appearance of the prompt distracted the use  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1138","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Multiple prompts and panels from both Firefox and the Android OS could be used to obscure the notification announcing the transition to fullscreen mode after the fix for CVE-2023-6870 in Firefox 121. This could lead to spoofing the browser UI if the sudden appearance of the prompt distracted the use  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1138",2024-09-03T13:15:05.980,5.3,MEDIUM,nvd,multiple prompts and panels from both firefox and the android os could be used to obscure the notification announcing the transition to fullscreen mode after the fix for cve20236870 in firefox 121 this could lead to spoofing the browser ui if the sudden appearance of the prompt distracted the use,Multiple prompts and panels from both Firefox and the Android OS could be used to obscure the notification announcing the transition to fullscreen mode after the fix for CVE-2023-6870 in Firefox 121. This could lead to spoofing the browser UI if the sudden appearance of the prompt distracted the use,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 1138
CVE-2024-45462,The logout operation in the CloudStack web interface does not expire the user session completely which is valid until expiry by time or restart of the backend service. An attacker that has access to a user's browser can use an unexpired session to gain access to resources owned by the logged out use,Opera Browser,CWE-522,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: CWE-522 is a vulnerability where an application does not properly manage the session or session tokens, leading to the potential for unauthorized access to resources or data. This can occur when sessions are not properly invalidated or terminated, allowing an attacker to maintain access through an unexpired session. Vendor: Apache Software Foundation Cause: The CloudStack web interface does not properly expire user sessions when a user logs out, leaving the session active until it expires by time or the backend service is restarted. Impact: An attacker with access to a user's browser can maintain access to resources owned by the logged-out user until the session expires or the backend service is restarted.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The logout operation in the CloudStack web interface does not expire the user session completely which is valid until expiry by time or restart of the backend service. An attacker that has access to a user's browser can use an unexpired session to gain access to resources owned by the logged out use  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: CWE-522 is a vulnerability where an application does not properly manage the session or session tokens, leading to the potential for unauthorized access to resources or data. This can occur when sessions are not properly invalidated or terminated, allowing an attacker to maintain access through an unexpired session. Vendor: Apache Software Foundation Cause: The CloudStack web interface does not properly expire user sessions when a user logs out, leaving the session active until it expires by time or the backend service is restarted. Impact: An attacker with access to a user's browser can maintain access to resources owned by the logged-out user until the session expires or the backend service is restarted.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  The logout operation in the CloudStack web interface does not expire the user session completely which is valid until expiry by time or restart of the backend service. An attacker that has access to a user's browser can use an unexpired session to gain access to resources owned by the logged out use  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: CWE-522 is a vulnerability where an application does not properly manage the session or session tokens, leading to the potential for unauthorized access to resources or data. This can occur when sessions are not properly invalidated or terminated, allowing an attacker to maintain access through an unexpired session. Vendor: Apache Software Foundation Cause: The CloudStack web interface does not properly expire user sessions when a user logs out, leaving the session active until it expires by time or the backend service is restarted. Impact: An attacker with access to a user's browser can maintain access to resources owned by the logged-out user until the session expires or the backend service is restarted.",2024-10-16T08:15:05.933,6.3,MEDIUM,nvd,the logout operation in the cloudstack web interface does not expire the user session completely which is valid until expiry by time or restart of the backend service an attacker that has access to a users browser can use an unexpired session to gain access to resources owned by the logged out use,The logout operation in the CloudStack web interface does not expire the user session completely which is valid until expiry by time or restart of the backend service. An attacker that has access to a user's browser can use an unexpired session to gain access to resources owned by the logged out use,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 522 Explanation: CWE-522 is a vulnerability where an application does not properly manage the session or session tokens, leading to the potential for unauthorized access to resources or data. This can occur when sessions are not properly invalidated or terminated, allowing an attacker to maintain access through an unexpired session. Vendor: Apache Software Foundation Cause: The CloudStack web interface does not properly expire user sessions when a user logs out, leaving the session active until it expires by time or the backend service is restarted. Impact: An attacker with access to a user's browser can maintain access to resources owned by the logged-out user until the session expires or the backend service is restarted."
CVE-2024-11698,"A flaw in handling fullscreen transitions may have inadvertently caused the application to become stuck in fullscreen mode when a modal dialog was opened during the transition. This issue left users unable to exit fullscreen mode using standard actions like pressing ""Esc"" or accessing right-click me",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A flaw in handling fullscreen transitions may have inadvertently caused the application to become stuck in fullscreen mode when a modal dialog was opened during the transition. This issue left users unable to exit fullscreen mode using standard actions like pressing ""Esc"" or accessing right-click me  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A flaw in handling fullscreen transitions may have inadvertently caused the application to become stuck in fullscreen mode when a modal dialog was opened during the transition. This issue left users unable to exit fullscreen mode using standard actions like pressing ""Esc"" or accessing right-click me  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476",2024-11-26T14:15:19.330,9.8,CRITICAL,nvd,a flaw in handling fullscreen transitions may have inadvertently caused the application to become stuck in fullscreen mode when a modal dialog was opened during the transition this issue left users unable to exit fullscreen mode using standard actions like pressing esc or accessing rightclick me,"A flaw in handling fullscreen transitions may have inadvertently caused the application to become stuck in fullscreen mode when a modal dialog was opened during the transition. This issue left users unable to exit fullscreen mode using standard actions like pressing ""Esc"" or accessing right-click me",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 476
CVE-2025-0059,Applications based on SAP GUI for HTML in SAP NetWeaver Application Server ABAP store user input in the local browser storage to improve usability. An attacker with administrative privileges or access to the victim���s user directory on the Operating System level would be able to read this data. Depen,Opera Browser,Unknown,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') Vendor: SAP Cause: The vulnerability occurs when user input is not properly sanitized before being used in a system command, allowing attackers to execute arbitrary commands. Impact: An attacker could potentially execute arbitrary commands with system privileges, leading to a complete compromise of the system.","and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Applications based on SAP GUI for HTML in SAP NetWeaver Application Server ABAP store user input in the local browser storage to improve usability. An attacker with administrative privileges or access to the victim���s user directory on the Operating System level would be able to read this data. Depen  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') Vendor: SAP Cause: The vulnerability occurs when user input is not properly sanitized before being used in a system command, allowing attackers to execute arbitrary commands. Impact: An attacker could potentially execute arbitrary commands with system privileges, leading to a complete compromise of the system.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Applications based on SAP GUI for HTML in SAP NetWeaver Application Server ABAP store user input in the local browser storage to improve usability. An attacker with administrative privileges or access to the victim���s user directory on the Operating System level would be able to read this data. Depen  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') Vendor: SAP Cause: The vulnerability occurs when user input is not properly sanitized before being used in a system command, allowing attackers to execute arbitrary commands. Impact: An attacker could potentially execute arbitrary commands with system privileges, leading to a complete compromise of the system.",2025-01-14T01:15:16.190,6.0,MEDIUM,nvd,applications based on sap gui for html in sap netweaver application server abap store user input in the local browser storage to improve usability an attacker with administrative privileges or access to the victims user directory on the operating system level would be able to read this data depen,Applications based on SAP GUI for HTML in SAP NetWeaver Application Server ABAP store user input in the local browser storage to improve usability. An attacker with administrative privileges or access to the victim���s user directory on the Operating System level would be able to read this data. Depen,"<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79 Explanation: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') Vendor: SAP Cause: The vulnerability occurs when user input is not properly sanitized before being used in a system command, allowing attackers to execute arbitrary commands. Impact: An attacker could potentially execute arbitrary commands with system privileges, leading to a complete compromise of the system."
CVE-2025-22221,VMware Aria Operation for Logs contains a stored cross-site scripting vulnerability.��A malicious actor with admin privileges to VMware Aria Operations for Logs may be able to inject a malicious script that could be executed in a victim's browser when performing a delete action in the Agent Configura,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  VMware Aria Operation for Logs contains a stored cross-site scripting vulnerability. A malicious actor with admin privileges to VMware Aria Operations for Logs may be able to inject a malicious script that could be executed in a victim's browser when performing a delete action in the Agent Configura  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  VMware Aria Operation for Logs contains a stored cross-site scripting vulnerability. A malicious actor with admin privileges to VMware Aria Operations for Logs may be able to inject a malicious script that could be executed in a victim's browser when performing a delete action in the Agent Configura  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79",2025-01-30T16:15:31.257,5.2,MEDIUM,nvd,vmware aria operation for logs contains a stored crosssite scripting vulnerability��a malicious actor with admin privileges to vmware aria operations for logs may be able to inject a malicious script that could be executed in a victims browser when performing a delete action in the agent configura,VMware Aria Operation for Logs contains a stored cross-site scripting vulnerability.��A malicious actor with admin privileges to VMware Aria Operations for Logs may be able to inject a malicious script that could be executed in a victim's browser when performing a delete action in the Agent Configura,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2025-20180,"A vulnerability in the web-based management interface of Cisco AsyncOS Software for Cisco Secure Email and Web Manager and Secure Email Gateway could allow an authenticated, remote attacker to conduct a stored cross-site scripting (XSS) attack against a user of the interface.

This vulnerability i",Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in the web-based management interface of Cisco AsyncOS Software for Cisco Secure Email and Web Manager and Secure Email Gateway could allow an authenticated, remote attacker to conduct a stored cross-site scripting (XSS) attack against a user of the interface.","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  A vulnerability in the web-based management interface of Cisco AsyncOS Software for Cisco Secure Email and Web Manager and Secure Email Gateway could allow an authenticated, remote attacker to conduct a stored cross-site scripting (XSS) attack against a user of the interface.",2025-02-05T17:15:25.370,4.8,MEDIUM,nvd,"a vulnerability in the webbased management interface of cisco asyncos software for cisco secure email and web manager and secure email gateway could allow an authenticated remote attacker to conduct a stored crosssite scripting xss attack against a user of the interface

this vulnerability i","A vulnerability in the web-based management interface of Cisco AsyncOS Software for Cisco Secure Email and Web Manager and Secure Email Gateway could allow an authenticated, remote attacker to conduct a stored cross-site scripting (XSS) attack against a user of the interface.

This vulnerability i",<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 79
CVE-2020-6158,Opera Mini for Android before version 52.2 is vulnerable to an address bar spoofing attack. The vulnerability allows a malicious page to trick the browser into showing an address of a different page. This may allow the malicious page to impersonate another page and trick a user into providing sensit,Opera Browser,Unknown,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362,"and impact of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Mini for Android before version 52.2 is vulnerable to an address bar spoofing attack. The vulnerability allows a malicious page to trick the browser into showing an address of a different page. This may allow the malicious page to impersonate another page and trick a user into providing sensit  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362","of the vulnerability. Provide the CWE ID (only the CWE ID of the vulnerability), a brief explanation, the vendor name, the cause of the vulnerability, and its impact. Description:  Opera Mini for Android before version 52.2 is vulnerable to an address bar spoofing attack. The vulnerability allows a malicious page to trick the browser into showing an address of a different page. This may allow the malicious page to impersonate another page and trick a user into providing sensit  Rules for returning the vendor: - Return only the official/primary vendor name - For open source projects, return the organization maintaining it - If multiple vendors are mentioned, return the one responsible for the vulnerable component - Normalize variations of the same vendor name - If no clear vendor is found, return ""Unknown"" - Use official vendor names where possible and keep the same name for vulnerabilities of the same vendor Format your response as follows: CWE ID: <CWE-ID number only> Explanation: <brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362",2025-02-21T14:15:29.843,4.7,MEDIUM,nvd,opera mini for android before version 522 is vulnerable to an address bar spoofing attack the vulnerability allows a malicious page to trick the browser into showing an address of a different page this may allow the malicious page to impersonate another page and trick a user into providing sensit,Opera Mini for Android before version 52.2 is vulnerable to an address bar spoofing attack. The vulnerability allows a malicious page to trick the browser into showing an address of a different page. This may allow the malicious page to impersonate another page and trick a user into providing sensit,<brief explanation of the vulnerability> Vendor: <vendor name> Cause: <cause of the vulnerability> Impact: <impact of the vulnerability><|eot_id|> CWE ID: 362